CREATE OR REPLACE PROCEDURE        PRC_CO_PROMESAPAGO
	   (IN_VENTANA IN NUMBER DEFAULT 0)
AS
/*    Funcion        :Generar datos de Promesa de Pago					             */
/*    Autor          :Rodrigo Maturana 		                                         */
/*    Fecha          :03/05/2002                                                     */
/*    Modificaciones :																 */
/*    Ult.Paso Pruduc:04/07/2002 (TMC --> BREGO)		  	 	  					*/
/*                    04/07/2002 (TMC -->TETHYS)									*/
/*                    04/07/2002 (MPR --> Puerto Rico)								*/
/*                   :12/06/2002 (DEIMOS)											 */

	  		 VAR_FACTOR		      NUMBER(5,2);
	 		 VAR_FEC_VENTANA 	  DATE;
			 VAR_SALDO_NO_PROMESA NUMBER(14,4);
BEGIN

	 	 VAR_FEC_VENTANA := SYSDATE + IN_VENTANA;

--LIMPIAR TABLA ANTES DE USAR.
		 DELETE
		 FROM CO_PASOPROMESA;

--INSERTAR DATOS BASICOS.

	 	 INSERT INTO CO_PASOPROMESA
	 		  (COD_CLIENTE,
			  NOM_CLIENTE,
			  NUM_CELULAR,
  	   		  TEF_CLIENTE1,
  	   		  TEF_CLIENTE2,
  	   		  FEC_PAGO,
  	   		  MTO_PAGO,
	   		  COD_GESTION,
	   		  EST_CLIENTE,
  	   		  FEC_INGRESO,
  	   		  DEU_INGRESO,
  	   		  DEU_VENCIDA,
  	   		  FEC_DEUDVENC)
	 	 SELECT C.COD_CLIENTE
	   			,NOM_CLIENTE ||' '|| NOM_APECLIEN1 ||' '|| NOM_APECLIEN2
				,NUM_CELULAR
				,TEF_CLIENTE1
				,TEF_CLIENTE2
				,D.FEC_PAGO
				,D.MTO_PAGO
				,M.COD_GESTION
				,DES_VALOR
				,P.FEC_INGRESO
				,P.DEU_INGRESO
				,DEU_VENCIDA
				,FEC_DEUDVENC
	 	 FROM GE_CLIENTES C
	 	  	  ,CO_MOROSOS M
	 	  	  ,CO_CODIGOS G
	 	  	  ,CO_PROMESAPAGO P
	 	  	  ,CO_DETPROMESA D
	 	 WHERE C.COD_CLIENTE = M.COD_CLIENTE
	 	   	   AND G.NOM_TABLA = 'CO_MOROSOS'
		   	   AND G.NOM_COLUMNA = 'COD_GESTION'
		   	   AND G.COD_VALOR  = M.COD_GESTION
		   	   AND C.COD_CLIENTE = P.COD_CLIENTE
		   	   AND P.COD_CLIENTE = D.COD_CLIENTE
		   	   AND P.FEC_INGRESO = D.FEC_INGRESO
		   	   AND D.FEC_PAGO IN (SELECT MAX(A.FEC_PAGO)
			   	  		  	  	 FROM CO_DETPROMESA A
				  			 	 WHERE P.COD_CLIENTE = A.COD_CLIENTE
				  			 	   AND P.FEC_INGRESO = A.FEC_INGRESO
								   AND A.FEC_PAGO 	<= VAR_FEC_VENTANA
							 	 );

--ACTUALIZA CANTIDAD DE PAGOS FUTUROS

		 UPDATE CO_PASOPROMESA P
	 	 SET PAG_FUTUROS = (SELECT COUNT(D.FEC_PAGO)
				  	   	   FROM CO_DETPROMESA D
				  	   	   WHERE D.COD_CLIENTE = P.COD_CLIENTE
				  	   		 AND D.FEC_INGRESO = P.FEC_INGRESO
				  			 AND D.FEC_PAGO    > VAR_FEC_VENTANA
						   );

--ACTUALIZA SALDO PROMESA

	     UPDATE CO_PASOPROMESA P
	 	 SET SDO_PROMESA = (SELECT NVL(SUM(IMPORTE_DEBE - IMPORTE_HABER),0)
				   	   	   FROM  CO_CARTERA C
				   	   	   WHERE  P.COD_CLIENTE   = C.COD_CLIENTE
				  	   		  AND C.IND_FACTURADO = 1
					  		  AND C.FEC_VENCIMIE <= P.FEC_INGRESO
					  		  AND C.COD_TIPDOCUM NOT IN (SELECT	TO_NUMBER(COD_VALOR)
						  			   			 	 	FROM	CO_CODIGOS
												 		WHERE	NOM_TABLA = 'CO_CARTERA'
												 				AND	NOM_COLUMNA = 'COD_TIPDOCUM')
				   	       );

--ACTUALIZA DEUDA NO PROMESA.

  		 UPDATE CO_PASOPROMESA P
	 	 SET DEU_NOPROMESA = (SELECT NVL(SUM(IMPORTE_DEBE - IMPORTE_HABER),0)
				   	   	   FROM  CO_CARTERA C
				   	   	   WHERE  P.COD_CLIENTE   = C.COD_CLIENTE
				  	   		  AND C.IND_FACTURADO = 1
					  		  AND C.FEC_VENCIMIE  > P.FEC_INGRESO
					  		  AND C.COD_TIPDOCUM NOT IN (SELECT	TO_NUMBER(COD_VALOR)
						  			   			 	 	FROM	CO_CODIGOS
												 		WHERE	NOM_TABLA = 'CO_CARTERA'
												 				AND	NOM_COLUMNA = 'COD_TIPDOCUM')
				   	       );


	     --UPDATE CO_PASOPROMESA
	 	 --SET DEU_NOPROMESA = (DEU_VENCIDA - DEU_INGRESO);

--ACTUALIZA ACCION SIGERIDA.
	 	 BEGIN
	     	  SELECT VAL_PARAMETRO
		 	  INTO VAR_FACTOR
	 	 	  FROM GED_PARAMETROS
		 	  WHERE COD_MODULO = 'CO'
		  	  		AND NOM_PARAMETRO = 'PORCENTAJE_REPONER';

			  EXCEPTION
			  		   WHEN NO_DATA_FOUND THEN
					   		--ROLLBACK;
					   		RAISE_APPLICATION_ERROR (-20301,'Sin PORCENTAJE_REPONER en GED_PARAMETROS');
							RETURN;
		 END;

		 VAR_FACTOR := VAR_FACTOR / 100;

		 UPDATE CO_PASOPROMESA
		 SET ACC_SUGERIDA = 'LLAMAR';

		 UPDATE CO_PASOPROMESA
		 SET ACC_SUGERIDA = ACC_SUGERIDA || '-' || 'REPONER'
	 	 WHERE COD_GESTION IN ('SS','SU')
		 	   AND SDO_PROMESA <= (VAR_FACTOR * DEU_INGRESO)
			   AND DEU_NOPROMESA <= (VAR_FACTOR * DEU_INGRESO);

		 UPDATE CO_PASOPROMESA
		 SET ACC_SUGERIDA = ACC_SUGERIDA || '-' || 'SUSPENDER'
	 	 WHERE COD_GESTION IN ('MR')
		 	   AND SDO_PROMESA > (VAR_FACTOR * DEU_INGRESO);

		 UPDATE CO_PASOPROMESA
		 SET ACC_SUGERIDA = ACC_SUGERIDA || '-' || 'REPROGRAMAR'
	 	 WHERE SDO_PROMESA >= (VAR_FACTOR * DEU_INGRESO);

		 COMMIT;

		 EXCEPTION
		 		  WHEN OTHERS THEN
				  	   --ROLLBACK;
				  	   RAISE_APPLICATION_ERROR (-20302,SQLCODE||' '||SQLERRM);
					   RETURN;
END PRC_CO_PROMESAPAGO;
/
SHOW ERRORS
