CREATE OR REPLACE PROCEDURE CO_IMPUTACION_NO_PAGOCARR
IS

v_nCodEvento		SC_EVENTO.COD_EVENTO%TYPE;
v_nCodDominio		SC_EVENTO.COD_DOMINIO_CTO%TYPE;
v_vIdLote			SC_ENT_LOTE.ID_LOTE%TYPE;
v_nCodError			SC_ERROR_INGRESO.COD_ERROR%TYPE;
v_vCodOperadoraScl	SC_ENT_LOTE.COD_OPERADORA_SCL%TYPE;

CURSOR Pago IS
SELECT DISTINCT
	IND_ORDEN,
	TO_CHAR( FEC_LIQTRAFICO, 'YYYYMM' ) AS COD_PERIODO,
	TO_CHAR( FEC_LIQTRAFICO, 'DDMMYYYY' ) AS COD_PERIODO1
  FROM FA_ACUMFORLIQ
 WHERE FEC_IMPUTCONTABLE IS NULL		-- no esta contabilizado
   AND FEC_LIQTRAFICO < TRUNC( SYSDATE )	-- se ha liquidado antes de hoy
   AND IND_ALQUILER = 9; 			-- Pagos cancelados por el proceso forcob
--
--
BEGIN
	v_nCodEvento := 66;

	SELECT COD_OPERADORA_SCL
	  INTO v_vCodOperadoraScl
	  FROM GE_OPERADORA_SCL_LOCAL;

	-- inserto 1 : obtencion del dominio a partir del evento
	--
	SELECT COD_DOMINIO_CTO
	  INTO v_nCodDominio
	  FROM SC_EVENTO
	 WHERE COD_EVENTO = v_nCodEvento ;

	FOR B IN Pago LOOP

		v_vIdLote  := B.IND_ORDEN || '/' || B.COD_PERIODO;

		INSERT INTO SC_ENT_CAB_LOTE
		(
			COD_EVENTO,
			ID_LOTE,
			PER_CONTABLE,
			NOM_USUARIO_LOTE,
			FEC_LOTE,
			COD_OPERADORA_SCL
		)
		VALUES
		(
			v_nCodEvento,
			v_vIdLote  ,
			B.COD_PERIODO,
			USER,SYSDATE,
			v_vCodOperadoraScl
		);

		INSERT INTO SC_ENT_LOTE
		(
			COD_EVENTO,
			ID_LOTE,
			COD_CONCEPTO,
			IMP_MOVIMIENTO,
			DES_TRANSACCION,
			COD_OPERADORA_SCL
		)
		SELECT v_nCodEvento,
			   v_vIdLote  ,
			   C.COD_CONCEPTO,
			   SUM( A.IMP_CONSUMIDO ),
			   C.DES_CONCEPTO,
			   v_vCodOperadoraScl
		  FROM FA_ACUMFORLIQ A, SC_CONCEPTO C
		 WHERE 1 = 1
		   AND A.IND_ALQUILER = 9 	-- pagos cancelados por el proceso FORCOB
		   AND A.FEC_IMPUTCONTABLE IS NULL
		   AND A.FEC_LIQTRAFICO < TRUNC(SYSDATE)
		   AND A.IND_ORDEN = B.IND_ORDEN
		   AND TRUNC( A.FEC_LIQTRAFICO ) = TO_DATE( B.COD_PERIODO1, 'DDMMYYYY' )
		   AND C.COD_DOMINIO_CTO = v_nCodDominio
		   AND C.COD_CONCEPTO = LPAD( A.COD_OPERADOR, 6, '0' )
		GROUP BY A.COD_OPERADOR,
			 C.COD_CONCEPTO,
			 A.FEC_LIQTRAFICO,
			 A.IND_ORDEN,
			 C.DES_CONCEPTO;

		v_nCodError := 0;

		SC_P_INGRESA_LOTE( TO_CHAR( v_nCodEvento ), v_vIdLote, v_vCodOperadoraScl );

		SELECT COUNT(1)
		  INTO v_nCodError
		  FROM SC_ERROR_INGRESO
		 WHERE COD_EVENTO = v_nCodEvento
		   AND ID_LOTE = v_vIdLote
		   AND COD_OPERADORA_SCL = v_vCodOperadoraScl;

		IF v_nCodError = 0 THEN

			/* ACTUALIZO TRANSACCION DE CO_PAGOSPAC EN SU FECHA DE IMPUTACION CONTABLE */
			UPDATE FA_ACUMFORLIQ
			   SET FEC_IMPUTCONTABLE = SYSDATE
			 WHERE FEC_IMPUTCONTABLE IS NULL
			   AND FEC_LIQTRAFICO < TRUNC( SYSDATE )
			   AND IND_ORDEN = B.IND_ORDEN
			   AND IND_ALQUILER = 9 -- pagos cancelados por el proceso FORCOB
			   AND TO_CHAR( FEC_LIQTRAFICO, 'DDMMYYYY' ) =  B.COD_PERIODO1;

			COMMIT;
		ELSE

			ROLLBACK;
			/* INGRESO DE LOTE GENERO ERROR */
			RAISE_APPLICATION_ERROR( -20102, 'Error al generar Imputacion contable PAC PL SC_P_INGRESA_LOTE' );
		END IF;

	END LOOP;

	DBMS_OUTPUT.PUT_LINE( 'Proceso Termino Ok' );

END CO_IMPUTACION_NO_PAGOCARR;
/
SHOW ERRORS
