CREATE OR REPLACE PROCEDURE        GA_P_MODIFICA_PTHINMEDIATO (VP_PRODUCTO IN NUMBER,
						VP_HOLDING IN NUMBER,
                                                VP_PLANTARIF IN VARCHAR2,
                                                VP_FECSYS IN OUT DATE,
						VP_PROC IN OUT VARCHAR2,
						VP_TABLA IN OUT VARCHAR2,
						VP_ACT IN OUT VARCHAR2,
						VP_SQLCODE IN OUT VARCHAR2,
						VP_SQLERRM IN OUT VARCHAR2,
                                                VP_ERROR IN OUT VARCHAR2) is
--
-- Procedimiento que refleja el cambio y efectividad deL NUEVO PLANTARIFARIO
-- para holding
-- en las tablas de interfase con tarificacion
--
--            Los posibles retornos del procedimiento son :
--                - '0' Actualizaciones realizadas correctamente
--                - '4' Error en el proceso
--
--ABONADOS CELULAR
	CURSOR ABOCEL IS
           SELECT NUM_ABONADO,COD_CICLO, COD_CLIENTE
           FROM GA_INTARCEL
           WHERE
                 TIP_PLANTARIF = 'H'
                AND COD_GRUPO   = VP_HOLDING
                AND VP_FECSYS BETWEEN FEC_DESDE
			AND FEC_HASTA;
--ABONADOS BEEPER
	CURSOR ABOBEEP IS
		SELECT NUM_ABONADO, COD_CICLO, COD_CLIENTE
           FROM GA_INTARBEEP
           WHERE
                 TIP_PLANTARIF = 'H'
                AND COD_GRUPO   = VP_HOLDING
                AND VP_FECSYS BETWEEN FEC_DESDE
			AND FEC_HASTA;
--ABONADOS TREK
	CURSOR ABOTREK IS
		SELECT NUM_ABONADO, COD_CICLO, COD_CLIENTE
           FROM GA_INTARTREK
           WHERE
		TIP_PLANTARIF = 'H'
                AND COD_GRUPO   = VP_HOLDING
                AND VP_FECSYS BETWEEN FEC_DESDE
			AND FEC_HASTA;
        V_CICLO FA_CICLOS.COD_CICLO%TYPE;
	V_CLIENTE GE_CLIENTES.COD_CLIENTE%TYPE;
	V_ABONADO GA_ABOCEL.NUM_ABONADO%TYPE;
	ERROR_PROCESO EXCEPTION;
BEGIN
	VP_PROC := 'GA_P_MODIFICA_PTINMEDIATO';
	--LEEMOS DATOS DE ABONADOS CELULARES PERTENECIENTES A ESTE CLIENTE
	VP_TABLA := 'GA_INTARCEL';
	IF VP_PRODUCTO = 1 THEN
		OPEN ABOCEL;
		LOOP
			dbms_output.put_line ('FECH ABOCEL' );
			FETCH ABOCEL INTO V_ABONADO, V_CICLO, V_CLIENTE;
			EXIT WHEN ABOCEL%NOTFOUND;
			--LLAMAMOS AL PL DE CAMBIO DE CICLO POR ABONADO
			GA_P_CAMBIO_PLANTARIF2(VP_PRODUCTO, V_CLIENTE, V_ABONADO, VP_PLANTARIF,
					V_CICLO, VP_HOLDING, VP_FECSYS, VP_PROC, VP_TABLA, VP_ACT, VP_SQLCODE,
					VP_SQLERRM, VP_ERROR);
			IF VP_ERROR = '4' THEN
				-- SI FALLA AUNQUE SOLO SEA EN UNO NOS SALIMOS
				RAISE ERROR_PROCESO;
			END IF;
		END LOOP;
		CLOSE ABOCEL;
	--CAMBIAMOS EL CICLO A LOS QUE NO ESTEN EN LAS INTAR
	          BEGIN
			dbms_output.put_line ('UPDATE ABOCEL' || VP_PLANTARIF);
			UPDATE GA_ABOCEL SET COD_PLANTARIF = VP_PLANTARIF
			WHERE
	          	TIP_PLANTARIF = 'H'
			AND COD_HOLDING = VP_HOLDING;
			dbms_output.put_line ('MODIFICADO GA_aBOCEL CORRECTAMENTE' || VP_HOLDING);
		   EXCEPTION
			WHEN NO_DATA_FOUND THEN
				dbms_output.put_line ('no data found PARA EMPRESA' || VP_HOLDING);
				NULL;
			WHEN OTHERS THEN
				VP_ERROR := '4';
				RAISE ERROR_PROCESO;
		   END;
	END IF;
	--LEEMOS DATOS DE ABONADOS BEEPERS PERTENECIENTES A ESTE CLIENTE
	VP_TABLA := 'GA_ABOBEEP';
	IF VP_PRODUCTO = 2 THEN
		OPEN ABOBEEP;
		LOOP
			dbms_output.put_line ('FECH ABOBEEP');
			FETCH ABOBEEP INTO V_ABONADO, V_CICLO, V_CLIENTE;
			EXIT WHEN ABOBEEP%NOTFOUND;
			--LLAMAMOS AL PL DE CAMBIO DE CICLO POR ABONADO
			GA_P_CAMBIO_PLANTARIF2(VP_PRODUCTO, V_CLIENTE, V_ABONADO, VP_PLANTARIF,
					V_CICLO, VP_HOLDING, VP_FECSYS, VP_PROC, VP_TABLA, VP_ACT, VP_SQLCODE,
					VP_SQLERRM, VP_ERROR);
			IF VP_ERROR = '4' THEN
				-- SI FALLA AUNQUE SOLO SEA EN UNO NOS SALIMOS
				RAISE ERROR_PROCESO;
			END IF;
		END LOOP;
		CLOSE ABOBEEP;
	          BEGIN
			dbms_output.put_line ('UPDATE ABOBEEP');
			UPDATE GA_ABOBEEP SET COD_PLANTARIF = VP_PLANTARIF
			WHERE
	          	TIP_PLANTARIF = 'H'
			AND COD_HOLDING = VP_HOLDING;
		   EXCEPTION
			WHEN NO_DATA_FOUND THEN
				NULL;
			WHEN OTHERS THEN
				VP_ERROR := '4';
				RAISE ERROR_PROCESO;
		   END;
        END IF;
		--LEEMOS DATOS DE ABONADOS TREK PERTENECIENTES A ESTE CLIENTE
	VP_TABLA := 'GA_ABOTREK';
	IF VP_PRODUCTO = 4 THEN
		OPEN ABOTREK;
		LOOP
			dbms_output.put_line ('FECH ABOTREK');
			FETCH ABOTREK INTO V_ABONADO, V_CICLO, V_CLIENTE;
			EXIT WHEN ABOTREK%NOTFOUND;
			--LLAMAMOS AL PL DE CAMBIO DE CICLO POR ABONADO
			GA_P_CAMBIO_PLANTARIF2(VP_PRODUCTO, V_CLIENTE, V_ABONADO, VP_PLANTARIF,
					V_CICLO, VP_HOLDING, VP_FECSYS, VP_PROC, VP_TABLA, VP_ACT, VP_SQLCODE,
					VP_SQLERRM, VP_ERROR);		IF VP_ERROR = '4' THEN
				-- SI FALLA AUNQUE SOLO SEA EN UNO NOS SALIMOS
				RAISE ERROR_PROCESO;
			END IF;
		END LOOP;
		CLOSE ABOTREK;
	          BEGIN
			dbms_output.put_line ('UPDATE ABOTREK');
			UPDATE GA_ABOTREK SET COD_PLANTARIF = VP_PLANTARIF
			WHERE
	          	TIP_PLANTARIF = 'H'
			AND COD_HOLDING = VP_HOLDING;
		   EXCEPTION
			WHEN NO_DATA_FOUND THEN
				NULL;
			WHEN OTHERS THEN
				VP_ERROR := '4';
				RAISE ERROR_PROCESO;
		   END;
	END IF;
EXCEPTION
 WHEN ERROR_PROCESO THEN
   VP_ERROR := 4;
 WHEN OTHERS THEN
	VP_SQLCODE := SQLCODE;
	VP_SQLERRM := SQLERRM;
        VP_ERROR := '4';
END;
/
SHOW ERRORS
