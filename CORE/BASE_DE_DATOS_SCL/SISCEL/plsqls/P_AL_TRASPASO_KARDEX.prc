CREATE OR REPLACE PROCEDURE P_Al_Traspaso_Kardex IS
VP_MOV_KAR                AL_PDTE_KARDEX%ROWTYPE;
VP_ERROR                NUMBER;
v_glosa_error   VARCHAR2(70);
V_IMP_CARGO              GE_CARGOS.IMP_CARGO%TYPE;
v_mto_subsidio           AL_PDTE_KARDEX.MTO_SUBSIDIO%TYPE;
-- VARIABLES PARA EL MANEJO DE ERRORES
ERROR_PROCESO_GENERAL  EXCEPTION;
-- CURSOR DE AL_PDTE_KARDEX
CURSOR PDTE_KARDEX  IS
  SELECT  NUM_MOVKARDEX,TIP_MOVIMIENTO,IND_ENTSAL,FEC_MOVIMIENTO,FEC_PERIODO,COD_BODEGA,
          TIP_STOCK,COD_ESTADO,COD_ARTICULO,COD_MOTIVO,COD_MONE,IND_PROCE,NUM_MOVIMIENTO,
          COD_ORIG,CORR_APLI,COD_PROVEEDOR,COD_USO,PRC_UNITARIO,CANT_ENTRADA,CANT_SALIDA,
          CANT_SALDO,PRC_PMP,MTO_SUBSIDIO,MTO_COSTOVENTA,NUM_SERIE,COD_USUA,COD_GRPCONCEPTO,
		  COD_GRPCONCEPTO_ARTICULO
  FROM  AL_PDTE_KARDEX;
BEGIN
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
-- COMIENZA RUTINA DE TRASPASO A KARDEX
--Llamamos a los procesos de traspaso masivo de al_pdte_kardex, luego continuamos registro por registro
DBMS_OUTPUT.PUT_LINE('ENTRO traspaso');
VP_ERROR:=0;
P_AL_TRASPASO_GRUPO_KARDEX_E(vp_error);
	DBMS_OUTPUT.PUT_LINE(vp_error);
IF vp_error = 1 THEN
	v_glosa_error := 'ERROR TRASPASO KARDEX AGRUPADOS POR ENTRADA P_AL_TRASPASO_KARDEX_GRUPO_E';
	DBMS_OUTPUT.PUT_LINE(v_glosa_error);
	RAISE ERROR_PROCESO_GENERAL;
END IF;
P_AL_TRASPASO_GRUPO_KARDEX_S(vp_error);
IF vp_error = 1 THEN
	v_glosa_error := 'ERROR TRASPASO KARDEX AGRUPADOS POR SALIDA P_AL_TRASPASO_KARDEX_GRUPO_S';
	RAISE ERROR_PROCESO_GENERAL;
END IF;
OPEN PDTE_KARDEX;
     LOOP
                 -- CURSOR DE MOVIMIENTOS KARDEX DIARIOS AL_PDTE_KARDEX
                 FETCH PDTE_KARDEX INTO VP_MOV_KAR.NUM_MOVKARDEX,VP_MOV_KAR.TIP_MOVIMIENTO,VP_MOV_KAR.IND_ENTSAL,
                       VP_MOV_KAR.FEC_MOVIMIENTO,VP_MOV_KAR.FEC_PERIODO,VP_MOV_KAR.COD_BODEGA,VP_MOV_KAR.TIP_STOCK,VP_MOV_KAR.COD_ESTADO,
                       VP_MOV_KAR.COD_ARTICULO,VP_MOV_KAR.COD_MOTIVO,VP_MOV_KAR.COD_MONE,VP_MOV_KAR.IND_PROCE,VP_MOV_KAR.NUM_MOVIMIENTO,
                       VP_MOV_KAR.COD_ORIG,VP_MOV_KAR.CORR_APLI,VP_MOV_KAR.COD_PROVEEDOR,VP_MOV_KAR.COD_USO,VP_MOV_KAR.PRC_UNITARIO,
                       VP_MOV_KAR.CANT_ENTRADA,VP_MOV_KAR.CANT_SALIDA,VP_MOV_KAR.CANT_SALDO,VP_MOV_KAR.PRC_PMP,VP_MOV_KAR.MTO_SUBSIDIO,
                       VP_MOV_KAR.MTO_COSTOVENTA,VP_MOV_KAR.NUM_SERIE,VP_MOV_KAR.COD_USUA,VP_MOV_KAR.COD_GRPCONCEPTO,
					    VP_MOV_KAR.COD_GRPCONCEPTO_ARTICULO;
                 EXIT WHEN PDTE_KARDEX%NOTFOUND;
                 -- BUSCA CAMPOS FALTANTES PARA EL INGRESO EN TABLA AL_KARDEX
               Al_Pac_Trata_Mov_Kar.TRATA_DATOS(VP_MOV_KAR,V_IMP_CARGO,VP_ERROR);
                 IF VP_ERROR = 1 THEN
                    v_glosa_error:='Dato no encontrado AL_PAC_TRATA_MOV_KAR.TRATA_DATOS';
                    RAISE ERROR_PROCESO_GENERAL;
                 ELSE
                     IF VP_ERROR=2 THEN
                        v_glosa_error:='ERROR GENERAL AL_PAC_TRATA_MOV_KAR.TRATA_DATOS';
                        RAISE ERROR_PROCESO_GENERAL;
                     END IF;
                 END IF;
                 -- INGRESO DE REGISTRO EN TABLA DE KARDEX
                 IF VP_MOV_KAR.IND_ENTSAL = 'S' THEN
                    v_mto_subsidio:= (vp_mov_kar.prc_pmp - v_imp_cargo);
                 ELSE
                    v_mto_subsidio:= NULL;
                    v_imp_cargo:= NULL;
                 END IF;
		IF VP_ERROR = 0 THEN
				 DBMS_OUTPUT.PUT_LINE('ENTRO ');
	                 INSERT INTO AL_KARDEX(NUM_MOVKARDEX,TIP_MOVIMIENTO,IND_ENTSAL,FEC_MOVIMIENTO,
	                             FEC_PERIODO,COD_BODEGA,TIP_STOCK,COD_ESTADO,COD_ARTICULO,COD_MOTIVO,
	                             COD_MONE,IND_PROCE,NUM_MOVIMIENTO,COD_ORIG,CORR_APLI,COD_PROVEEDOR,
	                             COD_USO,PRC_UNITARIO,CANT_ENTRADA,CANT_SALIDA,CANT_SALDO,PRC_PMP,
	                             MTO_SUBSIDIO,MTO_COSTOVENTA,NUM_SERIE,COD_USUA,FEC_TRASPASO,
	                             FEC_IMPUTENTSAL,FEC_IMPUTCOSTOVENTA,FEC_IMPUTSUBSIDIO,COD_GRPCONCEPTO,
								 COD_GRPCONCEPTO_ARTICULO)
	                        VALUES(VP_MOV_KAR.NUM_MOVKARDEX,VP_MOV_KAR.TIP_MOVIMIENTO,VP_MOV_KAR.IND_ENTSAL,
	                               VP_MOV_KAR.FEC_MOVIMIENTO,VP_MOV_KAR.FEC_PERIODO,VP_MOV_KAR.COD_BODEGA,VP_MOV_KAR.TIP_STOCK,VP_MOV_KAR.COD_ESTADO,
	                               VP_MOV_KAR.COD_ARTICULO,VP_MOV_KAR.COD_MOTIVO,VP_MOV_KAR.COD_MONE,VP_MOV_KAR.IND_PROCE,VP_MOV_KAR.NUM_MOVIMIENTO,
	                               VP_MOV_KAR.COD_ORIG,VP_MOV_KAR.CORR_APLI,VP_MOV_KAR.COD_PROVEEDOR,VP_MOV_KAR.COD_USO,VP_MOV_KAR.PRC_UNITARIO,
	                               VP_MOV_KAR.CANT_ENTRADA,VP_MOV_KAR.CANT_SALIDA,VP_MOV_KAR.CANT_SALDO,VP_MOV_KAR.PRC_PMP,v_mto_subsidio,
	                               v_imp_cargo,VP_MOV_KAR.NUM_SERIE,VP_MOV_KAR.COD_USUA,SYSDATE,NULL,NULL,NULL,VP_MOV_KAR.COD_GRPCONCEPTO,
								   VP_MOV_KAR.COD_GRPCONCEPTO_ARTICULO);
	                 -- ELIMINACION DE REGISTRO DE LA TABLA AL_PDTE_CALCULO
	                 DELETE AL_PDTE_KARDEX
	                 WHERE NUM_MOVKARDEX=VP_MOV_KAR.NUM_MOVKARDEX;
	                 COMMIT;
		END IF;
-- FINALIZA RUTINA -------------------------------------------------------------
--------------------------------------------------------------------------------
  END LOOP;
CLOSE PDTE_KARDEX;
COMMIT;
EXCEPTION
          WHEN ERROR_PROCESO_GENERAL THEN
               ROLLBACK;
 	       RAISE_APPLICATION_ERROR (-20001,'TMError:' || v_glosa_error );
 	  WHEN NO_DATA_FOUND THEN
 	       ROLLBACK;
 	       RAISE_APPLICATION_ERROR (-20003,'TMError:' || 'SIN DATOS TABLA' );
          WHEN OTHERS THEN
               ROLLBACK;
 	       RAISE_APPLICATION_ERROR (-20002,'TMError:' || TO_CHAR(SQLCODE) || SQLERRM || ' ERROR GENERICO.');
END P_Al_Traspaso_Kardex;
/
SHOW ERRORS
