CREATE OR REPLACE PROCEDURE PV_RESTAURA_CAMBTEC_SS_PR(
 VP_ABONADO		  IN GA_ABOCEL.NUM_ABONADO%TYPE,
 VP_FECCAMB		  IN GA_EQUIPABOSER.FEC_ALTA%TYPE,
 VP_ACCION		  IN VARCHAR2,
 VP_CADENAACT	  OUT GA_ABOCEL.CLASE_SERVICIO%TYPE,
 VP_CADENADES	  OUT GA_ABOCEL.CLASE_SERVICIO%TYPE,
 VP_ERROR 		  OUT VARCHAR2,
 VP_SQLCODE       OUT VARCHAR2)

IS

  V_SERVICIO	  GA_SERVSUPLABO.COD_SERVICIO%TYPE;
  V_SERVSUPL	  GA_SERVSUPLABO.COD_SERVSUPL%TYPE;
  V_NIVEL		  GA_SERVSUPLABO.COD_NIVEL%TYPE;
  V_FECALTACEN	  GA_SERVSUPLABO.FEC_ALTACEN%TYPE;
  V_CADENAACTD    GA_ABOCEL.CLASE_SERVICIO%TYPE;
  V_CAMBIO_TEC_SS GED_PARAMETROS.VAL_PARAMETRO%TYPE;

  ERROR_PROCESO   EXCEPTION;


/*
"D" : Para deshacer, si no existe el parametro, la cadena debera salir vacia.
	  Para dejar los SS en ga_servsupl como antes se debera considerar como fecha de referencia
	  la que se entrega a la funcion para reconocer los que se marcaron como 4-3 y dejarlos en 2-1 respectivamente,
	  y armar cadena segun los que se encuentren en ind_estado < 3 para actualizar la GA_ABOCEL.

"C" : Para Cerrar, si no existe el parametro, se debera informar la cadena que existe actualmente en la GA_ABOCEL
      como cadena a activar, sin informar cadena a desactivar (ya que bajo ese formato no se estaban desactivando
	  el origen)
*/

  CURSOR SS_ANTIGUOS IS
	  SELECT COD_SERVICIO, COD_SERVSUPL, COD_NIVEL
	    FROM GA_SERVSUPLABO
	   WHERE NUM_ABONADO = VP_ABONADO
	     AND FEC_BAJABD = VP_FECCAMB
	     AND IND_ESTADO = 3;

  CURSOR SS_NUEVOS IS
	  SELECT COD_SERVICIO, COD_SERVSUPL, COD_NIVEL
	    FROM GA_SERVSUPLABO
	   WHERE NUM_ABONADO = VP_ABONADO
	     AND FEC_ALTABD = VP_FECCAMB + (1/(24*60*60))
	     AND IND_ESTADO = 1;

  CURSOR SS_ANTIGUOS_ANT IS
	  SELECT COD_SERVICIO, COD_SERVSUPL, COD_NIVEL
	    FROM GA_SERVSUPLABO
	   WHERE NUM_ABONADO = VP_ABONADO
	     AND IND_ESTADO < 3;



BEGIN
  --Pl que permitira el cierre de un cambio de tecnologia realizado por cambio de serie

  BEGIN
  	   SELECT VAL_PARAMETRO
	     INTO V_CAMBIO_TEC_SS
	     FROM GED_PARAMETROS
		WHERE NOM_PARAMETRO = 'CAMBIO_TEC_SS'
		  AND COD_MODULO = 'GA'
		  AND COD_PRODUCTO = 1;

  EXCEPTION
  		WHEN NO_DATA_FOUND THEN
		     V_CAMBIO_TEC_SS := '0';
		     NULL;

  		WHEN OTHERS THEN
		     VP_ERROR := '10';
	         VP_SQLCODE      := SQLCODE;
			 VP_CADENAACT       := '';
			 VP_CADENADES       := '';
			 RAISE ERROR_PROCESO;

  END;

  DBMS_OUTPUT.PUT_LINE('ACCION ->'|| VP_ACCION);

  IF V_CAMBIO_TEC_SS = '1' THEN --MODALIDAD NUEVA CON CAMBIO DE TECNOLOGIA.


      VP_ERROR := '1';
 	  VP_CADENAACT := '';
 	  VP_CADENADES := '';
	  V_CAMBIO_TEC_SS := '';

	  BEGIN

		  OPEN SS_ANTIGUOS;
	      LOOP
	           FETCH SS_ANTIGUOS INTO   V_SERVICIO, V_SERVSUPL, V_NIVEL;
	           EXIT WHEN SS_ANTIGUOS%NOTFOUND;

			   DBMS_OUTPUT.PUT_LINE('V_SERVSUPL ->'|| V_SERVSUPL);

		       VP_CADENADES := RTRIM(LTRIM(VP_CADENADES || RTRIM(LTRIM(TO_CHAR(V_SERVSUPL,'00') || '0000')) ) );

			   V_CADENAACTD := RTRIM(LTRIM(V_CADENAACTD || RTRIM(LTRIM(TO_CHAR(V_SERVSUPL,'00'))) || RTRIM(LTRIM(TO_CHAR(V_NIVEL,'0000'))) ) );

	      END LOOP;
	      CLOSE SS_ANTIGUOS;

	  END;

	  IF VP_ACCION = 'D' THEN

	  	 BEGIN

		 	  -- BORRAMOS REGISTROS NUEVOS
			  VP_ERROR := '2';
			  DELETE
			    FROM GA_SERVSUPLABO
			   WHERE NUM_ABONADO = VP_ABONADO
			     AND FEC_ALTABD = VP_FECCAMB + (1/(24*60*60))
			     AND IND_ESTADO = 1;


			   --ACTUALIZAMOS LOS ANTIGUOS DEJANDOLOS COMO VIGENTES COMO ANTES.
		         VP_ERROR := '3';
				 UPDATE GA_SERVSUPLABO
				    SET IND_ESTADO = 1,
					    FEC_BAJACEN = NULL,
					    FEC_BAJABD = NULL
				  WHERE NUM_ABONADO = VP_ABONADO
				    AND FEC_BAJABD = VP_FECCAMB
					AND FEC_ALTACEN IS NULL
				    AND IND_ESTADO = 3;

				 VP_ERROR := '4';
				 UPDATE GA_SERVSUPLABO
				    SET IND_ESTADO = 2,
					    FEC_BAJACEN = NULL,
					    FEC_BAJABD = NULL
				  WHERE NUM_ABONADO = VP_ABONADO
				    AND FEC_BAJABD = VP_FECCAMB
					AND FEC_ALTACEN IS NOT NULL
				    AND IND_ESTADO = 3;

	  	          VP_ERROR := '5';
				  UPDATE GA_ABOCEL
				    SET CLASE_SERVICIO = V_CADENAACTD
				  WHERE NUM_ABONADO = VP_ABONADO;


		 EXCEPTION
		 	 WHEN OTHERS THEN
		         VP_SQLCODE      := SQLCODE;
				 VP_CADENAACT       := '';
				 VP_CADENADES       := '';
		 END;

	  ELSIF VP_ACCION = 'C' THEN

	      VP_ERROR := '6';
	  	  OPEN SS_NUEVOS;
	      LOOP
	           FETCH SS_NUEVOS INTO  V_SERVICIO, V_SERVSUPL, V_NIVEL;
	           EXIT WHEN SS_NUEVOS%NOTFOUND;

			   DBMS_OUTPUT.PUT_LINE('V_SERVSUPL ->'|| V_SERVSUPL);

			   VP_CADENAACT := RTRIM(LTRIM(VP_CADENAACT || RTRIM(LTRIM(TO_CHAR(V_SERVSUPL,'00'))) || RTRIM(LTRIM(TO_CHAR(V_NIVEL,'0000'))) ) );

	      END LOOP;
	      CLOSE SS_NUEVOS;

	  END IF;

	  VP_ERROR := '0';
	  DBMS_OUTPUT.PUT_LINE('CADENA VP_CADENAACT ->'|| VP_CADENAACT);
	  DBMS_OUTPUT.PUT_LINE('CADENA  VP_CADENADES ->'|| VP_CADENADES);
	  DBMS_OUTPUT.PUT_LINE('VP_ERROR ->'|| VP_ERROR);

  ELSE -- MODALIDAD ANTIGUA.

      VP_ERROR := '1';
 	  VP_CADENAACT := '';
 	  VP_CADENADES := '';

	  IF VP_ACCION = 'D' THEN

	  	 BEGIN

			     VP_ERROR := '2';
			     --ACTUALIZAMOS LOS ANTIGUOS DEJANDOLOS COMO VIGENTES COMO ANTES.
		         VP_ERROR := '3';
				 UPDATE GA_SERVSUPLABO
				    SET IND_ESTADO = 2,
					    FEC_BAJACEN = NULL,
					    FEC_BAJABD = NULL
				  WHERE NUM_ABONADO = VP_ABONADO
				    AND FEC_BAJABD >= VP_FECCAMB
				    AND IND_ESTADO = 4;

				 VP_ERROR := '4';
				 UPDATE GA_SERVSUPLABO
				    SET IND_ESTADO = 1,
					    FEC_BAJACEN = NULL,
					    FEC_BAJABD = NULL
				  WHERE NUM_ABONADO = VP_ABONADO
				    AND FEC_BAJABD >= VP_FECCAMB
				    AND IND_ESTADO = 3;


				  BEGIN

					  OPEN SS_ANTIGUOS_ANT;
				      LOOP
				           FETCH SS_ANTIGUOS_ANT INTO   V_SERVICIO, V_SERVSUPL, V_NIVEL;
				           EXIT WHEN SS_ANTIGUOS_ANT%NOTFOUND;

						   DBMS_OUTPUT.PUT_LINE('V_SERVSUPL ->'|| V_SERVSUPL);

						   V_CADENAACTD := RTRIM(LTRIM(V_CADENAACTD || RTRIM(LTRIM(TO_CHAR(V_SERVSUPL,'00'))) || RTRIM(LTRIM(TO_CHAR(V_NIVEL,'0000'))) ) );

				      END LOOP;
				      CLOSE SS_ANTIGUOS_ANT;

				  END;


	  	          VP_ERROR := '5';
				  UPDATE GA_ABOCEL
				    SET CLASE_SERVICIO = V_CADENAACTD
				  WHERE NUM_ABONADO = VP_ABONADO;


		 EXCEPTION
		 	 WHEN OTHERS THEN
		         VP_SQLCODE      := SQLCODE;
				 VP_CADENAACT       := '';
				 VP_CADENADES       := '';
		 END;

	  ELSIF VP_ACCION = 'C' THEN

	      VP_ERROR := '6';

		  SELECT CLASE_SERVICIO
		    INTO VP_CADENAACT
		    FROM GA_ABOCEL
		   WHERE NUM_ABONADO = VP_ABONADO;

	  END IF;

	  VP_ERROR := '0';
	  DBMS_OUTPUT.PUT_LINE('CADENA VP_CADENAACT ->'|| VP_CADENAACT);
	  DBMS_OUTPUT.PUT_LINE('CADENA VP_CADENADES ->'|| VP_CADENADES);
	  DBMS_OUTPUT.PUT_LINE('VP_ERROR ->'|| VP_ERROR);


  END IF;


EXCEPTION
    WHEN ERROR_PROCESO THEN
         VP_SQLCODE      := SQLCODE;
		 VP_CADENAACT       := '';
		 VP_CADENADES       := '';

    WHEN OTHERS THEN
         VP_SQLCODE      := SQLCODE;
		 VP_CADENADES       := '';
 		 VP_CADENAACT       := '';
END;
/
SHOW ERRORS
