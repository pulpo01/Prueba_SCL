CREATE OR REPLACE PROCEDURE        P_VALIDA_ROAMING(
  VP_ABONADO IN OUT NUMBER ,
  VP_CICLONEW IN OUT NUMBER ,
  VP_CICLO IN OUT NUMBER ,
  VP_PROC IN OUT VARCHAR2 ,
  VP_TABLA IN OUT VARCHAR2 ,
  VP_ACT IN OUT VARCHAR2 ,
  VP_SQLCODE IN OUT VARCHAR2 ,
  VP_SQLERRM IN OUT VARCHAR2 ,
  VP_ERROR IN OUT VARCHAR2 )
IS
--
-- Procedimiento que realiza la llamada al proceso de validacion de periodos
-- de roaming a abonados que realizan un cambio de ciclo
--
--            Los posibles retornos del procedimiento son :
--                - '0' Actualizaciones realizadas correctamente
--                - '4' Error en el proceso
--
   CURSOR C1 IS
   SELECT NUM_ESTADIA
     FROM GA_ABOROACOM
    WHERE NUM_ABONADO = VP_ABONADO;
   V_ESTADIA GA_ABOROACOM.NUM_ESTADIA%TYPE;
   V_CLIENTE GA_ABOCEL.COD_CLIENTE%TYPE;
   V_CELULAR GA_ABOROACOM.NUM_CELULAR%TYPE;
   V_IMPLIMCONS GA_ABOROACOM.IMP_LIMCONSUMO%TYPE;
   V_FECALTA GA_ABOROACOM.FEC_ALTA%TYPE;
   V_FECBAJA GA_ABOROACOM.FEC_BAJA%TYPE;
   V_SERIE GA_ABOCEL.NUM_SERIE%TYPE;
   V_OPERADOR GA_ABOROACOM.COD_OPERADOR%TYPE;
   V_CELUCOM GA_ABOROACOM.NUM_CELULAR%TYPE;
   V_FECCICLO DATE;
   ERROR_PROCESO EXCEPTION;
BEGIN
   VP_PROC := 'P_VALIDA_ROAMING';
   P_RECUPERA_CICLOS (VP_ABONADO,VP_CICLONEW,V_FECCICLO,VP_PROC,VP_TABLA,
        VP_ACT,VP_SQLCODE,VP_SQLERRM,VP_ERROR);
   IF VP_ERROR <> '0' THEN
      VP_ERROR := '4';
      RAISE ERROR_PROCESO;
   END IF;
   VP_PROC := 'P_VALIDA_ROAMING';
   VP_TABLA  := 'C1';
   VP_ACT := 'O';
   OPEN C1;
   LOOP
      VP_ACT := 'F';
      FETCH C1 INTO V_ESTADIA;
      EXIT WHEN C1%NOTFOUND;
      VP_TABLA := 'GA_ABOROACOM';
      VP_ACT := 'D';
      P_BORRA_ESTADIAS (V_ESTADIA,VP_PROC,VP_TABLA,VP_ACT,VP_SQLCODE,
   VP_SQLERRM,VP_ERROR);
      IF VP_ERROR <> '0' THEN
  VP_ERROR := '4';
  RAISE ERROR_PROCESO;
      END IF;
      P_DATOS_ABOROACOM (V_ESTADIA,VP_ABONADO,V_CLIENTE,V_CELULAR,
    V_IMPLIMCONS,V_FECALTA,V_FECALTA,V_SERIE,
    V_OPERADOR,V_CELUCOM,VP_CICLO,VP_PROC,
    VP_TABLA,VP_ACT,VP_SQLCODE,VP_SQLERRM,VP_ERROR);
      IF VP_ERROR <> '0' THEN
  VP_ERROR := '4';
  RAISE ERROR_PROCESO;
      END IF;
      P_ALTA_INTAROACOM (V_ESTADIA,VP_ABONADO,V_CLIENTE,V_FECALTA,V_FECBAJA,
    V_IMPLIMCONS,V_SERIE,V_CELULAR,V_OPERADOR,
    V_CELUCOM,VP_CICLO,VP_CICLONEW,V_FECCICLO,VP_PROC,
    VP_TABLA,VP_ACT,VP_SQLCODE,VP_SQLERRM,VP_ERROR);
      IF VP_ERROR <> '0' THEN
  VP_ERROR := '4';
  RAISE ERROR_PROCESO;
      END IF;
      VP_PROC := 'P_VALIDA_ROAMING';
   END LOOP;
   VP_TABLA  := 'C1';
   VP_ACT := 'C';
   CLOSE C1;
EXCEPTION
   WHEN ERROR_PROCESO THEN
 IF VP_SQLCODE IS NULL THEN
    VP_SQLCODE := SQLCODE;
    VP_SQLERRM := SQLERRM;
    VP_ERROR := 4;
        END IF;
   WHEN OTHERS THEN
 IF VP_SQLCODE IS NULL THEN
    VP_SQLCODE := SQLCODE;
    VP_SQLERRM := SQLERRM;
           VP_ERROR := '4';
 END IF;
END;
/
SHOW ERRORS
