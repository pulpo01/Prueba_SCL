CREATE OR REPLACE PROCEDURE        GA_P_ALTA_CLIENTES    (VP_CLIENTES IN GE_CLIENTES%ROWTYPE,
						   VP_PROC     IN OUT VARCHAR2,
						   VP_TABLA    IN OUT VARCHAR2,
						   VP_SQLCODE  IN OUT VARCHAR2,
						   VP_SQLERRM  IN OUT VARCHAR2,
						   VP_ERROR    IN OUT VARCHAR2 ) IS
--Procedimiento  de insercion de la tabla ge_clientes
--
--Los valores del codigo de retorno seran los siguientes:
--		-"0" ; la insercion se ha realizado correctamente
--		-"4" ; Error en proceso
BEGIN
	VP_PROC := 'GA_P_ALTA_CLIENTES';
	VP_TABLA := 'GE_CLIENTES';
     INSERT INTO GE_CLIENTES
       (COD_CLIENTE,
	NOM_CLIENTE,
	COD_TIPIDENT,
	NUM_IDENT,
	COD_CALCLIEN,
	IND_SITUACION,
	FEC_ALTA,
	IND_FACTUR,
	IND_TRASPASO,
	IND_AGENTE,
	FEC_ULTMOD,
	NUM_FAX,
	IND_MANDATO,
	NOM_USUARORA,
	IND_ALTA,
	COD_CUENTA,
	IND_ACEPVENT,
	COD_ABC,
	COD_123,
	COD_ACTIVIDAD,
	COD_PAIS,
	TEF_CLIENTE1,
	NUM_ABOCEL,
	TEF_CLIENTE2,
	NUM_ABOBEEP,
	IND_DEBITO,
	NUM_ABOTRUNK,
	COD_PROSPECTO,
	NUM_ABOTREK,
	COD_SISPAGO,
	NOM_APECLIEN1,
	NOM_EMAIL,
	NUM_ABORENT,
	NOM_APECLIEN2,
	NUM_ABOROAMING,
	FEC_ACEPVENT,
	IMP_STOPDEBIT,
	COD_BANCO,
	COD_SUCURSAL,
	IND_TIPCUENTA,
	COD_TIPTARJETA,
	NUM_CTACORR,
	NUM_TARJETA,
	FEC_VENCITARJ,
	COD_BANCOTARJ,
	COD_TIPIDTRIB,
	NUM_IDENTTRIB,
	COD_TIPIDENTAPOR,
	NUM_IDENTAPOR,
	NOM_APODERADO,
	COD_OFICINA,
	FEC_BAJA,
	COD_COBRADOR,
	COD_PINCLI,
	COD_CICLO )
 VALUES(VP_CLIENTES.COD_CLIENTE,
	VP_CLIENTES.NOM_CLIENTE,
	VP_CLIENTES.COD_TIPIDENT,
	VP_CLIENTES.NUM_IDENT,
	VP_CLIENTES.COD_CALCLIEN,
	VP_CLIENTES.IND_SITUACION,
	VP_CLIENTES.FEC_ALTA,
	VP_CLIENTES.IND_FACTUR,
	VP_CLIENTES.IND_TRASPASO,
	VP_CLIENTES.IND_AGENTE,
	VP_CLIENTES.FEC_ULTMOD,
	VP_CLIENTES.NUM_FAX,
	VP_CLIENTES.IND_MANDATO,
	VP_CLIENTES.NOM_USUARORA,
	VP_CLIENTES.IND_ALTA,
	VP_CLIENTES.COD_CUENTA,
	VP_CLIENTES.IND_ACEPVENT,
	VP_CLIENTES.COD_ABC,
	VP_CLIENTES.COD_123,
	VP_CLIENTES.COD_ACTIVIDAD,
	VP_CLIENTES.COD_PAIS,
	VP_CLIENTES.TEF_CLIENTE1,
	VP_CLIENTES.NUM_ABOCEL,
	VP_CLIENTES.TEF_CLIENTE2,
	VP_CLIENTES.NUM_ABOBEEP,
	VP_CLIENTES.IND_DEBITO,
	VP_CLIENTES.NUM_ABOTRUNK,
	VP_CLIENTES.COD_PROSPECTO,
	VP_CLIENTES.NUM_ABOTREK,
	VP_CLIENTES.COD_SISPAGO,
	VP_CLIENTES.NOM_APECLIEN1,
	VP_CLIENTES.NOM_EMAIL,
	VP_CLIENTES.NUM_ABORENT,
	VP_CLIENTES.NOM_APECLIEN2,
	VP_CLIENTES.NUM_ABOROAMING,
	VP_CLIENTES.FEC_ACEPVENT,
	VP_CLIENTES.IMP_STOPDEBIT,
	VP_CLIENTES.COD_BANCO,
	VP_CLIENTES.COD_SUCURSAL,
	VP_CLIENTES.IND_TIPCUENTA,
	VP_CLIENTES.COD_TIPTARJETA,
	VP_CLIENTES.NUM_CTACORR,
	VP_CLIENTES.NUM_TARJETA,
	VP_CLIENTES.FEC_VENCITARJ,
	VP_CLIENTES.COD_BANCOTARJ,
	VP_CLIENTES.COD_TIPIDTRIB,
	VP_CLIENTES.NUM_IDENTTRIB,
	VP_CLIENTES.COD_TIPIDENTAPOR,
	VP_CLIENTES.NUM_IDENTAPOR,
	VP_CLIENTES.NOM_APODERADO,
	VP_CLIENTES.COD_OFICINA,
	VP_CLIENTES.FEC_BAJA,
	VP_CLIENTES.COD_COBRADOR,
	VP_CLIENTES.COD_PINCLI,
	VP_CLIENTES.COD_CICLO );
  EXCEPTION
       WHEN OTHERS THEN
        VP_SQLCODE :=SQLCODE;
        VP_SQLERRM :=SQLERRM;
        VP_ERROR := '4';
 END;
/
SHOW ERRORS
