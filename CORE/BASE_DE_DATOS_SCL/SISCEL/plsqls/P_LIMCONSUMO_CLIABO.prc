CREATE OR REPLACE PROCEDURE P_LIMCONSUMO_CLIABO
(
  VP_ABONADO IN VARCHAR2
)

IS

sNomTablaAbo 			NUMBER(1) := 0;
ExisteAbocero			NUMBER(1) := 0;
sIndTOL					VARCHAR2(1):='N';
sCodCliente				GA_ABOCEL.COD_CLIENTE%TYPE;
sGCodPlanEmpresa		GA_ABOCEL.COD_PLANTARIF%TYPE;
sCodPlanTarif			GA_ABOCEL.COD_PLANTARIF%TYPE;
CodLimconsumo			GA_ABOCEL.COD_LIMCONSUMO%TYPE;
sNomUsu					GA_ABOCEL.NOM_USUARORA%TYPE;
AB_CELDA 				GA_ABOCEL.COD_CELDA%TYPE;
AB_CARGOBASICO			GA_ABOCEL.COD_CARGOBASICO%TYPE;
AB_CICLO				GA_ABOCEL.COD_CICLO%TYPE;
AB_EMPRESA				GA_ABOCEL.COD_EMPRESA%TYPE;
VP_IMPLIMCONS			TOL_LIMITE_TD.IMP_LIMITE%TYPE;



V_FEC_ACTCEN  VARCHAR2(20);


BEGIN

	SELECT COUNT(1)
	INTO   sNomTablaAbo
	FROM   GA_ABOCEL
	WHERE  NUM_ABONADO = VP_ABONADO;

    If sNomTablaAbo > 0 Then

	    BEGIN
			SELECT VAL_PARAMETRO
			INTO   sIndTOL
			FROM   GED_PARAMETROS WHERE NOM_PARAMETRO = 'IND_TOL';
	    END;


		BEGIN
			SELECT COD_CLIENTE, COD_PLANTARIF, NOM_USUARORA, DECODE(COD_LIMCONSUMO,'-1',null,COD_LIMCONSUMO), TO_CHAR(FEC_ACTCEN, 'DD-MM-YYYY HH:MI:SS')
			INTO   sCodCliente, sCodPlanTarif, sNomUsu, CodLimconsumo,V_FEC_ACTCEN
			FROM   GA_ABOCEL
			WHERE  NUM_ABONADO = VP_ABONADO;
		END;

		IF CodLimconsumo IS NULL THEN
		    BEGIN
				SELECT A.COD_LIMCONS
				INTO   CodLimconsumo
				FROM TOL_LIMITE_TD A , TOL_LIMITE_PLAN_TD B
				WHERE A.COD_LIMCONS = B.COD_LIMCONS
				AND SYSDATE BETWEEN B.FEC_DESDE AND NVL(B.FEC_HASTA, SYSDATE)
				AND B.IND_DEFAULT = 'S'
				AND B.COD_PLANTARIF = sCodPlanTarif;

				EXCEPTION
				   WHEN NO_DATA_FOUND THEN
				       CodLimconsumo := '-1';
			END;
		END IF;

        If sIndTOL = 'S' Then
			
 	            INSERT INTO GA_LIMITE_CLIABO_TO
                (COD_CLIENTE, NUM_ABONADO, COD_PLANTARIF, COD_LIMCONS, FEC_DESDE, FEC_ASIGNACION, NOM_USUARORA)
                VALUES (sCodCliente, VP_ABONADO, sCodPlanTarif, CodLimconsumo, TO_DATE(V_FEC_ACTCEN, 'DD-MM-YYYY HH:MI:SS'), SYSDATE, sNomUsu);
        End If;
    End If;

	EXCEPTION
	WHEN NO_DATA_FOUND THEN
	--dbms_output.put_line ('ERROR: '||SQLERRM);
	RAISE_APPLICATION_ERROR(-20203, 'P_LIMITE_CLIABO (NO HAY DATOS)'||' '||SQLERRM);
	WHEN OTHERS THEN
    --dbms_output.put_line ('ERROR: '||SQLERRM);
	RAISE_APPLICATION_ERROR(-20203, 'P_LIMITE_CLIABO (OTROS)'||' '||SQLERRM);
END;
/
SHOW ERROR 