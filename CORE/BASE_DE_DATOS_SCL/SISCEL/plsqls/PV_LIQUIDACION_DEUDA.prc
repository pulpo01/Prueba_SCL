CREATE OR REPLACE PROCEDURE        PV_LIQUIDACION_DEUDA(
V_NUMVENTA IN VARCHAR2,
V_SECUENCIA  IN VARCHAR2 ) IS
V_CLIENTE 	 		   FA_HISTDOCU.COD_CLIENTE%TYPE;
V_CICLO 			   	GE_CLIENTES.COD_CICLO%TYPE;
V_CICLFACT 				FA_HISTDOCU.COD_CICLFACT%TYPE;
V_FEC_RECARGA  			VARCHAR2(20);
V_SIGUE 				BOOLEAN;
V_TABLA_CONCEP 			VARCHAR2(30);
V_VALOR 				NUMBER(1);
VP_CADENA  				GA_TRANSACABO.DES_CADENA%TYPE;
SSQL  	   	   		   VARCHAR2(512);
V_NUM_PROCESO  		   FA_NCPARCIAL.NUM_PROCESO%TYPE;
V_IND_ORDENTOTAL	   FA_HISTDOCU.IND_ORDENTOTAL%TYPE;
V_TABLA 			   VARCHAR2(1);
V_TIPDOCUM			   FA_HISTDOCU.COD_TIPDOCUM%TYPE;
V_VENDEDOR_AGENTE	   FA_HISTDOCU.COD_VENDEDOR_AGENTE%TYPE;
V_LETRA				   FA_HISTDOCU.LETRA%TYPE;
V_CENTREMI			   FA_HISTDOCU.COD_CENTREMI%TYPE;
V_FOLIO				   FA_HISTDOCU.NUM_FOLIO%TYPE;
V_TOT_FACTURA		   FA_HISTDOCU.TOT_FACTURA%TYPE;
V_SUPERTEL			   FA_HISTDOCU.IND_SUPERTEL%TYPE;
V_SECUENCI			   FA_HISTDOCU.NUM_SECUENCI%TYPE;
V_CATRIBUT			   GA_CATRIBUTCLIE.COD_CATRIBUT%TYPE;
V_VENTA_PRELIQ		   GA_VENTAS.NUM_VENTA%TYPE;
V_MODVENTA_NC		   NUMBER(2);
V_ESTADOC			   FA_INTERFACT.COD_ESTADOC%TYPE;
V_TIPMOVIMIEN		   FA_INTERFACT.COD_TIPMOVIMIEN%TYPE;
V_NUM_FILAS			   NUMBER(3);
V_SEC_NCPARCIAL		   FA_NCPARCIAL.NUM_SECUENCIA%TYPE;
cursor_name			   INTEGER;
v_resul				   INTEGER;
V_COD_CONCEPTO		   FA_FACTCONC_NOCICLO.COD_CONCEPTO%TYPE;
V_COLUMNA			   FA_FACTCONC_NOCICLO.COLUMNA%TYPE;
V_IMP_FACTURABLE	   FA_FACTCONC_NOCICLO.IMP_FACTURABLE%TYPE;
V_IMP_CONCEPTO		   FA_FACTCONC_NOCICLO.IMP_CONCEPTO%TYPE;
V_DIFERENCIA		   FA_FACTCONC_NOCICLO.IMP_FACTURABLE%TYPE;
V_NUM_TRANS_NC		   GA_TRANSACABO.NUM_TRANSACCION%TYPE;
V_RETORNO_NC		   GA_TRANSACABO.COD_RETORNO%TYPE;
V_VENTA			   GA_ABOCEL.NUM_VENTA%TYPE;
VP_ERROR		   VARCHAR2(1);
V_POSEE_NC		   BOOLEAN;
BEGIN
-- ERROR: 0	VP_CADENA:='OK SIN ERROR' NUM_PROCESO
-- ERROR:1	VP_CADENA:='ERROR NO EXISTE FACTURA';
-- ERROR:2	VP_CADENA:='DATOS NO VALIDOS PARA EMITIR NC';
-- ERROR:3	VP_CADENA:='CON NOTA CREDITO PENDIENTE EN INTERFAZ';
-- ERROR:4	VP_CADENA:='ERROR NO EXISTEN CONCEPTOS POR FACTURAR';
-- ERROR:5	VP_CADENA:='ERROR DE INSERT.';
-- ERROR:6	VP_CADENA:='ERROR AL OBTENER DATOS GENERALES';
-- ERROR:7	VP_CADENA:='ERROR PROCESO FA_PRE_NOTACREDINTER';
-- ERROR:8	VP_CADENA:='ERROR PROCESO FA_PRE_NCPARCIAL';
-- ERROR:9	VP_CADENA:='ERROR NOTA DE CREDITO YA EFECTUADA';
	V_VALOR:=2;
	VP_ERROR:=0;
	V_SIGUE:=TRUE;
	V_VENTA:=TO_NUMBER(V_NUMVENTA);
	BEGIN
	   SELECT FA_SEQ_NUMPRO.NEXTVAL INTO V_NUM_PROCESO
   	   FROM DUAL;
	   SELECT GA_SEQ_TRANSACABO.NEXTVAL
	   INTO V_NUM_TRANS_NC
	   FROM DUAL;
	EXCEPTION
	   WHEN NO_DATA_FOUND THEN
	   		VP_ERROR:='6';
			VP_CADENA:='ERROR AL OBTENER DATOS GENERALES';
			V_SIGUE:=FALSE;
	END;
	IF V_SIGUE THEN
	BEGIN
	    BEGIN
  			   SELECT IND_ORDENTOTAL,COD_CICLFACT,'H',COD_TIPDOCUM,NUM_SECUENCI,
			   COD_VENDEDOR_AGENTE,LETRA,COD_CENTREMI,NUM_FOLIO,TOT_FACTURA,
			   IND_SUPERTEL,COD_CLIENTE
			   INTO V_IND_ORDENTOTAL,V_CICLFACT,V_TABLA,V_TIPDOCUM,V_SECUENCI,
			   V_VENDEDOR_AGENTE,V_LETRA,V_CENTREMI,V_FOLIO,V_TOT_FACTURA,
 			   V_SUPERTEL,V_CLIENTE
        	   FROM FA_HISTDOCU
        	   WHERE NUM_VENTA=V_VENTA
	    	   AND COD_TIPDOCUM IN (SELECT UNIQUE  COD_TIPDOCUM
					 	FROM fa_tipmovimien
						where cod_tipmovimien = 1);
		EXCEPTION
			WHEN NO_DATA_FOUND THEN
				 BEGIN
		       	 SELECT IND_ORDENTOTAL,COD_CICLFACT,'N',COD_TIPDOCUM,NUM_SECUENCI,
			   	 COD_VENDEDOR_AGENTE,LETRA,COD_CENTREMI,NUM_FOLIO,TOT_FACTURA,
   			   	 IND_SUPERTEL,COD_CLIENTE
				 INTO V_IND_ORDENTOTAL,V_CICLFACT,V_TABLA,V_TIPDOCUM,V_SECUENCI,
			 	 V_VENDEDOR_AGENTE,V_LETRA,V_CENTREMI,V_FOLIO,V_TOT_FACTURA,
			 	 V_SUPERTEL,V_CLIENTE
	    		 FROM FA_FACTDOCU_NOCICLO
   	    		 WHERE NUM_VENTA=V_VENTA
	    		 AND COD_TIPDOCUM IN (SELECT UNIQUE  COD_TIPDOCUM
					 	FROM fa_tipmovimien
						where cod_tipmovimien = 1);
				 EXCEPTION
				 		WHEN NO_DATA_FOUND THEN
							 VP_ERROR:='1';
							 VP_CADENA:='ERROR NO EXISTE FACTURA';
							 V_SIGUE:=FALSE;
				 END;
		END;
		IF V_SIGUE THEN
           BEGIN
	    		 SELECT COD_CATRIBUT INTO V_CATRIBUT
	    		 FROM GA_CATRIBUTCLIE
	    		 WHERE COD_CLIENTE=V_CLIENTE
	    		 AND SYSDATE BETWEEN FEC_DESDE AND NVL(FEC_HASTA,SYSDATE);
		   EXCEPTION
				 WHEN NO_DATA_FOUND THEN
				 	  VP_ERROR:='6';
					  VP_CADENA:='ERROR AL OBTENER DATOS GENERALES';
					  V_SIGUE:=FALSE;
		   END;
		   BEGIN
		   		SELECT NUM_VENTA
		   		INTO V_VENTA_PRELIQ
		   		FROM GA_PRELIQUIDACION
		   		WHERE NUM_VENTA=V_VENTA;
   		   		V_MODVENTA_NC:=8;
		   EXCEPTION
		   		WHEN NO_DATA_FOUND THEN
		   			 V_MODVENTA_NC:=1;
		   END;
		END IF;
		IF V_SIGUE AND V_TOT_FACTURA > 0 AND V_FOLIO > 0 AND V_SUPERTEL=0 THEN
		   BEGIN
		   		V_ESTADOC:=300;
				V_TIPMOVIMIEN:=25;
		   		SELECT NUM_PROCESO INTO V_NUM_PROCESO
				FROM FA_INTERFACT
				WHERE COD_ESTADOC < V_ESTADOC
				AND COD_TIPMOVIMIEN=V_TIPMOVIMIEN
				AND NUM_FOLIOREL=V_FOLIO;
				--EXISTE NOTA DE CREDITO PENDIENTE
				VP_ERROR:='3';
				VP_CADENA:='CON NOTA CREDITO PENDIENTE EN INTERFAZ';
		   EXCEPTION
		   		WHEN NO_DATA_FOUND THEN
					 V_NUM_FILAS:=0;
					 BEGIN
					 	SELECT COUNT(*)
						INTO V_NUM_FILAS
						FROM FA_AJUSTES
						WHERE NUM_FOLIO=V_FOLIO
						AND COD_CLIENTE=V_CLIENTE
						AND COD_TIPDOCUM=V_TIPDOCUM;
						IF V_NUM_FILAS=0 THEN
						   --NOTA CREDITO TOTAL
						   PV_PRE_NOTACREDINTER (V_NUM_TRANS_NC,V_IND_ORDENTOTAL,
						   V_TABLA,V_CLIENTE,V_NUM_PROCESO,V_CATRIBUT,V_MODVENTA_NC);
						   BEGIN
						   		SELECT COD_RETORNO, DES_CADENA INTO V_RETORNO_NC,VP_CADENA
								FROM GA_TRANSACABO
								WHERE NUM_TRANSACCION=V_NUM_TRANS_NC;
								IF V_RETORNO_NC = 0 THEN
									   VP_ERROR:='0';
						   			   --VP_CADENA:=TO_CHAR(V_NUM_PROCESO);
									   VP_CADENA:=TO_CHAR(V_IND_ORDENTOTAL);
								ELSE
									   VP_ERROR:='7';
						   			   --VP_CADENA:='ERROR PROCESO FA_PRE_NOTACREDINTER';
								END IF;
						   EXCEPTION
						   		WHEN OTHERS THEN
								   VP_ERROR:='7';
					   			   VP_CADENA:='ERROR PROCESO FA_PRE_NOTACREDINTER';
						   END;
						ELSE --NOTA CREDITO PARCIAL
							 		SELECT FA_SEQ_NCPARCIAL.NEXTVAL
									INTO V_SEC_NCPARCIAL
									FROM DUAL;
									IF V_TABLA ='H' THEN
									   BEGIN
									   		   SELECT FA_HISTCONC
									   		   INTO V_TABLA_CONCEP
									   		   FROM FA_ENLACEHIST
									   		   WHERE COD_CICLFACT=V_CICLFACT;
									   EXCEPTION
									   		   WHEN NO_DATA_FOUND THEN
											   		VP_ERROR:='4';
													VP_CADENA:='ERROR NO EXISTEN CONCEPTOS POR FACTURAR';
													V_SIGUE:=FALSE;
									   END;
									ELSE
									   V_TABLA_CONCEP:='FA_FACTCONC_NOCICLO';
									END IF;
									IF V_SIGUE THEN
								   	   SSQL:='SELECT  F.COD_CONCEPTO, F.COLUMNA, F.IMP_FACTURABLE, A.IMP_CONCEPTO FROM ';
								   	   SSQL:=SSQL || V_TABLA_CONCEP || ' F, FA_AJUSTECONC A ';
								   	   SSQL:=SSQL ||' WHERE F.IND_ORDENTOTAL =' || to_char(V_IND_ORDENTOTAL);
							   	   	   SSQL:=SSQL || ' AND F.COD_TIPCONCE >  ' || to_char(V_VALOR);
								   	   SSQL:=SSQL || ' AND A.NUM_FOLIO(+) = ' || to_char(V_FOLIO);
								   	   SSQL:=SSQL || ' AND A.COD_CLIENTE(+)= ' || to_char(V_CLIENTE);
								   	   SSQL:=SSQL || ' AND A.COD_TIPDOCUM(+)= ' ||to_char(V_TIPDOCUM);
								   	   SSQL:=SSQL || ' AND F.COD_CONCEPTO=A.COD_CONCEPTO(+)';
								   	   SSQL:=SSQL || ' AND F.COLUMNA=A.COLUMNA(+)';
								   	   cursor_name := dbms_sql.open_cursor;
        						   	   dbms_sql.parse(cursor_name,SSQL, dbms_sql.v7);
								   	   DBMS_SQL.DEFINE_COLUMN(cursor_name, 1,V_COD_CONCEPTO);
  								   	   DBMS_SQL.DEFINE_COLUMN(cursor_name, 2,V_COLUMNA);
  								   	   DBMS_SQL.DEFINE_COLUMN(cursor_name, 3,V_IMP_FACTURABLE);
   								   	   DBMS_SQL.DEFINE_COLUMN(cursor_name, 4,V_IMP_CONCEPTO);
								   	   v_resul:=DBMS_SQL.EXECUTE(cursor_name);
									   V_POSEE_NC:=FALSE;
								   	   LOOP
								   		if DBMS_SQL.FETCH_ROWS(cursor_name) = 0 then
										      exit;
										end if;
								   		DBMS_SQL.COLUMN_VALUE(cursor_name, 1,V_COD_CONCEPTO);
  								   		DBMS_SQL.COLUMN_VALUE(cursor_name, 2,V_COLUMNA);
  								   		DBMS_SQL.COLUMN_VALUE(cursor_name, 3,V_IMP_FACTURABLE);
   								   		DBMS_SQL.COLUMN_VALUE(cursor_name, 4,V_IMP_CONCEPTO);
										V_DIFERENCIA:=V_IMP_FACTURABLE - V_IMP_CONCEPTO;
										IF V_DIFERENCIA > 0 THEN
										   BEGIN
										   		INSERT INTO FA_NCPARCIAL
										   		(NUM_SECUENCIA,COD_CLIENTE,IND_ORDENTOTAL,
										   		COD_TIPDOCUM,COD_CONCEPTO,COLUMNA,IMP_CONCEPTO,
										   		FLG_EMINC,FEC_SOLICITUD,NOM_USUARIO,NUM_PROCESO)
										   		VALUES(V_SEC_NCPARCIAL,V_CLIENTE,V_IND_ORDENTOTAL,
										   		V_TIPDOCUM,V_COD_CONCEPTO,V_COLUMNA,V_DIFERENCIA,
										   		0,SYSDATE,USER,V_NUM_PROCESO);
												VP_ERROR:='0';
											    VP_CADENA:=TO_CHAR(V_NUM_PROCESO);
											    V_POSEE_NC:=TRUE;
											EXCEPTION
												WHEN OTHERS THEN
													 VP_ERROR:='5';
													 VP_CADENA:='ERROR DE INSERT EN NC PARCIAL';
											END;
										END IF;
								   		END LOOP;
								   		dbms_sql.close_cursor(cursor_name);
										IF V_POSEE_NC THEN
								   		   PV_PRE_NOTACREDPARCIAL(V_NUM_TRANS_NC,V_SEC_NCPARCIAL);
										   BEGIN
						   					  SELECT COD_RETORNO, DES_CADENA INTO V_RETORNO_NC,VP_CADENA
											  FROM GA_TRANSACABO
											  WHERE NUM_TRANSACCION=V_NUM_TRANS_NC;
											  IF V_RETORNO_NC = 0 THEN
									   		   	 VP_ERROR:='0';
						   			   		   	 --VP_CADENA:=TO_CHAR(V_NUM_PROCESO);
												 VP_CADENA:=TO_CHAR(V_IND_ORDENTOTAL);
											  ELSE
									   		   	 VP_ERROR:='8';
						   			   		   	 --VP_CADENA:='ERROR PROCESO FA_PRE_NCPARCIAL';
											  END IF;
						   				   EXCEPTION
						   					  WHEN OTHERS THEN
								   				 VP_ERROR:='8';
					   			   				 VP_CADENA:='ERROR PROCESO FA_PRE_NCPARCIAL';
						   				   END;
									    ELSE
								   				 VP_ERROR:='9';
					   			   				 VP_CADENA:='NOTA DE CREDITO TOTAL AFECTUADA ANTERIORMENTE';
									    END IF;
									END IF;
						END IF;
					 END;
		   END;
		END IF;
	EXCEPTION
		WHEN NO_DATA_FOUND THEN
		   VP_ERROR:='1';
		   VP_CADENA:='ERROR NO EXISTE FACTURA';
	END;
    END IF; --SIGUE INICIAL
	INSERT INTO GA_TRANSACABO (NUM_TRANSACCION,COD_RETORNO,DES_CADENA)
	VALUES(TO_NUMBER(V_SECUENCIA),VP_ERROR,VP_CADENA);
END ;
/
SHOW ERRORS
