CREATE OR REPLACE PROCEDURE P_DEL_ABONADOS(
  VP_PRODUCTO IN NUMBER ,
  VP_ABONADO IN NUMBER ,
  VP_ERROR IN OUT VARCHAR2 )
IS
--
-- Procedimiento de borrado de abonados generados de
-- transacciones de ventas incompletas.
--
-- Los valores del codigo de retorno (VP_ERROR), seran los siguientes :
--         - "0" ; Los abonados han sido borrados correctamente
--         - "4" ; Error en el proceso interno
--
V_ABONADO GA_ABOCEL.NUM_ABONADO%TYPE;

BEGIN
    IF VP_PRODUCTO = 1 THEN
	   BEGIN
	   		SELECT NUM_ABONADO
			INTO V_ABONADO
			FROM GA_ABOCEL
			WHERE NUM_ABONADO=VP_ABONADO;
			DELETE GA_ABOCEL WHERE NUM_ABONADO = VP_ABONADO;
       		P_DELETE_ABORENT(VP_ABONADO,VP_ERROR);
	   EXCEPTION
	   		WHEN NO_DATA_FOUND THEN
			BEGIN
			  SELECT NUM_ABONADO
			  INTO V_ABONADO
			  FROM GA_ABOAMIST
			  WHERE NUM_ABONADO=VP_ABONADO;
			  DELETE GA_USUAMIST WHERE NUM_ABONADO=VP_ABONADO;
           		  DELETE PPT_OOSSPLANES WHERE NUM_ABONADO=VP_ABONADO;
              		  DELETE PPT_OOSSPREPAGO WHERE NUM_ABONADO=VP_ABONADO;
			  DELETE GA_ABOAMIST WHERE NUM_ABONADO=VP_ABONADO;
			EXCEPTION
			  WHEN NO_DATA_FOUND THEN
				   NULL;
			  WHEN OTHERS THEN
			       VP_ERROR := '4';
			END;
	   END;
    ELSIF VP_PRODUCTO = 2 THEN
       DELETE GA_SUSCBEEP 	   WHERE NUM_ABONADO = VP_ABONADO;
       DELETE GA_ABOBEEP       WHERE NUM_ABONADO = VP_ABONADO;
    ELSIF VP_PRODUCTO = 3 THEN
       DELETE GA_ABOTRUNK      WHERE NUM_ABONADO = VP_ABONADO;
    ELSIF VP_PRODUCTO = 4 THEN
       DELETE GA_ABOTREK       WHERE NUM_ABONADO = VP_ABONADO;
    END IF;
EXCEPTION
   WHEN NO_DATA_FOUND THEN
        NULL;
   WHEN OTHERS THEN
        VP_ERROR := '4';
END;
/
SHOW ERRORS
