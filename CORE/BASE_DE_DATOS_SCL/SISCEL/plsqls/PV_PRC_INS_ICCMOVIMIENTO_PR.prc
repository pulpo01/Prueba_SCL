CREATE OR REPLACE procedure PV_PRC_INS_ICCMOVIMIENTO_PR
(
VP_NUM_ABONADO          IN ICC_MOVIMIENTO.NUM_ABONADO%TYPE,
VP_COD_ACTABO           IN OUT ICC_MOVIMIENTO.COD_ACTABO%TYPE,
VP_NOM_USUARIO          IN ICC_MOVIMIENTO.NOM_USUARORA%TYPE,
VP_SQLCODE              IN OUT NOCOPY VARCHAR2,
VP_SQLERRM              IN OUT NOCOPY VARCHAR2,
VP_ERROR                IN OUT NOCOPY VARCHAR2
)
IS

	VP_TIPPLAN              TA_PLANTARIF.TIP_PLANTARIF%TYPE ;
	VP_PERFIL_ABO           GA_ABOCEL.PERFIL_ABONADO%TYPE;
	VP_PLAN				    GA_ABOCEL.COD_PLANTARIF%TYPE;


	V_COD_PRODUCTO          NUMBER;
	VP_COD_ESTADO           ICC_MOVIMIENTO.COD_ESTADO%TYPE;
	VP_COD_MODULO           ICC_MOVIMIENTO.COD_MODULO%TYPE;
	VP_COD_ACTUACION        ICC_MOVIMIENTO.COD_ACTUACION%TYPE;
	VP_TIP_TERMINAL         ICC_MOVIMIENTO.TIP_TERMINAL%TYPE;
	VP_COD_CENTRAL          ICC_MOVIMIENTO.COD_CENTRAL%TYPE;
	VP_NUM_CELULAR          ICC_MOVIMIENTO.NUM_CELULAR%TYPE;
	VP_NUM_SERIE            ICC_MOVIMIENTO.NUM_SERIE%TYPE;
	VP_TIP_TECNOLOGIA       ICC_MOVIMIENTO.TIP_TECNOLOGIA%TYPE;
	VP_COD_CLIENTE          GA_ABOAMIST.COD_CLIENTE%TYPE;
	VP_TECNOLOGIA           ICC_MOVIMIENTO.TIP_TECNOLOGIA%TYPE;
	VP_IMEI                 ICC_MOVIMIENTO.IMEI%TYPE;
	VP_ICC                  ICC_MOVIMIENTO.ICC%TYPE;
	VP_IMSI                 ICC_MOVIMIENTO.IMSI%TYPE;
	VP_PLAN_CONVER			ICC_MOVIMIENTO.PLAN%TYPE;
	VP_NUM_MOVIMIENTO       ICC_MOVIMIENTO.NUM_MOVIMIENTO%TYPE;
	VP_MOVI                 ICC_MOVIMIENTO.NUM_MOVIMIENTO%TYPE;
	VP_CADENA               ICC_MOVIMIENTO.COD_SERVICIOS%TYPE;
	vDesCadena				GA_TRANSACABO.DES_CADENA%TYPE;
	sIdTarea				VARCHAR2(9);
	nPos					NUMBER(1);
	pvCodValor 				VARCHAR2(10);
	pvErrorAplic 			VARCHAR2(10);
	pvErrorGlosa 			VARCHAR2(10);
	pvErrorOra 				VARCHAR2(10);
	pvErrorOraGlosa 		VARCHAR2(10);
	pvTrace 				VARCHAR2(10);
	V_NUMERROR	   			PV_ERRORES_OOSS_TO.NUM_ERROR%TYPE;

    v_Formato_Sel2   		GED_PARAMETROS.VAL_PARAMETRO%TYPE;
    v_Formato_Sel7   		GED_PARAMETROS.VAL_PARAMETRO%TYPE;
	LV_coderror		 		PV_ERRORES_OOSS_TO.COD_ERROR%TYPE;
	LV_fechaActual	 		VARCHAR2(22);
	LV_COD_ACT              ICC_MOVIMIENTO.COD_ACTABO%TYPE;

	CN_codproducto			CONSTANT TA_PLANTARIF.COD_PRODUCTO%TYPE := 1;
	CV_codModulo			CONSTANT GED_PARAMETROS.COD_MODULO%TYPE := 'GA';
	LV_tiphibrido			GED_PARAMETROS.VAL_PARAMETRO%TYPE ;


	ERROR_PROCESO 			EXCEPTION;
BEGIN

         VP_ERROR :='0';

         SELECT GA_SEQ_TRANSACABO.NEXTVAL, ICC_SEQ_NUMMOV.NEXTVAL
         INTO   VP_MOVI, VP_NUM_MOVIMIENTO
   		 FROM   DUAL;

		 LV_tiphibrido := GE_FN_DEVVALPARAM(CV_codModulo, CN_codproducto, 'TIP_PLAN_HIBRIDO');

		 BEGIN

			 SELECT    A.TIP_TERMINAL,
				       A.COD_TECNOLOGIA,
					   A.NUM_CELULAR,
					   A.NUM_SERIE,
					   A.COD_CENTRAL,
					   A.COD_CLIENTE,
		               A.NUM_IMEI,
					   A.COD_PLANTARIF,
					   A.PERFIL_ABONADO,
					   B.COD_TIPLAN
		        INTO   VP_TIP_TERMINAL,
				       VP_TIP_TECNOLOGIA,
					   VP_NUM_CELULAR,
					   VP_NUM_SERIE,
					   VP_COD_CENTRAL,
					   VP_COD_CLIENTE,
		               VP_IMEI,
					   VP_PLAN,
					   VP_PERFIL_ABO,
					   VP_TIPPLAN
			 FROM   GA_ABOCEL A, TA_PLANTARIF B
			 WHERE  A.NUM_ABONADO = VP_NUM_ABONADO AND
			 A.COD_PLANTARIF = B.COD_PLANTARIF AND
			 B.COD_PRODUCTO = CN_codproducto AND
			 B.COD_TIPLAN = LV_tiphibrido;

		 EXCEPTION
			 	WHEN NO_DATA_FOUND THEN
					 RAISE ERROR_PROCESO;
		 END;


         VP_CADENA:= VP_PERFIL_ABO;


		 SELECT ICC_SEQ_NUMMOV.NEXTVAL
         INTO   VP_NUM_MOVIMIENTO
         FROM DUAL;

		 VP_COD_ESTADO := 1;

		BEGIN
			SELECT A.COD_ACTABO
			INTO   LV_COD_ACT
			FROM   PV_ACTABO_TIPLAN A
			WHERE  A.COD_TIPMODI = VP_COD_ACTABO
			AND    A.COD_TIPLAN = VP_TIPPLAN;
		EXCEPTION
			 	WHEN NO_DATA_FOUND THEN
					 NULL;
	    END;

		IF LV_COD_ACT != '' THEN
			VP_COD_ACTABO := LV_COD_ACT;
		END IF;

        VP_COD_ACTUACION := Fn_CodActCen (CN_codproducto,  VP_COD_ACTABO , CV_codModulo,VP_TIP_TECNOLOGIA);

   	    VP_TECNOLOGIA := GE_FN_DEVVALPARAM('GA',1,'GRUPO_TEC_GSM');

        IF LTRIM(RTRIM(VP_TECNOLOGIA)) = GA_APROVISIONAR_CENTRAL_PG.PV_GRUPO_TECNOLOGICO_FN(LTRIM(RTRIM(VP_TIP_TECNOLOGIA))) THEN
                BEGIN
                    VP_IMSI := FN_RECUPERA_IMSI(VP_NUM_SERIE);
                EXCEPTION
                    WHEN OTHERS THEN
                        RAISE ERROR_PROCESO;
                END;
                VP_ICC   := VP_NUM_SERIE;
        ELSE
                VP_IMSI  := NULL;
                VP_IMEI  := NULL;
                VP_ICC   := NULL;
        END IF;


		 SELECT PV_ERRORES_SQ.NEXTVAL INTO V_NUMERROR FROM DUAL;

		 v_Formato_Sel2  := GE_PAC_GENERAL.PARAM_GENERAL('FORMATO_SEL2');
    	 v_Formato_Sel7  := GE_PAC_GENERAL.PARAM_GENERAL('FORMATO_SEL7');
		 LV_fechaActual := TO_CHAR(SYSDATE,v_Formato_Sel2 || ' ' ||v_Formato_Sel7);

		 GA_APROVISIONAR_CENTRAL_PG.GA_APROVISIONAR_PV_PR
		 					(VP_NUM_MOVIMIENTO,
							VP_NUM_ABONADO,
							VP_COD_ESTADO,
							VP_COD_ACTABO,
							CV_codModulo,
							VP_NOM_USUARIO,
							LV_fechaActual,
							VP_TIP_TERMINAL,
							VP_COD_CENTRAL,
							0,
							'',
							VP_NUM_CELULAR,
							VP_NUM_SERIE,
							'',
							'',
							'',
							VP_PERFIL_ABO,
							'',
							'',
							VP_TIP_TECNOLOGIA,
							VP_IMSI,
							VP_IMEI,
							'',
							VP_ICC,
							'',
							0,
							'',
							'',
							'',
							'',
							V_NUMERROR,
							1,
							0);

			 BEGIN

				 SELECT  cod_error
				 INTO LV_coderror
				 FROM PV_ERRORES_OOSS_TO
				 WHERE num_error = 	V_NUMERROR
				 AND num_os = 1;

				 IF LV_coderror <> '0' THEN
			 		 VP_ERROR:='1';
					 RAISE ERROR_PROCESO;
				 END IF;

			 EXCEPTION
			 	WHEN NO_DATA_FOUND THEN
			 		 NULL;
			 END;

             VP_SQLCODE := '1';
             VP_SQLERRM := 'EXITOSO';
			 VP_ERROR:='0';

         INSERT INTO GA_TRANSACABO
         (NUM_TRANSACCION, COD_RETORNO, DES_CADENA)
         VALUES
         (VP_MOVI,0,'PROCESO EXITOSO' ||vDesCadena );


EXCEPTION
    WHEN ERROR_PROCESO THEN

	    IF VP_ERROR <>'0'THEN

			VP_SQLCODE := SQLCODE;
	        VP_SQLERRM := SQLERRM;
			VP_ERROR := '4';

			ROLLBACK;

			INSERT INTO GA_ERRORES (COD_ACTABO,CODIGO,FEC_ERROR,COD_PRODUCTO,COD_SQLERRM,NOM_PROC)VALUES
			(VP_COD_ACTABO,VP_COD_CLIENTE,SYSDATE,1,VP_SQLERRM,'PV_PRC_INS_ICCMOVIMIENTO_PR' );

			INSERT INTO GA_TRANSACABO
			(NUM_TRANSACCION, COD_RETORNO, DES_CADENA)
			VALUES
			(VP_MOVI,4,VP_SQLERRM);

		END IF;

    WHEN OTHERS THEN

		VP_SQLCODE := SQLCODE;
        VP_SQLERRM := SQLERRM;
        VP_ERROR := '4';

		ROLLBACK;

		INSERT INTO GA_ERRORES (COD_ACTABO,CODIGO,FEC_ERROR,COD_PRODUCTO,COD_SQLERRM,NOM_PROC)VALUES
		(VP_COD_ACTABO,VP_COD_CLIENTE,SYSDATE,1,VP_SQLERRM, 'PV_PRC_INS_ICCMOVIMIENTO_PR');


		INSERT INTO GA_TRANSACABO
		(NUM_TRANSACCION, COD_RETORNO, DES_CADENA)
		VALUES
		(VP_MOVI,4,VP_SQLERRM);

END PV_PRC_INS_ICCMOVIMIENTO_PR;
/
SHOW ERRORS
