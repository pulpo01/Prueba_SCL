CREATE OR REPLACE PROCEDURE PV_EVALDEUDA_WEB_PR(V_PARAM_ENTRADA IN  VARCHAR2,
       	  		  								BRESULTADO    OUT VARCHAR2,
            									VMENSAJE      OUT GA_TRANSACABO.DES_CADENA%TYPE)
IS
STRING GE_TABTYPE_VCH2ARRAY:= GE_TABTYPE_VCH2ARRAY('','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','','');
SCODCLIENTE     GA_ABOCEL.COD_CLIENTE%TYPE;
SUSUARIO     	GE_SEG_GRPUSUARIO.NOM_USUARIO%TYPE;
SCODCATEGORIA   VARCHAR2(5);
SCODTASA     	CO_CATEGORIAS_TD.COD_TASA%TYPE;
------------------------------------------------------------------------------------------
SDIASAPLIC      NUMBER;
SDEUDA          CO_CARTERA.IMPORTE_DEBE%TYPE;
SDEUDAPERMITIDA CO_CARTERA.IMPORTE_DEBE%TYPE;

SCODPROCESO  GAD_PROCESOS_PERFILES.COD_PROCESO%TYPE;
SAUX   		 GAD_PROCESOS_PERFILES.COD_PROCESO%TYPE;
BEGIN
 	GE_PAC_ARREGLOPR.GE_PR_RETORNAARREGLO(V_PARAM_ENTRADA, STRING);
    SCODCLIENTE := TO_NUMBER(STRING(6));
    --SUSUARIO := STRING(24); --77820 COL|16-02-2009|EFR
    SUSUARIO := STRING(10);   --77820 COL|16-02-2009|EFR


 	SELECT VAL_PARAMETRO
    INTO SDEUDAPERMITIDA
    FROM GED_PARAMETROS
    WHERE COD_MODULO = 'GA'
    AND COD_PRODUCTO = 1
    AND NOM_PARAMETRO = 'DEUDA_ABONADO';

    SELECT COD_PROCESO INTO SCODPROCESO FROM GAD_PROCESOS_PERFILES WHERE NOM_PERFIL_PROCESO = 'PER_PL_PERMISO';

	 BEGIN
	 	  IF (SUSUARIO = '') OR (SUSUARIO IS NULL) THEN
		      SELECT A.COD_PROCESO
		      INTO SAUX
		      FROM  GE_SEG_PERFILES A, GE_SEG_GRPUSUARIO B
		      WHERE B.NOM_USUARIO  = USER
		      AND   A.COD_GRUPO    = B.COD_GRUPO
		      AND   A.COD_PROCESO  = SCODPROCESO
		      AND ROWNUM     = 1;
		  ELSE
		      SELECT A.COD_PROCESO
		      INTO SAUX
		      FROM  GE_SEG_PERFILES A, GE_SEG_GRPUSUARIO B
		      WHERE B.NOM_USUARIO  = SUSUARIO
		      AND   A.COD_GRUPO    = B.COD_GRUPO
		      AND   A.COD_PROCESO  = SCODPROCESO
		      AND ROWNUM     = 1;
		  END IF;
	 EXCEPTION
	      WHEN NO_DATA_FOUND THEN
	      SAUX:=NULL;
	 END;

	 IF SAUX IS NOT NULL THEN
	    BRESULTADO := 'TRUE';
	 ELSE

	  BEGIN
	  	SELECT COD_CATEGORIA
	    INTO SCODCATEGORIA
	    FROM GE_CLIENTES
	    WHERE COD_CLIENTE = SCODCLIENTE;


	    SELECT COD_TASA
	    INTO SCODTASA
	    FROM CO_CATEGORIAS_TD
	    WHERE COD_CATEGORIA = SCODCATEGORIA;


	    SELECT DIAS_APLICACION
	    INTO SDIASAPLIC
	    FROM CO_INTERESES
	    WHERE COD_TASA = SCODTASA
	    AND SYSDATE BETWEEN FEC_VIGENCIA_DD_DH
		AND FEC_VIGENCIA_HH_DH;



		    SELECT NVL(SUM(IMPORTE_DEBE - IMPORTE_HABER),0)
		    INTO SDEUDA
		    FROM CO_CARTERA
		    WHERE COD_CLIENTE   = SCODCLIENTE
		     --AND IND_FACTURADO = 2
		    AND IND_FACTURADO = 1
		    AND FEC_VENCIMIE  < TRUNC(SYSDATE)
		    AND FEC_VENCIMIE  + SDIASAPLIC  < TRUNC(SYSDATE)
		    AND COD_TIPDOCUM  NOT IN (SELECT TO_NUMBER(COD_VALOR)
		                              FROM CO_CODIGOS
		       						  WHERE NOM_TABLA   = 'CO_CARTERA'
		                        	  AND NOM_COLUMNA = 'COD_TIPDOCUM');

			  IF SDEUDA <= SDEUDAPERMITIDA THEN
		           BRESULTADO := 'TRUE';
		      ELSE
		           VMENSAJE   := 'NO PUEDE REALIZAR OOSS PARA ESTE ABONADO, DEBE REGULARIZAR DEUDA DE $ '|| SDEUDA;
		           BRESULTADO := 'FALSE';  --CLIENTE CON DEUDA --
		     END IF;
         EXCEPTION
			      WHEN NO_DATA_FOUND THEN
		  	   		     BRESULTADO := 'TRUE';
	     END;

 	 END IF;

EXCEPTION
     WHEN OTHERS THEN
          VMENSAJE   := 'ERROR EN PV_EVALDEUDA_WEB_PR: NO SE PUEDE VALIDAR DEUDA DEL ABONADO.(' || SQLERRM || ')';
    	  BRESULTADO := 'FALSE';
END PV_EVALDEUDA_WEB_PR;
/
SHOW ERRORS
