CREATE OR REPLACE PROCEDURE          "CA_BLOQDESQUEO_PR" (VP_NUM_TRANSACCION_V VARCHAR2, VP_NUM_ABONADO_V  varchar2,
 VP_COD_ACTABO   VARCHAR2,
 VP_COD_OS       VARCHAR2,
 VP_NOM_USUARIO  VARCHAR2,
 VP_SALDO_V        varchar2,
 VP_SUSPREHA     VARCHAR)
IS
  VP_NUM_TRANSACCION 	  GA_TRANSACABO.NUM_TRANSACCION%TYPE;
  VP_NUM_ABONADO          ICC_MOVIMIENTO.NUM_ABONADO%TYPE;
  VP_SALDO				  number;
  V_COD_ACTABO            ICC_MOVIMIENTO.COD_ACTABO%TYPE;
  V_COD_ESTADO            ICC_MOVIMIENTO.COD_ESTADO%TYPE;
  V_NUM_MOVIMIENTO        ICC_MOVIMIENTO.NUM_MOVIMIENTO%TYPE;
  V_COD_MODULO            ICC_MOVIMIENTO.COD_MODULO%TYPE;
  V_COD_ACTUACION         ICC_MOVIMIENTO.COD_ACTUACION%TYPE;
  V_TIP_TERMINAL          ICC_MOVIMIENTO.TIP_TERMINAL%TYPE;
  V_COD_CENTRAL           ICC_MOVIMIENTO.COD_CENTRAL%TYPE;
  V_NUM_CELULAR           ICC_MOVIMIENTO.NUM_CELULAR%TYPE;
  V_NUM_SERIE             ICC_MOVIMIENTO.NUM_SERIE%TYPE;
  V_TIP_TECNOLOGIA        ICC_MOVIMIENTO.TIP_TECNOLOGIA%TYPE;
  V_COD_CLIENTE           GA_ABOAMIST.COD_CLIENTE%TYPE;

  ERROR_PROCESO           EXCEPTION;

  VP_RESULTADO   NUMBER;
  VP_SQLCODE     VARCHAR2(200);
  VP_SQLERRM     VARCHAR2(200);

  VP_NUMTRANSABABO VARCHAR2(200);
  --Pl que permitira bloquear o desbloquear un abonado indidividual.
  --El contenido sera invocar al pl PV_PRC_GETDATOSABONADO_PR, que se
  --encargara de obtener todos los datos para realizar la insercion
  --en interfaces con central. Luego llamara al pl PV_PRC_INS_MOVIMIENTO,
  --lo que realizara el insert a la icc_movimiento
  BEGIN
     VP_RESULTADO := -1;
	 VP_NUM_ABONADO := TO_NUMBER(VP_NUM_ABONADO_V);
	 VP_SALDO := TO_NUMBER(VP_SALDO_V);
	 VP_NUM_TRANSACCION := TO_NUMBER(VP_NUM_TRANSACCION_V);


     PV_PRC_BLODESQUEO_PR(VP_NUM_ABONADO,VP_COD_ACTABO,VP_COD_OS,VP_NOM_USUARIO,VP_SALDO,VP_SUSPREHA,V_NUM_MOVIMIENTO,VP_SQLCODE,VP_SQLERRM,VP_NUMTRANSABABO);


	 IF VP_SQLCODE IS NULL OR VP_SQLCODE = 0 THEN
		VP_RESULTADO := 4;
	 ELSE
	 	VP_RESULTADO := 0;
     END IF;

	 INSERT INTO GA_TRANSACABO
	 (NUM_TRANSACCION, COD_RETORNO, DES_CADENA)
	 VALUES
	 (VP_NUM_TRANSACCION, VP_RESULTADO, SUBSTR(VP_SQLERRM,1,255));

      COMMIT;

   EXCEPTION
       WHEN ERROR_PROCESO THEN
   		   ROLLBACK;
END;
/
SHOW ERRORS
