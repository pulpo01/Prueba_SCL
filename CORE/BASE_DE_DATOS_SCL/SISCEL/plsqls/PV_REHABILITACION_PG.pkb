CREATE OR REPLACE PACKAGE BODY PV_REHABILITACION_PG AS

PROCEDURE PV_EJECUTA_OOSS_PR
(
 VSECUENCIA    	    IN GA_TRANSACABO.NUM_TRANSACCION%TYPE,
 V_COD_ACTABO       IN VARCHAR2,
 V_NUMEROPETICION   IN VARCHAR2,
 V_CODIGOSITUACION  IN GA_ABOCEL.COD_SITUACION%TYPE,
 V_NUMEROABONADO    IN GA_PETSR.NUM_ABONADO%TYPE,
 V_CODIGOMODULO     IN GA_SUSPREHABO.COD_MODULO%TYPE,
 V_TIPOREGISTRONEW  IN GA_SUSPREHABO.TIP_REGISTRO%TYPE,
 V_TIPOREGISTROOLD  IN GA_SUSPREHABO.TIP_REGISTRO%TYPE
)
IS

   V_ESTADO_TRANSACABO  GA_TRANSACABO.COD_RETORNO%TYPE;
   VCOD_PRODUCTO 	GA_ABOCEL.COD_PRODUCTO%TYPE;
   TIP_PLANTARIF_AUX	GA_ABOCEL.TIP_PLANTARIF%TYPE;
   TIP_SUSP_AUX		GA_PETSR.TIP_SUSP%TYPE;

   V_PROC               GA_ERRORES.NOM_PROC%TYPE;
   V_TABLA              GA_ERRORES.NOM_TABLA%TYPE;
   V_ACT                GA_ERRORES.COD_ACT%TYPE;
   V_SQLCODE            GA_ERRORES.COD_SQLCODE%TYPE;
   V_SQLERRM            GA_ERRORES.COD_SQLERRM%TYPE;
   V_ERROR              VARCHAR2(1);

BEGIN
   V_PROC              := 'PV_EJECUTA_OOSS_PR';
   V_ERROR             := '0';
   V_ESTADO_TRANSACABO := 4;
   V_SQLCODE 	       := '0';
   V_SQLERRM           := ' ';
   VCOD_PRODUCTO       := '1';


   V_TABLA   := 'GA_PETSR';
   V_ACT     := 'S';

   -- VERIFICA LA EXISTENCIA DE LA PETICION

   SELECT  TIP_SUSP INTO TIP_SUSP_AUX
   FROM GA_PETSR
   WHERE NUM_PETICION = V_NUMEROPETICION;


   -- BORRADO DE LA TABLA DE PETICIONES DE SUSPENSIONES PROGRAMADAS

   V_TABLA   := 'GA_ABOCEL';
   V_ACT     := 'D';

   DELETE GA_PETSR
   WHERE NUM_PETICION = V_NUMEROPETICION;

   -- VERIFICA LA EXISTENCIA DEL ABONADO

   V_TABLA   := 'GA_ABOCEL';
   V_ACT     := 'S';

   SELECT  TIP_PLANTARIF INTO TIP_PLANTARIF_AUX
   FROM GA_ABOCEL
   WHERE NUM_ABONADO  = V_NUMEROABONADO;

   -- ACTUALIZA SITUACION ABONADO

   V_TABLA   := 'GA_ABOCEL';
   V_ACT     := 'U';

   UPDATE  GA_ABOCEL
   SET COD_SITUACION  = V_CODIGOSITUACION,
       FEC_ULTMOD     = SYSDATE
   WHERE NUM_ABONADO  = V_NUMEROABONADO;

   -- VERIFICA LA EXISTENCIA DE LA SUSPENSION

   V_TABLA   := 'GA_SUSPREHABO';
   V_ACT     := 'S';

   SELECT TIP_SUSP INTO TIP_SUSP_AUX
   FROM GA_SUSPREHABO
   WHERE
   NUM_ABONADO  = V_NUMEROABONADO   AND
   COD_MODULO   = V_CODIGOMODULO    AND
   TIP_REGISTRO = V_TIPOREGISTROOLD AND
   num_peticion = V_NUMEROPETICION  AND --RA-200602110755: German Espinoza Z; 17/02/2006
   COD_SERVSUPL IS NULL             AND
   COD_NIVEL    IS NULL             AND
   FEC_REHABD   IS NULL;

   --ACTUALIZA EL TIPO DE REGISTRO EN LA SUSPENSION

   V_TABLA   := 'GA_SUSPREHABO';
   V_ACT     := 'U';

   UPDATE GA_SUSPREHABO
   SET FEC_REHABD   = SYSDATE,
   	   TIP_REGISTRO = V_TIPOREGISTRONEW
   WHERE
   NUM_ABONADO  = V_NUMEROABONADO   AND
   COD_MODULO   = V_CODIGOMODULO    AND
   TIP_REGISTRO = V_TIPOREGISTROOLD AND
   num_peticion = V_NUMEROPETICION  AND --RA-200602110755: German Espinoza Z; 17/02/2006
   COD_SERVSUPL IS NULL             AND
   COD_NIVEL    IS NULL             AND
   FEC_REHABD   IS NULL;


   INSERT INTO GA_TRANSACABO
   (NUM_TRANSACCION, COD_RETORNO, DES_CADENA)
   VALUES
   (VSECUENCIA,V_ERROR ,NULL);

EXCEPTION

	WHEN NO_DATA_FOUND THEN
	     V_SQLCODE := SQLCODE;
         V_SQLERRM := SQLERRM;
         V_ERROR   := '4';

	 INSERT INTO GA_ERRORES (COD_ACTABO,CODIGO,FEC_ERROR,COD_PRODUCTO,COD_SQLERRM,NOM_PROC,NOM_TABLA,COD_ACT)VALUES
         (V_COD_ACTABO,V_NUMEROABONADO ,SYSDATE,VCOD_PRODUCTO,V_SQLERRM,V_PROC,V_TABLA , V_ACT );

         INSERT INTO GA_TRANSACABO
         (NUM_TRANSACCION, COD_RETORNO, DES_CADENA)
         VALUES
         (VSECUENCIA,V_ESTADO_TRANSACABO,V_SQLERRM);

    WHEN OTHERS THEN
         V_SQLCODE := SQLCODE;
         V_SQLERRM := SQLERRM;
         V_ERROR   := '4';

	 INSERT INTO GA_ERRORES (COD_ACTABO,CODIGO,FEC_ERROR,COD_PRODUCTO,COD_SQLERRM,NOM_PROC,NOM_TABLA,COD_ACT)VALUES
         (V_COD_ACTABO,V_NUMEROABONADO,SYSDATE,VCOD_PRODUCTO,V_SQLERRM,V_PROC,V_TABLA , V_ACT );


         INSERT INTO GA_TRANSACABO
         (NUM_TRANSACCION, COD_RETORNO, DES_CADENA)
         VALUES
         (VSECUENCIA,V_ESTADO_TRANSACABO,V_SQLERRM);

END PV_EJECUTA_OOSS_PR;


PROCEDURE PV_CAMBIO_CARGO_BASICO_PR
(
 VSECUENCIA    		IN GA_TRANSACABO.NUM_TRANSACCION%TYPE,
 V_COD_ACTABO       IN VARCHAR2,
 V_PRODUCTO         IN GA_ABOCEL.COD_PRODUCTO%TYPE,
 V_NUMEROABONADO    IN GA_ABOCEL.NUM_ABONADO%TYPE,
 V_OPERACION        IN VARCHAR2,
 V_CARGO            IN VARCHAR2,
 V_COD_CLIENTE      IN GA_ABOCEL.COD_CLIENTE%TYPE,
 V_CICLO            IN GA_ABOCEL.COD_CICLO%TYPE
)
IS

   V_PROC               GA_ERRORES.NOM_PROC%TYPE;
   V_TABLA              GA_ERRORES.NOM_TABLA%TYPE;
   V_ACT                GA_ERRORES.COD_ACT%TYPE;
   V_SQLCODE            GA_ERRORES.COD_SQLCODE%TYPE;
   V_SQLERRM            GA_ERRORES.COD_SQLERRM%TYPE;
   V_ERROR              VARCHAR2(1);

   ERROR_PROCESO  EXCEPTION;

BEGIN
    V_PROC              := 'PV_CAMBIO_CARGO_BASICO_PR/P_Cargo_Basico';
    V_ERROR             := '0';
    V_SQLCODE 		    := '0';
    V_SQLERRM           := ' ';
    V_ACT				:= ' ';

    P_Cargo_Basico(V_PRODUCTO,V_COD_CLIENTE,V_NUMEROABONADO,V_CARGO,V_CICLO,
                   SYSDATE, V_OPERACION,V_PROC,V_TABLA,V_ACT,V_SQLCODE,V_SQLERRM,V_ERROR);

    IF V_ERROR <> '0' THEN
          V_ERROR := '4';
	  RAISE ERROR_PROCESO;
    END IF;

    INSERT INTO GA_TRANSACABO
    (NUM_TRANSACCION, COD_RETORNO, DES_CADENA)
    VALUES
    (VSECUENCIA,V_ERROR,NULL);

EXCEPTION

	WHEN ERROR_PROCESO THEN

	 INSERT INTO GA_ERRORES (COD_ACTABO,CODIGO,FEC_ERROR,COD_PRODUCTO,COD_SQLERRM,NOM_PROC,NOM_TABLA,COD_ACT)VALUES
         (V_COD_ACTABO,V_NUMEROABONADO ,SYSDATE,V_PRODUCTO,V_SQLERRM,V_PROC,V_TABLA , V_ACT );

         INSERT INTO GA_TRANSACABO
         (NUM_TRANSACCION, COD_RETORNO, DES_CADENA)
         VALUES
         (VSECUENCIA,V_ERROR,V_SQLERRM);

    WHEN OTHERS THEN

	 INSERT INTO GA_ERRORES (COD_ACTABO,CODIGO,FEC_ERROR,COD_PRODUCTO,COD_SQLERRM,NOM_PROC,NOM_TABLA,COD_ACT)VALUES
         (V_COD_ACTABO,V_NUMEROABONADO,SYSDATE,V_PRODUCTO,V_SQLERRM,V_PROC,V_TABLA , V_ACT );

         INSERT INTO GA_TRANSACABO
         (NUM_TRANSACCION, COD_RETORNO, DES_CADENA)
         VALUES
         (VSECUENCIA,V_ERROR,V_SQLERRM);

END PV_CAMBIO_CARGO_BASICO_PR;

END PV_REHABILITACION_PG;
/
SHOW ERRORS
