CREATE OR REPLACE PROCEDURE        LIBERA_SERIE (VP_SERIE IN VARCHAR2) IS
--
-- Procedimiento de recuperacion de articulos reservados en ventas incompletas
--
   V_ESTORIG AL_MOVIMIENTOS.COD_ESTADO%TYPE;
   V_TIPMOVRES AL_MOVIMIENTOS.TIP_MOVIMIENTO%TYPE;
   V_ROWID VARCHAR2(18);
   V_ARTICULO GA_RESERVART.COD_ARTICULO%TYPE;
   V_UNIDADES GA_RESERVART.NUM_UNIDADES%TYPE;
   V_PRODUCTO GA_RESERVART.COD_PRODUCTO%TYPE;
   V_BODEGA   GA_RESERVART.COD_BODEGA%TYPE;
   V_STOCK    GA_RESERVART.TIP_STOCK%TYPE;
   V_SERIE    GA_RESERVART.NUM_SERIE%TYPE;
   V_USO      GA_RESERVART.COD_USO%TYPE;
   V_ESTADO   GA_RESERVART.COD_ESTADO%TYPE;
   V_MOVIMIENTO AL_MOVIMIENTOS.NUM_MOVIMIENTO%TYPE;
   V_CAPCODE  GA_RESERVART.CAP_CODE%TYPE;
   V_TRANSAC GA_TRANSACABO.NUM_TRANSACCION%TYPE;
   V_RETORNO GA_TRANSACABO.COD_RETORNO%TYPE;
   V_CADENA GA_TRANSACABO.DES_CADENA%TYPE;
   CURSOR C1 IS
   SELECT ROWID,COD_ARTICULO,COD_PRODUCTO,
          COD_BODEGA,TIP_STOCK,COD_USO,
          COD_ESTADO,NUM_UNIDADES,NUM_SERIE,
          CAP_CODE
     FROM GA_RESERVART
    WHERE NUM_SERIE = VP_SERIE;
BEGIN
    OPEN C1;
    LOOP
      BEGIN
         FETCH C1 INTO V_ROWID,V_ARTICULO,V_PRODUCTO,
                       V_BODEGA,V_STOCK,V_USO,
                       V_ESTADO,V_UNIDADES,V_SERIE,
                       V_CAPCODE;
         EXIT WHEN C1%NOTFOUND;
         SELECT GA_SEQ_TRANSACABO.NEXTVAL INTO V_TRANSAC FROM DUAL;
         P_GA_INTERAL (V_TRANSAC,5,V_STOCK,V_BODEGA,V_ARTICULO,
         V_USO,V_ESTADO,NULL,V_UNIDADES,V_SERIE,1);
         SELECT COD_RETORNO,DES_CADENA
    INTO V_RETORNO,V_CADENA
    FROM GA_TRANSACABO
          WHERE NUM_TRANSACCION = V_TRANSAC;
          dbms_output.put_line('serie='||v_serie);
          dbms_output.put_line('retorno='||v_retorno);
          dbms_output.put_line('cadena='||v_cadena);
          IF V_RETORNO = 0 THEN
             DELETE GA_RESERVART WHERE ROWID = V_ROWID;
          END IF;
          DELETE GA_TRANSACABO WHERE NUM_TRANSACCION = V_TRANSAC;
      EXCEPTION
  WHEN OTHERS THEN
       ROLLBACK;
      END;
    END LOOP;
    CLOSE C1;
EXCEPTION
   WHEN OTHERS THEN
        NULL;
END;
/
SHOW ERRORS
