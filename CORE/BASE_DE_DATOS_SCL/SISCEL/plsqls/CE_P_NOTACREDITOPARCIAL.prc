CREATE OR REPLACE PROCEDURE CE_P_NOTACREDITOPARCIAL
(
V_SECUENCIA  IN VARCHAR2)
IS
V_CLIENTE 	 		   FA_HISTDOCU.COD_CLIENTE%TYPE;
V_ESTADOC			   FA_INTERFACT.COD_ESTADOC%TYPE;
V_TIPMOVIMIEN		   FA_INTERFACT.COD_TIPMOVIMIEN%TYPE;
V_TABLA_CONCEP 			VARCHAR2(30);
V_CICLFACT 				FA_HISTDOCU.COD_CICLFACT%TYPE;
V_SIGUE 				BOOLEAN;
V_VALOR 				NUMBER(1);
VP_CADENA  				GA_TRANSACABO.DES_CADENA%TYPE;
SSQL  	   	   		   VARCHAR2(512);
V_NUM_PROCESO  		   FA_NCPARCIAL.NUM_PROCESO%TYPE;
V_IND_ORDENTOTAL	   FA_HISTDOCU.IND_ORDENTOTAL%TYPE;
V_TABLA 			   VARCHAR2(1);
V_TIPDOCUM			   FA_HISTDOCU.COD_TIPDOCUM%TYPE;
V_VENDEDOR_AGENTE	   FA_HISTDOCU.COD_VENDEDOR_AGENTE%TYPE;
V_LETRA				   FA_HISTDOCU.LETRA%TYPE;
V_CENTREMI			   FA_HISTDOCU.COD_CENTREMI%TYPE;
V_FOLIO				   FA_HISTDOCU.NUM_FOLIO%TYPE;
V_TOT_FACTURA		   FA_HISTDOCU.TOT_FACTURA%TYPE;
V_SUPERTEL			   FA_HISTDOCU.IND_SUPERTEL%TYPE;
V_SECUENCI			   FA_HISTDOCU.NUM_SECUENCI%TYPE;
V_CATRIBUT			   GA_CATRIBUTCLIE.COD_CATRIBUT%TYPE;
V_NUM_FILAS			   NUMBER(3);
V_SEC_NCPARCIAL		   FA_NCPARCIAL.NUM_SECUENCIA%TYPE;
cursor_name			   INTEGER;
v_resul				   INTEGER;
v_cont				   INTEGER;
V_COD_CONCEPTO		   FA_FACTCONC_NOCICLO.COD_CONCEPTO%TYPE;
V_COLUMNA			   FA_FACTCONC_NOCICLO.COLUMNA%TYPE;
V_IMP_FACTURABLE	   FA_FACTCONC_NOCICLO.IMP_FACTURABLE%TYPE;
V_IMP_CONCEPTO		   FA_FACTCONC_NOCICLO.IMP_CONCEPTO%TYPE;
V_DIFERENCIA		   FA_FACTCONC_NOCICLO.IMP_FACTURABLE%TYPE;
V_NUM_TRANS_NC		   GA_TRANSACABO.NUM_TRANSACCION%TYPE;
V_RETORNO_NC		   GA_TRANSACABO.COD_RETORNO%TYPE;
VP_ERROR		   VARCHAR2(1);
V_POSEE_NC		   BOOLEAN;
V_COD_CLIENTE	   CED_EMPRESAS.COD_CLIENTE%TYPE;
V_MONTO			   CET_DOCFACT.MTO_SERVICIO%TYPE;
V_NUM_PROCESO_ACT  FA_NCPARCIAL.NUM_PROCESO%TYPE;
V_NUM_PROCESO_D    FA_INTERFACT.NUM_PROCESO%TYPE;

		cursor CUR_PROC is
		SELECT A.NUM_PROCFACT, SUM(A.MTO_SERVICIO), B.COD_CLIENTE, C.COD_CONCEPTO
		FROM CET_DOCFACT A, CED_EMPRESAS B, CED_SERVEMPRE C
		WHERE A.NUM_PROCTIPDOC = 0
		AND B.COD_EMPRESA = A.COD_EMPRSERV
		AND C.COD_SERVICIO = A.COD_SERVICIO
		AND B.COD_EMPRESA = C.COD_EMPRESA
		AND C.IND_FACTURACION = 1
		GROUP BY A.NUM_PROCFACT, B.COD_CLIENTE, C.COD_CONCEPTO;

BEGIN
-- ERROR: 0	VP_CADENA:='OK SIN ERROR' NUM_PROCESO
-- ERROR:1	VP_CADENA:='ERROR NO EXISTE FACTURA';
-- ERROR:2	VP_CADENA:='DATOS NO VALIDOS PARA EMITIR NC';
-- ERROR:3	VP_CADENA:='CON NOTA CREDITO PENDIENTE EN INTERFAZ';
-- ERROR:4	VP_CADENA:='ERROR NO EXISTEN CONCEPTOS POR FACTURAR';
-- ERROR:5	VP_CADENA:='ERROR DE INSERT.';
-- ERROR:6	VP_CADENA:='ERROR AL OBTENER DATOS GENERALES';
-- ERROR:7	VP_CADENA:='ERROR PROCESO FA_PRE_NOTACREDINTER';
-- ERROR:8	VP_CADENA:='ERROR PROCESO FA_PRE_NCPARCIAL';
-- ERROR:9	VP_CADENA:='ERROR NOTA DE CREDITO YA EFECTUADA';
V_VALOR:=2;
VP_ERROR:=0;
v_cont := 0;
V_SIGUE:=TRUE;
OPEN CUR_PROC;
LOOP
IF V_SIGUE THEN
 	 FETCH CUR_PROC INTO V_NUM_PROCESO, V_MONTO, V_COD_CLIENTE, V_COD_CONCEPTO;
	 IF CUR_PROC%NOTFOUND AND v_cont = 0 THEN
	 	VP_ERROR:=6;
		VP_CADENA:='NO EXISTEN NOTAS DE CREDITO';
		V_SIGUE:=FALSE;
	ELSE IF CUR_PROC%NOTFOUND AND v_cont > 0 THEN
		 	VP_ERROR:=0;
		    VP_CADENA:='OK';
			V_SIGUE:=FALSE;
		 END IF;
	 END IF;
	BEGIN
	--EXIT WHEN CUR_PROC%NOTFOUND;
	   SELECT GA_SEQ_TRANSACABO.NEXTVAL
	   INTO V_NUM_TRANS_NC
	   FROM DUAL;
	EXCEPTION
	   WHEN NO_DATA_FOUND THEN
	   		VP_ERROR:='6';
			VP_CADENA:='ERROR AL OBTENER DATOS GENERALES';
			V_SIGUE:=FALSE;
	END;

	IF V_SIGUE THEN
	BEGIN
	    BEGIN
  			   SELECT IND_ORDENTOTAL,COD_CICLFACT,'H',COD_TIPDOCUM,NUM_SECUENCI,
			   COD_VENDEDOR_AGENTE,LETRA,COD_CENTREMI,NUM_FOLIO,TOT_FACTURA,
			   IND_SUPERTEL,COD_CLIENTE
			   INTO V_IND_ORDENTOTAL,V_CICLFACT,V_TABLA,V_TIPDOCUM,V_SECUENCI,
			   V_VENDEDOR_AGENTE,V_LETRA,V_CENTREMI,V_FOLIO,V_TOT_FACTURA,
 			   V_SUPERTEL,V_CLIENTE
        	   FROM FA_HISTDOCU
        	   WHERE COD_CLIENTE = V_COD_CLIENTE AND
			   NUM_PROCESO = V_NUM_PROCESO;
		EXCEPTION
			WHEN NO_DATA_FOUND THEN
				 BEGIN
		       	 SELECT IND_ORDENTOTAL,COD_CICLFACT,'N',COD_TIPDOCUM,NUM_SECUENCI,
			   	 COD_VENDEDOR_AGENTE,LETRA,COD_CENTREMI,NUM_FOLIO,TOT_FACTURA,
   			   	 IND_SUPERTEL,COD_CLIENTE
				 INTO V_IND_ORDENTOTAL,V_CICLFACT,V_TABLA,V_TIPDOCUM,V_SECUENCI,
			 	 V_VENDEDOR_AGENTE,V_LETRA,V_CENTREMI,V_FOLIO,V_TOT_FACTURA,
			 	 V_SUPERTEL,V_CLIENTE
	    		 FROM FA_FACTDOCU_NOCICLO
   	    		 WHERE COD_CLIENTE = V_COD_CLIENTE AND
			   	 NUM_PROCESO = V_NUM_PROCESO;
				 EXCEPTION
				 		WHEN NO_DATA_FOUND THEN
							 VP_ERROR:='1';
							 VP_CADENA:='ERROR NO EXISTE FACTURA';
							 V_SIGUE:=FALSE;
				 END;
		END;
		IF V_SIGUE AND V_TOT_FACTURA > 0 AND V_FOLIO > 0 AND V_SUPERTEL=0 THEN
		   V_ESTADOC:=300;
		   V_TIPMOVIMIEN:=25;
		   BEGIN
		   		SELECT NUM_PROCESO INTO V_NUM_PROCESO_D
				FROM FA_INTERFACT
				WHERE COD_ESTADOC < V_ESTADOC
				AND COD_TIPMOVIMIEN = V_TIPMOVIMIEN
				AND NUM_FOLIOREL = V_FOLIO;
				--EXISTE NOTA DE CREDITO PENDIENTE
				VP_ERROR:='3';
				VP_CADENA:='CON NOTA CREDITO PENDIENTE EN INTERFAZ';
				V_SIGUE:=FALSE;
		   EXCEPTION
		   		WHEN NO_DATA_FOUND THEN
						--NOTA CREDITO PARCIAL
							 		SELECT FA_SEQ_NCPARCIAL.NEXTVAL
									INTO V_SEC_NCPARCIAL
									FROM DUAL;
									IF V_TABLA ='H' THEN
									   BEGIN
									   		   SELECT FA_HISTCONC
									   		   INTO V_TABLA_CONCEP
									   		   FROM FA_ENLACEHIST
									   		   WHERE COD_CICLFACT=V_CICLFACT;
									   EXCEPTION
									   		   WHEN NO_DATA_FOUND THEN
											   		VP_ERROR:='4';
													VP_CADENA:='ERROR NO EXISTEN CONCEPTOS POR FACTURAR';
													V_SIGUE:=FALSE;
									   END;
									ELSE
									   V_TABLA_CONCEP:='FA_FACTCONC_NOCICLO';
									END IF;
									IF V_SIGUE THEN

									   SSQL:='SELECT COLUMNA FROM ';
								   	   SSQL:= SSQL || V_TABLA_CONCEP;
								   	   SSQL:= SSQL ||' WHERE IND_ORDENTOTAL ='|| V_IND_ORDENTOTAL;
							   	   	   SSQL:= SSQL || ' AND COD_CONCEPTO = ' || V_COD_CONCEPTO;
								   	   cursor_name := dbms_sql.open_cursor;
        						   	   dbms_sql.parse(cursor_name,SSQL, dbms_sql.v7);
  								   	   DBMS_SQL.DEFINE_COLUMN(cursor_name, 1, V_COLUMNA);
  								   	   v_resul:=DBMS_SQL.EXECUTE(cursor_name);
									   V_POSEE_NC:=FALSE;
								   	   LOOP
								   		if DBMS_SQL.FETCH_ROWS(cursor_name) = 0 then
										      exit;
										end if;
  								   		DBMS_SQL.COLUMN_VALUE(cursor_name, 1,V_COLUMNA);
										BEGIN
										   		INSERT INTO FA_NCPARCIAL
										   		(NUM_SECUENCIA,COD_CLIENTE,IND_ORDENTOTAL,
										   		COD_TIPDOCUM,COD_CONCEPTO,COLUMNA,IMP_CONCEPTO,
										   		FLG_EMINC,FEC_SOLICITUD,NOM_USUARIO,NUM_PROCESO)
										   		VALUES(V_SEC_NCPARCIAL,V_CLIENTE,V_IND_ORDENTOTAL,
										   		V_TIPDOCUM,V_COD_CONCEPTO,V_COLUMNA,V_MONTO,
										   		0,SYSDATE,USER,V_NUM_PROCESO);
												VP_ERROR:='0';
											    VP_CADENA:=TO_CHAR(V_NUM_PROCESO);
											    V_POSEE_NC:=TRUE;
										EXCEPTION
												WHEN OTHERS THEN
													 VP_ERROR:='5';
													 VP_CADENA:='ERROR DE INSERT EN NC PARCIAL';
													 V_SIGUE:=FALSE;
										END;
								   	   END LOOP;
								   	   dbms_sql.close_cursor(cursor_name);
									   IF V_POSEE_NC THEN
								   		  fa_pre_notacredparcial(V_NUM_TRANS_NC,V_SEC_NCPARCIAL);
										  BEGIN
										    SELECT COD_RETORNO, DES_CADENA INTO V_RETORNO_NC,VP_CADENA
											FROM GA_TRANSACABO
											WHERE NUM_TRANSACCION=V_NUM_TRANS_NC;
											IF V_RETORNO_NC = 0 THEN
									   		   VP_ERROR:='0';
						   			   		   VP_CADENA:=TO_CHAR(V_NUM_PROCESO);

											   SELECT NUM_PROCESO INTO V_NUM_PROCESO_ACT
											   FROM FA_NCPARCIAL
											   WHERE NUM_SECUENCIA = V_SEC_NCPARCIAL;
											   BEGIN
											   		UPDATE CET_DOCFACT
													SET NUM_PROCTIPDOC = V_NUM_PROCESO_ACT
											   		WHERE NUM_PROCFACT   = V_NUM_PROCESO
													  AND NUM_PROCTIPDOC = 0;
											   EXCEPTION
											   	 WHEN OTHERS THEN
								   				 	  VP_ERROR:='8';
					   			   				 	  VP_CADENA:='ERROR AL ACTUALIZAR DATOS';
												 	  V_SIGUE:=FALSE;
						   				  		END;
											ELSE
									   		   	 VP_ERROR:='8';
						   			   		   	 VP_CADENA:='ERROR PROCESO FA_PRE_NOTACREDPARCIAL';
												 V_SIGUE:=FALSE;
											END IF;
						   				  EXCEPTION
						   					  WHEN OTHERS THEN
								   				 VP_ERROR:='8';
					   			   				 VP_CADENA:= VP_CADENA;
												 V_SIGUE:=FALSE;
						   				  END;
									    ELSE
								   				 VP_ERROR:='9';
					   			   				 VP_CADENA:='NOTA DE CREDITO TOTAL AFECTUADA ANTERIORMENTE';
												 V_SIGUE:=FALSE;
									    END IF;
									END IF;
		   END;
		END IF;
	EXCEPTION
		WHEN NO_DATA_FOUND THEN
		   VP_ERROR:='1';
		   VP_CADENA:='ERROR NO EXISTE FACTURA';
		   V_SIGUE:=FALSE;
	END;
    END IF; --SIGUE INICIAL
	v_cont := v_cont + 1;
 ELSE
 	 exit;
 END IF;
END LOOP;
CLOSE CUR_PROC;
	INSERT INTO GA_TRANSACABO (NUM_TRANSACCION,COD_RETORNO,DES_CADENA)
	VALUES(TO_NUMBER(V_SECUENCIA),VP_ERROR,VP_CADENA);
END;
/
SHOW ERRORS
