CREATE OR REPLACE PROCEDURE PV_INS_MOV_IDGESTOR_TO_PR (
VP_NUM_MOVI_TRANSACABO  IN NUMBER,
VP_COD_ACTABO	  		IN VARCHAR2,
VP_NUM_MOVIMIENTO       IN PV_MOV_IDGESTOR_TO.NUM_MOVIMIENTO%TYPE,
VP_NUM_ABONADO			IN PV_MOV_IDGESTOR_TO.NUM_ABONADO%TYPE,
VP_COD_MODULO			IN PV_MOV_IDGESTOR_TO.COD_MODULO%TYPE,
VP_ID_GESTOR			IN PV_MOV_IDGESTOR_TO.ID_GESTOR%TYPE,
VP_COD_ESTADO			IN PV_MOV_IDGESTOR_TO.COD_ESTADO%TYPE,
VP_COD_SEC				IN PV_MOV_IDGESTOR_TO.COD_SEC%TYPE,
pvCodValor 				OUT VARCHAR2,
pvErrorAplic 			OUT VARCHAR2,
pvErrorGlosa 			OUT VARCHAR2,
pvErrorOra 				OUT VARCHAR2,
pvErrorOraGlosa 		OUT VARCHAR2,
pvTrace 				OUT VARCHAR2

)
IS

VP_COD_CLIENTE             NUMBER(8);
VP_NUM_MOVI_TRANSACABO_AUX NUMBER(9);
VP_SQLCODE                 VARCHAR2(15);

--VP_SQLERRM               VARCHAR2(15);--RA-200511100087: German Espinoza Z; 14/12/2005
VP_SQLERRM                 GA_ERRORES.COD_SQLERRM%TYPE;--RA-200511100087: German Espinoza Z; 14/12/2005


BEGIN
	 		     VP_SQLCODE := ' ';
				 VP_SQLERRM := ' ';

				 pvCodValor      := 'TRUE';
	 			 pvErrorAplic 	 := '0';
	 			 pvErrorGlosa 	 := ' ';
	 			 pvErrorOra 	 := '0';
	 			 pvErrorOraGlosa := ' ';
	 			 pvTrace		 := ' ';


				 IF VP_NUM_MOVI_TRANSACABO = 0 THEN
				    -- Si viene en cero porque es una aplicación ADO  y generamos su secuencial para
					-- registrarlo en GA_TRANSACABO

					SELECT GA_SEQ_TRANSACABO.NEXTVAL
            	  	INTO   VP_NUM_MOVI_TRANSACABO_AUX
            		FROM   DUAL;


			     ELSE

				    VP_NUM_MOVI_TRANSACABO_AUX := VP_NUM_MOVI_TRANSACABO;

				 END IF;

			IF VP_COD_MODULO IS NOT NULL THEN

                INSERT INTO PV_MOV_IDGESTOR_TO
                (NUM_MOVIMIENTO,NUM_ABONADO,COD_MODULO,ID_GESTOR,COD_ESTADO,COD_SEC) VALUES
                (VP_NUM_MOVIMIENTO,VP_NUM_ABONADO,VP_COD_MODULO,VP_ID_GESTOR,VP_COD_ESTADO,VP_COD_SEC);

			END IF;

			INSERT INTO GA_TRANSACABO
            (NUM_TRANSACCION, COD_RETORNO, DES_CADENA)
            VALUES
            (VP_NUM_MOVI_TRANSACABO_AUX,0,NULL);



EXCEPTION


    WHEN DUP_VAL_ON_INDEX THEN
		        VP_SQLCODE := SQLCODE;

				--VP_SQLERRM := SQLERRM;--RA-200511100087: German Espinoza Z; 14/12/2005
				VP_SQLERRM := SUBSTR(SQLERRM,1,60);--RA-200511100087: German Espinoza Z; 14/12/2005

                pvCodValor      := 'FALSE';
 		       	ROLLBACK;

			    INSERT INTO GA_ERRORES (COD_ACTABO,CODIGO,FEC_ERROR,COD_PRODUCTO,COD_SQLERRM,NOM_PROC)VALUES
                (VP_COD_ACTABO,VP_NUM_ABONADO,SYSDATE,1,VP_SQLERRM,'PV_INS_MOV_IDGESTOR_TO_PR' );

				INSERT INTO GA_TRANSACABO
                (NUM_TRANSACCION, COD_RETORNO, DES_CADENA)
                VALUES
                (VP_NUM_MOVI_TRANSACABO_AUX,4,VP_SQLERRM);



	WHEN OTHERS THEN
		         VP_SQLCODE := SQLCODE;

        		 --VP_SQLERRM := SQLERRM;--RA-200511100087: German Espinoza Z; 14/12/2005
				 VP_SQLERRM := SUBSTR(SQLERRM,1,60);--RA-200511100087: German Espinoza Z; 14/12/2005

                 pvCodValor      := 'FALSE';
				 ROLLBACK;

				 INSERT INTO GA_ERRORES (COD_ACTABO,CODIGO,FEC_ERROR,COD_PRODUCTO,COD_SQLERRM,NOM_PROC)VALUES
                 (VP_COD_ACTABO,VP_NUM_ABONADO,SYSDATE,1,VP_SQLERRM,'PV_INS_MOV_IDGESTOR_TO_PR' );


   				INSERT INTO GA_TRANSACABO
                (NUM_TRANSACCION, COD_RETORNO, DES_CADENA)
                VALUES
                (VP_NUM_MOVI_TRANSACABO_AUX,4,VP_SQLERRM);



END;
/
SHOW ERRORS
