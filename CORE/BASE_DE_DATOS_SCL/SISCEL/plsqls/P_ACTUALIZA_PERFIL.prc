CREATE OR REPLACE PROCEDURE        P_ACTUALIZA_PERFIL(
  VP_PRODUCTO IN NUMBER ,
  VP_ABONADO IN NUMBER ,
  VP_CLASEABO IN VARCHAR2 ,
  VP_PERFIL IN VARCHAR2 ,
  VP_RENT IN NUMBER ,
  VP_FECSYS IN DATE )
IS
--
-- Procedimiento de carga de servicios suplementarios incluidos en el perfil
-- inicial de habilitacion
--
   V_PROCED VARCHAR2(30) := NULL;
   V_CLASESERVICIO GA_ABOCEL.CLASE_SERVICIO%TYPE;
   V_AUX GA_ABOCEL.CLASE_SERVICIO%TYPE;
   V_VAR1 GA_ABOCEL.CLASE_SERVICIO%TYPE;
   V_PERFILABO GA_ABOCEL.PERFIL_ABONADO%TYPE;
   V_SERVNIVEL VARCHAR2(6);
   V_SERVPERFIL VARCHAR2(6);
   V_CADNEW VARCHAR2(6);
   V_VAR2 VARCHAR2(6);
   V_SERVSUPL VARCHAR2(2);
   V_SERVSUPLPER VARCHAR2(2);
   V_NIVEL VARCHAR2(4);
   V_VAR3 VARCHAR2(4);
   V_NIVELPER VARCHAR2(4);
   V_IND VARCHAR2(1);
   V_POS NUMBER(3) := 1;
   V_POS2 NUMBER(3) := 1;
   TUPU GA_ABOCEL.PERFIL_ABONADO%TYPE;
   V_FIN NUMBER(1) := 0;
BEGIN
   V_PROCED := 'P_ACTUALIZA_PERFIL';
   V_CLASESERVICIO := VP_CLASEABO;
   TUPU := VP_PERFIL;
   LOOP
      V_SERVPERFIL := SUBSTR (TUPU, V_POS, 6);
      EXIT WHEN V_SERVPERFIL IS NULL;
      V_POS := V_POS + 6;
      V_SERVSUPLPER := SUBSTR(V_SERVPERFIL,1,2);
      V_NIVELPER    := SUBSTR(V_SERVPERFIL,3,4);
      V_IND := 'N';
      V_AUX := NULL;
      LOOP
         V_SERVNIVEL := SUBSTR (V_CLASESERVICIO, V_POS2, 6);
         EXIT WHEN V_SERVNIVEL IS NULL;
  V_POS2 := V_POS2 + 6;
         V_SERVSUPL := SUBSTR(V_SERVNIVEL,1,2);
         V_NIVEL    := SUBSTR(V_SERVNIVEL,3,4);
         IF V_SERVSUPL = V_SERVSUPLPER THEN
            IF V_NIVEL <> '0000' THEN
               V_IND := 'S';
        V_CADNEW := V_SERVSUPL||V_NIVEL;
            ELSE
               V_IND := '0';
            END IF;
         ELSE
            V_AUX := V_AUX||V_SERVSUPL||V_NIVEL;
         END IF;
       END LOOP;
       V_CLASESERVICIO := V_AUX;
       V_POS2 := 1;
       IF V_IND = 'S' THEN
          V_PERFILABO := V_PERFILABO||V_CADNEW;
       ELSIF V_IND = 'N' THEN
          V_PERFILABO := V_PERFILABO||V_SERVSUPLPER||V_NIVELPER;
       END IF;
   END LOOP;
   V_POS2 := 1;
   IF V_CLASESERVICIO IS NOT NULL THEN
      LOOP
         V_VAR2 := SUBSTR(V_CLASESERVICIO,V_POS2,6);
         EXIT WHEN V_VAR2 IS NULL;
  V_POS2 := V_POS2 + 6;
         V_VAR3 := SUBSTR(V_VAR2,3,4);
         IF V_VAR3 <> '0000' THEN
            V_VAR1 := V_VAR1||V_VAR2;
         END IF;
      END LOOP;
   END IF;
   V_PERFILABO := V_PERFILABO||V_VAR1;
   V_PERFILABO := RTRIM(V_PERFILABO);
   IF VP_PRODUCTO = 1 THEN
      IF VP_RENT = 0 THEN
         UPDATE GA_ABOCEL
            SET PERFIL_ABONADO = V_PERFILABO
          WHERE NUM_ABONADO = VP_ABONADO;
		  UPDATE GA_ABOAMIST
            SET PERFIL_ABONADO = V_PERFILABO
          WHERE NUM_ABONADO = VP_ABONADO;
      ELSE
         UPDATE GA_ABORENT
     SET PERFIL_ABONADO = V_PERFILABO
          WHERE NUM_ABONADO = VP_ABONADO
     AND VP_FECSYS BETWEEN FEC_ALTA
         AND FEC_BAJA;
      END IF;
   ELSIF VP_PRODUCTO = 2 THEN
      UPDATE GA_ABOBEEP
         SET PERFIL_ABONADO = V_PERFILABO
       WHERE NUM_ABONADO = VP_ABONADO;
   ELSIF VP_PRODUCTO = 3 THEN
      UPDATE GA_ABOTRUNK
         SET PERFIL_ABONADO = V_PERFILABO
       WHERE NUM_ABONADO = VP_ABONADO;
   ELSIF VP_PRODUCTO = 4 THEN
      UPDATE GA_ABOTREK
         SET PERFIL_ABONADO = V_PERFILABO
       WHERE NUM_ABONADO = VP_ABONADO;
   END IF;
EXCEPTION
   WHEN OTHERS THEN
        RAISE_APPLICATION_ERROR (-20211,V_PROCED||' '||SQLERRM);
END;
/
SHOW ERRORS
