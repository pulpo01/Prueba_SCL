CREATE OR REPLACE PROCEDURE        P_VALIDA_CICLO
 (V_CLIENTE IN GA_ABOCEL.COD_CLIENTE%TYPE,
V_PRODUCTO IN GA_ABOCEL.COD_PRODUCTO%TYPE,
V_ABONADO IN GA_ABOCEL.NUM_ABONADO%TYPE,
V_CICLO IN GA_ABOCEL.COD_CICLO%TYPE,
V_CICLO_NUEVO OUT GA_ABOCEL.COD_CICLO%TYPE,
VP_PROC IN OUT VARCHAR2,
VP_TABLA IN OUT VARCHAR2,
VP_ACT IN OUT VARCHAR2,
VP_SQLCODE IN OUT VARCHAR2,
VP_SQLERRM IN OUT VARCHAR2,
VP_ERROR IN OUT VARCHAR2) IS
V_CICLO_CLIENTE GA_ABOCEL.COD_CICLO%TYPE;
V_CICLONUE GA_ABOCEL.COD_CICLO%TYPE;
BEGIN
   V_CICLO_NUEVO:=V_CICLO;
   SELECT COD_CICLO
   INTO V_CICLO_CLIENTE
   FROM GE_CLIENTES
   WHERE COD_CLIENTE=V_CLIENTE
   AND COD_CICLONUE IS NULL;
   IF V_CICLO_CLIENTE <> V_CICLO THEN
          IF V_PRODUCTO= 1 THEN
                  UPDATE GA_ABOCEL SET COD_CICLO=V_CICLO_CLIENTE
                  WHERE NUM_ABONADO=V_ABONADO;
          ELSIF V_PRODUCTO=2 THEN
              UPDATE GA_ABOBEEP SET COD_CICLO=V_CICLO_CLIENTE
                    WHERE NUM_ABONADO=V_ABONADO;
          END IF;
          V_CICLO_NUEVO:=V_CICLO_CLIENTE;
   END IF;
   VP_ERROR:='0';
EXCEPTION
   WHEN NO_DATA_FOUND THEN
      VP_ERROR:='0';
      V_CICLO_NUEVO:=V_CICLO;
      VP_SQLCODE:=SQLCODE;
      VP_SQLERRM:=SQLERRM;
   WHEN OTHERS THEN
      VP_ERROR:='4';
      VP_SQLCODE:=SQLCODE;
      VP_SQLERRM:=SQLERRM;
END;
/
SHOW ERRORS
