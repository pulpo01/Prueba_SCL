CREATE OR REPLACE TRIGGER CM_ARCO_BEUP_TG
 BEFORE UPDATE  ON CMT_ARRIENDOS_COMPROB
 FOR EACH ROW

DECLARE

	iExiste         NUMBER(1);
	szEstado        CM_CICLCOMIS_TD.COD_ESTADO%TYPE;
	iCodCiclcomis   CM_CICLCOMIS_TD.COD_CICLCOMIS%TYPE;
	sFecha          DATE;

BEGIN
	iCodCiclcomis := :NEW.COD_PERIODO;
	IF LENGTH(iCodCiclcomis)<> 8 THEN
		RAISE_APPLICATION_ERROR(-20999,'EL CICLO NUEVO DE COMISIONES ES INVALIDO.');
		NULL;
	END IF;

	SELECT CM_VALIDA_CICLCOMIS_PG.EXISTECICLCOMIS(iCodCiclcomis)
	INTO iExiste FROM DUAL;
    IF iExiste = 0 THEN
        BEGIN
             CM_VALIDA_CICLCOMIS_PG.CREACICLCOMIS(iCodCiclcomis);
        EXCEPTION
            WHEN OTHERS THEN
                RAISE_APPLICATION_ERROR(-20999,'NO PUDO CREAR CICLO NUEVO DE COMISIONES.');
                NULL;
        END;
    ELSE
    	SELECT CM_VALIDA_CICLCOMIS_PG.GETESTADOCICLCOMIS(iCodCiclcomis)
    	INTO szEstado FROM DUAL;
        IF szEstado != 'INI' THEN
        	RAISE_APPLICATION_ERROR(-20999,'CICLO NUEVO CON ESTADO DISTINTO DE INI. NO ADMITE CAMBIOS.');
        END IF;
    END IF;

	iCodCiclcomis := :OLD.COD_PERIODO;
	IF LENGTH(iCodCiclcomis)<> 8 THEN
		RAISE_APPLICATION_ERROR(-20999,'EL CICLO ANTIGUO DE COMISIONES ES INVALIDO.');
		NULL;
	END IF;

	SELECT CM_VALIDA_CICLCOMIS_PG.EXISTECICLCOMIS(iCodCiclcomis)
	INTO iExiste FROM DUAL;
    IF iExiste = 0 THEN
        BEGIN
             CM_VALIDA_CICLCOMIS_PG.CREACICLCOMIS(iCodCiclcomis);
        EXCEPTION
            WHEN OTHERS THEN
                RAISE_APPLICATION_ERROR(-20999,'NO PUDO CREAR CICLO ANTIGUO DE COMISIONES.');
                NULL;
        END;
    ELSE
    	SELECT CM_VALIDA_CICLCOMIS_PG.GETESTADOCICLCOMIS(iCodCiclcomis)
    	INTO szEstado FROM DUAL;
        IF szEstado != 'INI' THEN
        	RAISE_APPLICATION_ERROR(-20999,'CICLO ANTIGUO CON ESTADO DISTINTO DE INI. NO ADMITE CAMBIOS.');
        END IF;
    END IF;

EXCEPTION
    WHEN OTHERS THEN
        RAISE_APPLICATION_ERROR(-20999,'REGISTRO INVALIDO: '||SQLERRM);
        NULL;
END CM_ARCO_BEUP_TG;
/
SHOW ERRORS
