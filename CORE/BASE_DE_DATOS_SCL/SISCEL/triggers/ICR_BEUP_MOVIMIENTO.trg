CREATE OR REPLACE TRIGGER icr_beup_movimiento
BEFORE UPDATE
OF COD_ESTADO
ON ICR_MOVIMIENTO
FOR EACH ROW
 
WHEN (
NEW.COD_ESTADO=0 OR NEW.COD_ESTADO=10       OR OLD.IND_BLOQUEO <>  NEW.IND_BLOQUEO
      )
DECLARE
 V_TABLA VARCHAR2(25):=NULL;
        V_COD_PRD GE_DATOSGENER.PROD_TRUNK%TYPE;
        V_OLD_RMOV ICR_MOVIMIENTO%ROWTYPE;
        V_NEW_RMOV ICR_MOVIMIENTO%ROWTYPE;
BEGIN
  BEGIN
  IF :NEW.COD_ESTADO = 0 OR :NEW.COD_ESTADO = 10 THEN
     V_TABLA:='GE_DATOSGENER';
     SELECT PROD_TRUNK INTO V_COD_PRD
       FROM GE_DATOSGENER;
     V_NEW_RMOV.NUM_MOVIMIENTO   := :NEW.NUM_MOVIMIENTO;
     V_NEW_RMOV.NUM_ABONADO      := :NEW.NUM_ABONADO;
     V_NEW_RMOV.COD_ACTUACION    := :NEW.COD_ACTUACION;
     V_NEW_RMOV.COD_ACTABO       := :NEW.COD_ACTABO;
     V_NEW_RMOV.COD_CENTRAL      := :NEW.COD_CENTRAL;
     V_NEW_RMOV.COD_CENTRAL_NUE  := :NEW.COD_CENTRAL_NUE;
     V_NEW_RMOV.COD_MODULO       := :NEW.COD_MODULO;
     V_NEW_RMOV.COD_ESTADO       := :NEW.COD_ESTADO;
     V_NEW_RMOV.DES_RESPUESTA    := :NEW.DES_RESPUESTA;
     V_NEW_RMOV.NUM_INTENTOS     := :NEW.NUM_INTENTOS;
     V_NEW_RMOV.FEC_INGRESO      := :NEW.FEC_INGRESO;
     V_NEW_RMOV.NOM_USUARORA     := :NEW.NOM_USUARORA;
     V_NEW_RMOV.FEC_LECTURA      := :NEW.FEC_LECTURA;
     V_NEW_RMOV.FEC_EJECUCION    := :NEW.FEC_EJECUCION;
     V_NEW_RMOV.COD_SERVICIOS    := :NEW.COD_SERVICIOS;
     V_NEW_RMOV.COD_SUSPREHA     := :NEW.COD_SUSPREHA;
     V_NEW_RMOV.NUM_MOVPOS       := :NEW.NUM_MOVPOS;
     V_NEW_RMOV.NUM_RADIO        := :NEW.NUM_RADIO;
     V_NEW_RMOV.NUM_RADIO_NUE    := :NEW.NUM_RADIO_NUE;
     V_NEW_RMOV.TIP_TERMINAL     := :NEW.TIP_TERMINAL;
     V_NEW_RMOV.TIP_TERMINAL_NUE := :NEW.TIP_TERMINAL_NUE;
     V_OLD_RMOV.NUM_MOVIMIENTO   := :OLD.NUM_MOVIMIENTO;
     V_OLD_RMOV.NUM_ABONADO      := :OLD.NUM_ABONADO;
     V_OLD_RMOV.COD_ACTUACION    := :OLD.COD_ACTUACION;
     V_OLD_RMOV.COD_ACTABO       := :OLD.COD_ACTABO;
     V_OLD_RMOV.COD_CENTRAL      := :OLD.COD_CENTRAL;
     V_OLD_RMOV.COD_CENTRAL_NUE  := :OLD.COD_CENTRAL_NUE;
     V_OLD_RMOV.COD_MODULO       := :OLD.COD_MODULO;
     V_OLD_RMOV.COD_ESTADO       := :OLD.COD_ESTADO;
     V_OLD_RMOV.DES_RESPUESTA    := :OLD.DES_RESPUESTA;
     V_OLD_RMOV.NUM_INTENTOS     := :OLD.NUM_INTENTOS;
     V_OLD_RMOV.FEC_INGRESO      := :OLD.FEC_INGRESO;
     V_OLD_RMOV.NOM_USUARORA     := :OLD.NOM_USUARORA;
     V_OLD_RMOV.FEC_LECTURA      := :OLD.FEC_LECTURA;
     V_OLD_RMOV.FEC_EJECUCION    := :OLD.FEC_EJECUCION;
     V_OLD_RMOV.COD_SERVICIOS    := :OLD.COD_SERVICIOS;
     V_OLD_RMOV.COD_SUSPREHA     := :OLD.COD_SUSPREHA;
     V_OLD_RMOV.NUM_MOVPOS       := :OLD.NUM_MOVPOS;
     V_OLD_RMOV.NUM_RADIO        := :OLD.NUM_RADIO;
     V_OLD_RMOV.NUM_RADIO_NUE    := :OLD.NUM_RADIO_NUE;
     V_OLD_RMOV.TIP_TERMINAL     := :OLD.TIP_TERMINAL;
     V_OLD_RMOV.TIP_TERMINAL_NUE := :OLD.TIP_TERMINAL_NUE;
     V_TABLA:='P_IC_PASOHR';
     IC_PASOH.P_IC_PASOHR(V_COD_PRD,V_OLD_RMOV,V_NEW_RMOV);
--  ELIF :OLD.IND_BLOQUEO <> :NEW.IND_BLOQUEO THEN
  ELSE
     V_TABLA:='ICR_COMPROC';
     UPDATE ICR_COMPROC SET IND_BLOQUEO = :NEW.IND_BLOQUEO
      WHERE NUM_MOVIMIENTO = :OLD.NUM_MOVIMIENTO;
  END IF;
  EXCEPTION WHEN OTHERS THEN
    RAISE_APPLICATION_ERROR
   (-20002,'ERROR TRIGGER ICR_BEUP_MOVIMIENTO: '||
    V_TABLA||' ORA'||TO_CHAR(SQLCODE),TRUE);
  END;
END;
/
SHOW ERRORS
