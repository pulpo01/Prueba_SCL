CREATE OR REPLACE TRIGGER CM_MACO_BEIN_TG
 BEFORE INSERT  ON CMD_MATRIZCOM
 FOR EACH ROW

DECLARE

    iExiste           	    NUMBER(1);
    szEstado                CM_CICLCOMIS_TD.COD_ESTADO%TYPE;
    iCodCiclcomis           CM_CICLCOMIS_TD.COD_CICLCOMIS%TYPE;
    sFecha          		DATE;
	sTipCiclComis 			CM_CICLCOMIS_TD.TIP_CICLCOMIS%TYPE;
	lNumActuacion			CMD_MATRIZCOM.NUM_ACTUACION%TYPE;

BEGIN
    BEGIN
	    lNumActuacion := :NEW.NUM_ACTUACION;
		SELECT B.TIP_CICLCOMIS
		INTO sTipCiclComis
		FROM CM_VALCONTRATOS_TD A,
			 CMD_CONCEPTOS B
		WHERE A.NUM_ACTUACION = lNumActuacion
		AND A.COD_CONCEPTO = B.COD_CONCEPTO;
	EXCEPTION
		WHEN OTHERS THEN
			RAISE_APPLICATION_ERROR(-20999,'ERROR COMPROBANDO ESTADOS DE CICLOS DE COMISIONES.');
            NULL;
	END;

	iCodCiclcomis := :NEW.COD_PERIODO_INI;
	IF LENGTH(iCodCiclcomis)<> 8 THEN
		RAISE_APPLICATION_ERROR(-20999,'EL CICLO INICIO DE COMISIONES INICIO ES INVALIDO.');
		NULL;
	END IF;

	SELECT CM_VALIDA_CICLCOMIS_PG.EXISTECICLCOMIS(iCodCiclcomis)
	INTO iExiste FROM DUAL;
    IF iExiste = 0 THEN
		IF sTipCiclComis = 'P' THEN
            BEGIN
                 CM_VALIDA_CICLCOMIS_PG.CREACICLCOMIS(iCodCiclcomis);
            EXCEPTION
                WHEN OTHERS THEN
                    RAISE_APPLICATION_ERROR(-20999,'NO PUDO CREAR CICLO INICIO DE COMISIONES.');
                    NULL;
            END;
		ELSE
            RAISE_APPLICATION_ERROR(-20999,'EL CICLO DE COMISIONES INICIO NO EXISTE.');
            NULL;
        END IF;
    ELSE
    	SELECT CM_VALIDA_CICLCOMIS_PG.GETESTADOCICLCOMIS(iCodCiclcomis)
    	INTO szEstado FROM DUAL;
        IF szEstado != 'INI' THEN
        	RAISE_APPLICATION_ERROR(-20999,'CICLO INICIO EN ESTADO DISTINTO DE INI. NO ADMITE CAMBIOS.');
        END IF;
    END IF;


	iCodCiclcomis := :NEW.COD_PERIODO_FIN;
	IF LENGTH(iCodCiclcomis)<> 8 THEN
		RAISE_APPLICATION_ERROR(-20999,'EL CICLO DE COMISIONES TERMINO ES INVALIDO.');
		NULL;
	END IF;

	SELECT CM_VALIDA_CICLCOMIS_PG.EXISTECICLCOMIS(iCodCiclcomis)
	INTO iExiste
	FROM DUAL;
    IF iExiste = 0 THEN
		IF sTipCiclComis = 'P' THEN
            BEGIN
                 CM_VALIDA_CICLCOMIS_PG.CREACICLCOMIS(iCodCiclcomis);
            EXCEPTION
                WHEN OTHERS THEN
                    RAISE_APPLICATION_ERROR(-20999,'NO PUDO CREAR CICLO TERMINO DE COMISIONES.');
                    NULL;
            END;
		ELSE
            RAISE_APPLICATION_ERROR(-20999,'EL CICLO DE COMISIONES TERMINO NO EXISTE.');
            NULL;
        END IF;
    ELSE
    	SELECT CM_VALIDA_CICLCOMIS_PG.GETESTADOCICLCOMIS(iCodCiclcomis)
    	INTO szEstado FROM DUAL;
        IF szEstado != 'INI' THEN
        	RAISE_APPLICATION_ERROR(-20999,'CICLO DE TERMINO EN ESTADO DISTINTO DE INI. NO ADMITE CAMBIOS.');
        END IF;
    END IF;

EXCEPTION
	WHEN OTHERS THEN
    	RAISE_APPLICATION_ERROR(-20999,'REGISTRO INVALIDO: '||SQLERRM);
        NULL;
END CM_MACO_BEIN_TG;
/
SHOW ERRORS
