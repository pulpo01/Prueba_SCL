CREATE OR REPLACE TRIGGER SC_AFUP_SCCONCEPTO
AFTER UPDATE ON SC_CONCEPTO
FOR EACH ROW
 
WHEN (NEW.DES_CONCEPTO <> OLD.DES_CONCEPTO)
DECLARE
V_CANT_GRUPOS NUMBER(2);
V_GRP_DOMINIO NUMBER(2);


CURSOR CURSOR_CODIGOS(V_GRPDOMINIO NUMBER) IS
	SELECT COD_GRP_DOMINIO	AS CodGrpDom,
		   COD_CTO_GRP		AS CodCtoGrp
	FROM SC_GRP_DOMINIO_DET
	WHERE COD_DOMINIO_CTO = :OLD.COD_DOMINIO_CTO
		   AND COD_CONCEPTO = :OLD.COD_CONCEPTO
		   AND COD_GRP_DOMINIO = V_GRPDOMINIO;

CURSOR CURSOR_GRPDOM IS
    SELECT cod_grp_dominio AS CodGrp_Dom
    FROM SC_GRP_DOMINIO
   	WHERE COD_DOMINIO_CTO = :OLD.COD_DOMINIO_CTO;

BEGIN
   SELECT count(1)
     INTO V_CANT_GRUPOS
     FROM SC_GRP_DOMINIO
    WHERE COD_DOMINIO_CTO = :OLD.COD_DOMINIO_CTO;

	   IF V_CANT_GRUPOS > 0 THEN

	   	  FOR GRPDOM IN CURSOR_GRPDOM LOOP

			  V_GRP_DOMINIO := GRPDOM.CodGrp_Dom;

	  	   	  FOR CODGRP IN CURSOR_CODIGOS(V_GRP_DOMINIO) LOOP

			    UPDATE SC_GRP_DOMINIO_DET
			     SET DES_CONCEPTO_GRP = REPLACE(DES_CONCEPTO_GRP, :OLD.DES_CONCEPTO, :NEW.DES_CONCEPTO)
			    WHERE COD_CTO_GRP = CODGRP.CodCtoGrp
			         AND COD_GRP_DOMINIO = CODGRP.CodGrpDom;
	  		  END LOOP;
		  END LOOP;
  	   END IF;

EXCEPTION
       WHEN NO_DATA_FOUND THEN
                 V_CANT_GRUPOS := 0;
       WHEN OTHERS THEN
                 RAISE_APPLICATION_ERROR  (-20002,'ERROR INESPERADO EN TRIGGER : ORA-'||TO_CHAR(SQLCODE)||'.',TRUE);
END;
/
SHOW ERRORS
