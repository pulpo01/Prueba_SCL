CREATE OR REPLACE TRIGGER CM_LIQU_BEUP_TG
 BEFORE UPDATE  ON CM_LIQUIDACION_TO
 FOR EACH ROW

DECLARE
	sIndCumpl_OLD	CM_LIQUIDACION_TO.IND_CUMPLIMIENTO%TYPE;
	sIndCumpl_NEW	CM_LIQUIDACION_TO.IND_CUMPLIMIENTO%TYPE;
	iTipoRed 		CM_LIQUIDACION_TO.COD_TIPORED%TYPE;
	szTipComis 		CM_LIQUIDACION_TO.COD_TIPCOMIS%TYPE;
	lCodComis 		CM_LIQUIDACION_TO.COD_COMISIONISTA%TYPE;
	szIdPeriodo 	CM_LIQUIDACION_TO.ID_PERIODO%TYPE;

BEGIN
	sIndCumpl_NEW := :NEW.IND_CUMPLIMIENTO;
	sIndCumpl_OLD := :OLD.IND_CUMPLIMIENTO;

	IF sIndCumpl_NEW <> sIndCumpl_OLD THEN
		BEGIN
			iTipoRed := :OLD.COD_TIPORED;
			szTipComis := :OLD.COD_TIPCOMIS;
			lCodComis := :OLD.COD_COMISIONISTA;
			szIdPeriodo := :OLD.ID_PERIODO;

			INSERT INTO CM_LIQCRITICO_TH
			(NUM_SECUENCIA, COD_TIPORED, COD_TIPCOMIS, COD_COMISIONISTA,
			 ID_PERIODO, IND_CUMPLIMIENTO, FEC_ULTMOD, NOM_USUARIO)
			VALUES (CMS_USO_GENERAL.NEXTVAL, iTipoRed, szTipComis,
			lCodComis, szIdPeriodo, sIndCumpl_OLD, SYSDATE, USER);

		EXCEPTION
			WHEN OTHERS THEN
		    	RAISE_APPLICATION_ERROR(-20997,'ERROR, NO SE PUEDE DEJAR CONSTANCIA DEL CAMBIO: '||SQLERRM);
		        NULL;
		END;
	END IF;

EXCEPTION
	WHEN OTHERS THEN
    	RAISE_APPLICATION_ERROR(-20997,'ERROR, NO SE PUEDE DEJAR CONSTANCIA DEL CAMBIO: '||SQLERRM);
        NULL;
END  CM_LIQU_BEUP_TG;
/
SHOW ERRORS
