<project name="main" default="All" basedir=".">
	<!--Autor: Jimmy Alexander LÃ³pez Pereira-->
	<!--Fecha: 05-06-08-->
	<!--Version: 1.0-->

	<property file="general.properties" />
	<property file="system.properties" />
	<property file="componente.properties" />

	<!-- Archivo de properties de un componente dado -->
	<property name="param.proyecto.properties"
		value="${proyecto.properties}" />

	<!-- Raiz del componente de negocio origen -->
	<property name="param.proyecto.root" value="${proyecto.root}" />

	<!-- Raiz del componente de Dominio origen -->
	<property name="param.proyecto.dominio.root"
		value="${proyecto.dominio.root}" />

	<!-- Raiz del componente de negocio destino -->
	<property name="param.proyecto.root.build"
		value="${proyecto.root.build}" />

	<!-- Indice de la iteracion de la compilacion -->
	<property name="param.iteracion.compilacion"
		value="${proyecto.iteracion.compilacion}" />

	<!-- Nombre del proyecto -->
	<property name="param.proyecto.name" value="${proyecto.name}" />

	<property file="${param.proyecto.properties}" />

	<!-- Define la tarea ant contribucion,  el jar debe estar en la libreria de ant y de eclipse -->
	<taskdef resource="net/sf/antcontrib/antlib.xml">
		<classpath>
			<pathelement
				location="/usr/share/java/lib/ant-contrib-version.jar" />
		</classpath>
	</taskdef>


	<!-- Verifica si se debe generar el dominio, ademas de los componentes java, ejb, etc -->
	<target name="All"
		depends="mostrarProyectoProperties,ProcesarComponentes">
	</target>

	<target name="verificarTipoComponente">
		<!-- Verifica si existe o no un componente java seteado, es decir, su propiedad -->
		<condition property="ejecutar.java">
			<and>
				<isset
					property="${gvalue.lista.proyectos.java}${param.iteracion.compilacion}" />
			</and>
		</condition>
		<echo>Ejecutar Java[${ejecutar.java}]</echo>

		<!-- Verifica si existe o no un componente Ejb seteado, es decir, su propiedad -->
		<condition property="ejecutar.ejb">
			<and>
				<isset
					property="${gvalue.lista.proyectos.ejb}${param.iteracion.compilacion}" />
			</and>
		</condition>
		<echo>Ejecutar Ejb[${ejecutar.ejb}]</echo>

		<!-- Verifica si existe o no un componente Web seteado, es decir, su propiedad -->
		<condition property="ejecutar.web">
			<isset
				property="${gvalue.lista.proyectos.web}${param.iteracion.compilacion}" />
		</condition>
		<echo>Ejecutar Web[${ejecutar.web}]</echo>

		<!-- Verifica si existe o no un componente multiple java seteado seteado, es decir, su propiedad -->
		<condition property="ejecutar.multiples.java">
			<isset
				property="${gvalue.lista.proyectos.multiples.java.indice}${param.iteracion.compilacion}" />
		</condition>
		<echo>Ejecutar multiples Java[${ejecutar.multiples.java}]</echo>
		
		<!-- Verifica si existe o no un componente Webservice seteado, es decir, su propiedad -->
		<condition property="ejecutar.ws">
			<isset
				property="${gvalue.lista.proyectos.ws}${param.iteracion.compilacion}" />
		</condition>
		<echo>Ejecutar Webservice[${ejecutar.ws}]</echo>		
	</target>

	<!-- Procesa los tipos de componentes en el caso de que aplique -->
	<target name="ProcesarComponentes"
		depends="verificaComponentesJava, verificaComponentesMultiplesJava, verificaComponentesEjb, verificaComponentesWeb, verificaComponentesWs, verificaPluginCompilacion">
	</target>

	<!-- Muestra las variables del proyecto  especifico de properties -->
	<target name="mostrarProyectoProperties">

		<echo>mostrarProyectoProperties ...</echo>

		<!-- Lista la iteracion de compilacion -->
		<echo>
			Iteracion de compilacion[${param.iteracion.compilacion}]
		</echo>
		<!-- Archivo de properties de un componente dado -->
		<echo>Properties J2EE[${param.proyecto.properties}]</echo>
		<!-- Raiz del componente de negocio origen -->
		<echo>Root de negocio src[${param.proyecto.root}]</echo>
		<!-- Raiz del componente de Dominio origen -->
		<echo>Root de dominio src[${param.proyecto.dominio.root}]</echo>
		<!-- Raiz del componente de negocio destino -->
		<echo>Root de negocio build[${param.proyecto.root.build}]</echo>
		<!-- Librerias del App server -->
		<echo>Librerias del App Server[${gvalue.lib.servidor}]</echo>
		<!-- Librerias de J2EE -->
		<echo>Librerias J2EE[${gvalue.lib.j2ee}]</echo>
		<!-- Librerias de J2EE externa-->
		<echo>Librerias J2EE Externa[${gvalue.lib.j2ee.externa}]</echo>
	</target>

	<!-- Verifica plugin compilacion -->
	<target name="verificaPluginCompilacion">
		<echo>verificaPluginCompilacion ...</echo>
	</target>


	<!-- Verifica los componentes Dominio -->
	<target name="verificaComponentesMultiplesJava"
		depends="verificarTipoComponente" if="ejecutar.multiples.java">
		<echo>verificaComponentesMultiplesJava ...</echo>

		<!-- Verifica si se genera el dominio o no -->
		<if>
			<equals arg1="${param.proyecto.name}"
				arg2="${gvalue.dominio}" />
			<then>
				<echo message="Se debe generar el dominio.jar..." />
				<if>
					<equals arg1="${gvalue.genera.dominio}" arg2="${gvalue.SI}" />

					<then>
						<echo message="Este proyecto es el dominio..." />
						<!-- Obtiene la lista de indices de los jar multiples a generar -->
						<propertycopy
							name="value.lista.proyectos.multiples.java.indice"
							from="${gvalue.lista.proyectos.multiples.java.indice}${param.iteracion.compilacion}"  />
						<echo>
							Indice de multiple proyectos
							java[${value.lista.proyectos.multiples.java.indice}]
						</echo>
						<!-- Hay que hacer un reindireccionamiento por medio de un foreach -->
						<foreach
							list="${value.lista.proyectos.multiples.java.indice}"
							delimiter="," target="procesaComponentesMultipleJava"
							param="lista.indices" />
					</then>
				</if>
			</then>
			<else>
				<echo message="Este No es el proyecto dominio..." />
				<!-- Obtiene la lista de indices de los jar multiples a generar -->
				<propertycopy
					name="value.lista.proyectos.multiples.java.indice"
					from="${gvalue.lista.proyectos.multiples.java.indice}${param.iteracion.compilacion}" />
				<echo>
					Indice de multiple proyectos
					java[${value.lista.proyectos.multiples.java.indice}]
				</echo>
				<!-- Hay que hacer un reindireccionamiento por medio de un foreach -->
				<foreach
					list="${value.lista.proyectos.multiples.java.indice}" delimiter=","
					target="procesaComponentesMultipleJava" param="lista.indices" />
			</else>
		</if>
	</target>


	<!-- Procesa los componentes multiples java -->
	<target name="procesaComponentesMultipleJava">
		<echo>procesaComponentesMultipleJava ...</echo>
		<echo>valor del indice[${lista.indices}]</echo>

		<propertycopy name="value.multiple.java.src"
			from="${gvalue.lista.proyectos.multiples.java}${param.iteracion.compilacion}.${lista.indices}" />
		<echo>
			variable del multiple java src[${value.multiple.java.src}]
		</echo>

		<propertycopy name="value.multiple.java.jar"
			from="${gvalue.lista.proyectos.multiples.java.jar}${param.iteracion.compilacion}.${lista.indices}" />
		<echo>
			variable del multiple java jar[${value.multiple.java.jar}]
		</echo>

		<propertycopy name="value.multiple.java.pattern.include"
			from="${gvalue.lista.proyectos.multiples.java.pattern.include}${param.iteracion.compilacion}.${lista.indices}" />
		<echo>
			variable de multiple java pattern
			include[${value.multiple.java.pattern.include}]
		</echo>

		<propertycopy name="value.multiple.java.pattern.exclude"
			from="${gvalue.lista.proyectos.multiples.java.pattern.exclude}${param.iteracion.compilacion}.${lista.indices}" />
		<echo>
			variable de multiple java pattern
			exclude[${value.multiple.java.pattern.exclude}]
		</echo>

		<if>
			<equals arg1="${param.proyecto.name}"
				arg2="${gvalue.dominio}" />
			<then>
				<echo>
					Raiz del dominio[${param.proyecto.dominio.root}]
				</echo>
				<var name="proyecto.dir.root" value="${param.proyecto.dominio.root}" />
			</then>
			<else>
				<echo>
					Raiz de otro proyecto diferente de dominio[${param.proyecto.root}]
				</echo>
				<var name="proyecto.dir.root" value="${param.proyecto.root}" />
			</else>
		</if>

		<ant antfile="${gvalue.plantilla.build.modulo.multiple.java}">
			<property name="value.proyecto.dir"
				value="${proyecto.dir.root}" />
			<property name="value.build"
				value="${param.proyecto.root.build}" />
			<property name="value.build.lib"
				value="${param.proyecto.root.build}/${gvalue.deploy.lib}" />
			<property name="value.modulo"
				value="${value.multiple.java.jar}" />
			<property name="${valueproyecto.properties}"
				value="${param.proyecto.properties}" />
			<property name="value.iteracion.compilacion"
				value="${param.iteracion.compilacion}" />
			<property name="value.multiple.java.src.var"
				value="${value.multiple.java.src}" />
			<property name="value.multiple.java.pattern.include.var"
				value="${value.multiple.java.pattern.include}" />
			<property name="value.multiple.java.pattern.exclude.var"
				value="${value.multiple.java.pattern.exclude}" />
		</ant>


	</target>

	<!-- Verifica los componentes java -->
	<target name="verificaComponentesJava"
		depends="verificarTipoComponente" if="ejecutar.java">
		<echo>verificaComponentesJava ...</echo>
		<!-- Obtiene la lista de proyectos Java de la i-esima compilacion -->
		<propertycopy name="lista.proyectos.java"
			from="${gvalue.lista.proyectos.java}${param.iteracion.compilacion}" />

		<!-- Lista los componentes java -->
		<echo>Proyectos Java[${lista.proyectos.java}]</echo>
		<!-- Obtiene la lista de proyectos java de la i-esima compilacion -->

		<var name="i" value="0" />
		<for list="${lista.proyectos.java}" param="proyecto">
			<sequential>
				<echo>Proyecto [@{proyecto}]</echo>
				<math result="i" operand1="${i}" operation="+"
					operand2="1" datatype="int" />
				<echo>Indice [${i}]</echo>
				<ant antfile="${gvalue.plantilla.build.modulo.java}">
					<property name="value.proyecto.dir"
						value="${param.proyecto.root}" />
					<property name="value.build"
						value="${param.proyecto.root.build}" />
					<property name="value.build.lib"
						value="${param.proyecto.root.build}/${gvalue.deploy.lib}" />
					<property name="value.modulo" value="@{proyecto}" />
					<property name="${valueproyecto.properties}"
						value="${param.proyecto.properties}" />
					<property name="value.iteracion.compilacion"
						value="${param.iteracion.compilacion}" />
				</ant>
			</sequential>
		</for>
	</target>

	<!-- Verifica los componentes Ejb -->
	<target name="verificaComponentesEjb"
		depends="verificarTipoComponente" if="ejecutar.ejb">
		<echo>verificaComponentesEjb ...</echo>

		<!-- Obtiene la lista de proyectos EJB de la i-esima compilacion -->
		<propertycopy name="lista.proyectos.ejb"
			from="${gvalue.lista.proyectos.ejb}${param.iteracion.compilacion}" />
		<!-- Lista los componentes Ejb -->
		<echo>Proyectos Ejb[${lista.proyectos.ejb}]</echo>
		<var name="i" value="0" />
		<for list="${lista.proyectos.ejb}" param="proyecto">
			<sequential>
				<echo>Proyecto [@{proyecto}]</echo>
				<math result="i" operand1="${i}" operation="+"
					operand2="1" datatype="int" />
				<echo>Indice [${i}]</echo>
				<ant antfile="${gvalue.plantilla.build.modulo.ejb}">
					<property name="value.proyecto.dir"
						value="${param.proyecto.root}" />
					<property name="value.build"
						value="${param.proyecto.root.build}" />
					<property name="value.build.lib"
						value="${param.proyecto.root.build}/${gvalue.deploy.lib}" />
					<property name="value.modulo" value="@{proyecto}" />
					<property name="${valueproyecto.properties}"
						value="${param.proyecto.properties}" />
					<property name="value.iteracion.compilacion"
						value="${param.iteracion.compilacion}" />
				</ant>
			</sequential>
		</for>
	</target>


	<!-- Verifica los componentes Web -->
	<target name="verificaComponentesWeb"
		depends="verificarTipoComponente" if="ejecutar.web">
		<echo>verificaComponentesWeb ...</echo>
		<!-- Obtiene la lista de proyectos Web de la i-esima compilacion -->
		<propertycopy name="lista.proyectos.web"
			from="${gvalue.lista.proyectos.web}${param.iteracion.compilacion}" />

		<!-- Lista los componentes Web -->
		<echo>Proyectos Web[${lista.proyectos.web}]</echo>
		<var name="i" value="0" />
		<for list="${lista.proyectos.web}" param="proyecto">
			<sequential>
				<echo>Proyecto [@{proyecto}]</echo>
				<math result="i" operand1="${i}" operation="+"
					operand2="1" datatype="int" />
				<echo>Indice [${i}]</echo>
				<ant antfile="${gvalue.plantilla.build.modulo.web}">
					<property name="value.proyecto.dir"
						value="${param.proyecto.root}" />
					<property name="value.build"
						value="${param.proyecto.root.build}" />
					<property name="value.build.lib"
						value="${param.proyecto.root.build}/${gvalue.deploy.lib}" />
					<property name="value.modulo" value="@{proyecto}" />
					<property name="${valueproyecto.properties}"
						value="${param.proyecto.properties}" />
					<property name="value.iteracion.compilacion"
						value="${param.iteracion.compilacion}" />
				</ant>
			</sequential>
		</for>
	</target>

	

	<!-- Verifica los componentes Webservices -->
	<target name="verificaComponentesWs"
		depends="verificarTipoComponente" if="ejecutar.ws">
		<echo>verificaComponentesWs ...</echo>
		<!-- Obtiene la lista de proyectos Webservices de la i-esima compilacion -->
		<propertycopy name="lista.proyectos.ws"
			from="${gvalue.lista.proyectos.ws}${param.iteracion.compilacion}" />

		<!-- Lista los componentes Webservices -->
		<echo>Proyectos Webservice[${lista.proyectos.ws}]</echo>
		<var name="i" value="0" />
		<for list="${lista.proyectos.ws}" param="proyecto">
			<sequential>
				<echo>Proyecto [@{proyecto}]</echo>
				<math result="i" operand1="${i}" operation="+"
					operand2="1" datatype="int" />
				<echo>Indice [${i}]</echo>
				<var name="proyecto.ws.var" value="@{proyecto}"/>
				<antcallback target="obtienePlantilladeWebservice" return="plantilla.retorno"/>
				<echo>Plantilla de retorno de Webservice [${plantilla.retorno}]</echo>
				<ant antfile="${plantilla.retorno}">
					<property name="value.proyecto.dir"
						value="${param.proyecto.root}" />
					<property name="value.build"
						value="${param.proyecto.root.build}" />
					<property name="value.build.lib"
						value="${param.proyecto.root.build}/${gvalue.deploy.lib}" />
					<property name="value.modulo" value="@{proyecto}" />
					<property name="${valueproyecto.properties}"
						value="${param.proyecto.properties}" />
					<property name="value.iteracion.compilacion"
						value="${param.iteracion.compilacion}" />
				</ant>				

			</sequential>
		</for>
	</target>	
	<!-- Obtiene la plantilla del webservice especifica al servidor de aplicaciones -->	
	<target name="obtienePlantilladeWebservice" >
		<echo>obtienePlantilladeWebservice ...</echo>
		<echo>Proyecto Webservice[${proyecto.ws.var}]</echo>
		<propertycopy name="proyecto.ws.servidor" from="${proyecto.ws.var}${gvalue.ws.servidor}" override="true" />
		<echo>Servidor de Aplicaciones[${proyecto.ws.servidor}]</echo>
		<if>
			<equals arg1="${proyecto.ws.servidor}"
				arg2="${gvalue.lista.proyectos.ws.servidor.oc4j}" />
			<then>
				<echo>
					Servidor OC4J
				</echo>
				<antcallback target="plantillaWebserviceOC4J" return="plantilla.retorno"/>
			</then>
		</if>	
		<if>
			<equals arg1="${proyecto.ws.servidor}"
				arg2="${gvalue.lista.proyectos.ws.servidor.weblogic}" />
			<then>
				<echo>
					Servidor Weblogic
				</echo>
				<antcallback target="plantillaWebserviceWeblogic" return="plantilla.retorno"/>
			</then>
		</if>		
	</target>	
	
	<!-- Obtiene la plantilla del webservice especifica al servidor oc4j -->	
	<target name="plantillaWebserviceOC4J" >
		<echo>plantillaWebserviceOC4J ...</echo>
		<echo>Proyecto Webservice[${proyecto.ws.var}]</echo>
		<propertycopy name="proyecto.ws.version.servidor" from="${proyecto.ws.var}${gvalue.ws.version.servidor}" override="true" />
		<echo>Version del Servidor de Aplicaciones[${proyecto.ws.version.servidor}]</echo>
		<if>
			<equals arg1="${proyecto.ws.version.servidor}"
				arg2="${gvalue.lista.proyectos.ws.servidor.oc4j.version.10.1}" />
			<then>
				<echo>
					Version 10.1
				</echo>
				<propertycopy name="proyecto.ws.ejb.implementacion" from="${proyecto.ws.var}${gvalue.ws.ejb.implementacion}" override="true" />
				<echo>Version de la implementacion del Ejb[${proyecto.ws.ejb.implementacion}]</echo>				
				<if>
					<equals arg1="${proyecto.ws.ejb.implementacion}"
						arg2="${gvalue.lista.proyectos.ws.servidor.version.ejb.2.0}" />
					<then>
						<echo>
							Implementacion del Ejb 2.0
						</echo>
						<var name = "plantilla.retorno" value = "${gvalue.plantilla.build.modulo.ws.oc4j-10.1-2.0}"/>
					</then>
				</if>				
			</then>
		</if>	
	</target>		
	
	
	<!-- Obtiene la plantilla del webservice especifica al servidor Weblogic -->	
	<target name="plantillaWebserviceWeblogic" >
		<echo>plantillaWebserviceWeblogic ...</echo>
		<echo>Proyecto Webservice[${proyecto.ws.var}]</echo>
		<propertycopy name="proyecto.ws.version.servidor" from="${proyecto.ws.var}${gvalue.ws.version.servidor}" override="true" />
		<echo>Version del Servidor de Aplicaciones[${proyecto.ws.version.servidor}]</echo>
		<if>
			<equals arg1="${proyecto.ws.version.servidor}"
				arg2="${gvalue.lista.proyectos.ws.servidor.weblogic.version.8.1}" />
			<then>
				<echo>
					Version 8.1
				</echo>
				<propertycopy name="proyecto.ws.ejb.implementacion" from="${proyecto.ws.var}${gvalue.ws.ejb.implementacion}" override="true" />
				<echo>Version de la implementacion del Ejb[${proyecto.ws.ejb.implementacion}]</echo>				
				<if>
					<equals arg1="${proyecto.ws.ejb.implementacion}"
						arg2="${gvalue.lista.proyectos.ws.servidor.version.ejb.2.0}" />
					<then>
						<echo>
							Implementacion del Ejb 2.0
						</echo>
						<var name = "plantilla.retorno" value = "${gvalue.plantilla.build.modulo.ws.weblogic-8.1-2.0}"/>
					</then>
				</if>				
			</then>
		</if>	
	</target>		

</project>