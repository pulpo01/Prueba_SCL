<?xml version="1.0" encoding="utf-8"?>
<mx:Module xmlns:mx="http://www.adobe.com/2006/mxml" layout="absolute" width="866" height="450" initialize="init();" xmlns:ns1="Cliente.*" alpha="1.0" backgroundAlpha="1.0">


	<mx:Script>
	<![CDATA[
		import mx.controls.TextInput;
		import user.libreria.clases.StringUtil;
		import generated.webservices.orquestador.GetDetalleClienteResultEvent;
		import mx.messaging.channels.StreamingAMFChannel;
		import mx.states.SetProperty;
	
		import mx.core.Application;
		import mx.controls.Alert;
		import mx.rpc.events.FaultEvent;
		import mx.collections.ArrayCollection;
		import mx.utils.ArrayUtil;
		import mx.managers.PopUpManager;
		import user.libreria.componentes.scrollbars.BarraDeProgreso2;
		import mx.managers.PopUpManager;
		import mx.core.IFlexDisplayObject;
		import flash.display.DisplayObject;
		
		import generated.webservices.orquestador.*;
		import user.libreria.clases.StringUtil;
				
		import mx.events.ModuleEvent;
		import mx.events.CloseEvent;
	    import mx.modules.ModuleManager;
	   	import mx.modules.IModuleInfo;
		import mx.controls.Label;
	
		public var searchingPopUpView:Class = BarraDeProgreso2;
		public var popUpWindow:IFlexDisplayObject;
		public var popUpParent:DisplayObject;
		public var wsORQ:WSSEGPortal = new WSSEGPortal();
			
		[Bindable]
		public var dsGrid:Array = new Array();

		[Embed(source="/recursosInterfaz/imagenes/iconos/alert/warning.png")]
        public var iconWarning:Class; 		

		// --------------------------------------------------------------------------------
		
		private function getError(event:FaultEvent):void    {
			        
			PopUpManager.removePopUp(popUpWindow);
			
			Application.application.sesionFlagButon = false;
			
			if(flash.external.ExternalInterface.call('controlSession')) {
				/*
				var mensaje:String = new String();
				mensaje = event.fault.faultString + "\n" + event.fault.faultDetail;
		     	Alert.show(mensaje, "Error en la aplicaciÃ³n");
		     	*/
		     	
		     	var url:String = new String();
				url = StringUtil.getValor("urlApplicationLogout","VALOR");
				var urlLogout:URLRequest = new URLRequest(url);
				navigateToURL(urlLogout, "_top");
		     	
	  		}
		} // getError
		
		// --------------------------------------------------------------------------------
		
		/*private function getDataClick(event:GetDetalleDireccionResultEvent):void	{
		
			PopUpManager.removePopUp(popUpWindow);
			
			if (event.result != null)	{
				txtRegion.text = event.result.desRegion;
				txtComuna.text = event.result.desComuna;
				txtCiudad.text = event.result.desCiudad;
				txtProvincia.text = event.result.desProvincia;

				txtCalle.text = StringUtil.nulo2String(event.result.nomCalle);
				txtCodPostal.text = StringUtil.nulo2String(event.result.zip);
				txtNroExterno.text = StringUtil.nulo2String(event.result.numCalle);
				txtNroInterno.text = StringUtil.nulo2String(event.result.numPiso);
							
				if (event.result.obsDireccion != null)
					txtComentarios.text = event.result.obsDireccion;
				if (event.result.obsDireccion2!= null)
					txtComentarios1.text = event.result.obsDireccion2;					
			} // if
			else
				Alert.show( event.result.desError, 
							"Advertencia", 
							mx.controls.Alert.OK,
							this,
							null,
							iconWarning,
							mx.controls.Alert.OK );
			
		} // getDataClick
		*/
		// --------------------------------------------------------------------------------
					
		
		private function getDataDireccionClick(event:ObtenerDatosDireccionClienteResultEvent):void	{
		
			PopUpManager.removePopUp(popUpWindow);
			
			var inpMan:TextInput;
			var intXInput:int;
            var intYInput:int;
            var inpManHeight=22
            var inpManWidth=405
			
			if (event.result != null)	{
			
			    var numcant:int;
			    var sCombo:String = "CMB";
			    var sName:String;
			    var dispInpMan:DisplayObject;
			    
			    numcant= event.result.arrayValorCampos.length;
				
				for (var i:int = 0; i < numcant; i++){
					
					sName = "INPMan"+event.result.arrayValorCampos[i].secDat;
					
					dispInpMan = this.contenedor.getChildByName(sName);
					//se rescata las posiciones x e y del objeto
					intXInput = dispInpMan.x;
                    intYInput = dispInpMan.y;
                    
                    //luego se remueve el objeto
					this.contenedor.removeChild(dispInpMan);
					
					//luego se crea el objeto con valor
					inpMan = new TextInput();
			    	inpMan.x = intXInput;
                    inpMan.y = intYInput;
                        
                    inpMan.name = sName;
                    inpMan.id = sName;
                        
//                        inpMan.fontSize="10"
                    inpMan.editable = "false";
                    inpMan.height=inpManHeight
                    inpMan.width=inpManWidth
                            
					if(sCombo == event.result.arrayValorCampos[i].tipDat){
						//cuando el tipo de dato es Combo
						inpMan.text = StringUtil.nulo2String(event.result.arrayValorCampos[i].desValor);
						this.contenedor.addChild(inpMan);
						
					}else{
						
						if("13" == event.result.arrayValorCampos[i].codParamDir){
							inpMan.text = StringUtil.nulo2String(event.result.arrayValorCampos[i].desValor);
							this.contenedor.addChild(inpMan);
							
						}else{
							
							//cuando el tipo de dato es TXT
							inpMan.text = StringUtil.nulo2String(event.result.arrayValorCampos[i].codValor);
							this.contenedor.addChild(inpMan);
						}
					}
					
				}	
									
			} // if
			else{
				Alert.show( event.result.desError, 
							"Advertencia", 
							mx.controls.Alert.OK,
							this,
							null,
							iconWarning,
							mx.controls.Alert.OK );
			}
		} // getDataDireccionClick
       
       // --------------------------------------------------------------------------------
					
		private function getDataLoad(event:DireccionesXCodClienteResultEvent):void	{
		
			//PopUpManager.removePopUp(popUpWindow);
			
			if (event.result.arrayDirecciones != null){
				dsGrid = event.result.arrayDirecciones;
				
				//RA DIRECIONES
				//Obtiene los campos para desplegar en el formulario de direcciones
				wsORQ.addobtenerCamposDireccionEventListener(getCamposDireccion);
				wsORQ.obtenerCamposDireccion();
				// FIN RA DIRECCIONES
					
			}else{
				
				PopUpManager.removePopUp(popUpWindow);
				
				Alert.show( event.result.desError, 
							"Advertencia", 
							mx.controls.Alert.OK,
							this,
							null,
							iconWarning,
							mx.controls.Alert.OK );
			}
			
		} // getData  
					
					
		// --------------------------------------------------------------------------------	

		private function getCamposDireccion(event:ObtenerCamposDireccionResultEvent):void	{
		
			PopUpManager.removePopUp(popUpWindow);
			
			if (event.result.codError == null){
			
				var numcant:int;
				var sCombo:String = "CMB";
				var sStyleLabel:String = "TituloCampo";
				var sName:String;
				var intX:int = 328.5;
				var intY:int = 25.35;
				var intXInput:int = 419.5;
                var intYInput:int = 23.35;	
                var inpManHeight=22
                var inpManWidth=405							
				var lblMan:Label;
				var inpMan:TextInput;
				
				numcant= event.result.arrayCampos.length;
				
				for (var i:int = 0; i < numcant; i++){
			         
			    	if(sCombo == event.result.arrayCampos[i].tipDat){
			    		
                        //si el tipo de dato es un combo	
			    		//label
                        lblMan = new Label();
                        lblMan.x = intX;
                        lblMan.y = intY;
                        
                        sName = "LBLMan"+i;
                        lblMan.name = sName;
                        lblMan.id = sName;
                        
                        lblMan.text = event.result.arrayCampos[i].caption;
                        
                        lblMan.styleName = sStyleLabel;
                        
                        this.contenedor.addChild(lblMan);
                        
                        //Input
                        inpMan = new TextInput();
			    		inpMan.x = intXInput;
                        inpMan.y = intYInput;
                        
                        sName = "INPMan"+event.result.arrayCampos[i].secDat;
                        inpMan.name = sName;
                        inpMan.id = sName;
                        
//                        inpMan.fontSize="10"
                        inpMan.editable = "false";
                        inpMan.height=inpManHeight
                        inpMan.width=inpManWidth
                        
                        this.contenedor.addChild(inpMan);
			    	}else{
			    		
			    		if("13" == event.result.arrayCampos[i].codParamDir){
			    			
			    			//Label
                            lblMan = new Label();
                            lblMan.x = intX;
                            lblMan.y = intY;
                        
                            sName = "LBLMan"+i;
                            lblMan.name = sName;
                            lblMan.id = sName;
                        
                            lblMan.text = event.result.arrayCampos[i].caption;
                        
                            lblMan.styleName = sStyleLabel;
                        
                            this.contenedor.addChild(lblMan);
                        	
                        	//Input
                            inpMan = new TextInput();
			    		    inpMan.x = intXInput;
                            inpMan.y = intYInput;
                        
                            sName = "INPMan"+event.result.arrayCampos[i].secDat;
                            inpMan.name = sName;
                            inpMan.id = sName;
                        
//                            inpMan.fontSize="10"
                            inpMan.editable = "false";
                            inpMan.height=inpManHeight
                            inpMan.width=inpManWidth
                        
                            this.contenedor.addChild(inpMan);
                            
			    		}else{
			    			
			    			//cuando el tipo de dato es TXT
			    			//Label
			    			lblMan = new Label();
                            lblMan.x = intX;
                            lblMan.y = intY;
                        
                            sName = "LBLMan"+i;
                            lblMan.name = sName;
                            lblMan.id = sName;
                        
                            lblMan.text = event.result.arrayCampos[i].caption;
                        
                            lblMan.styleName = sStyleLabel;
                        
                            this.contenedor.addChild(lblMan);
                            
                            //Input
                            inpMan = new TextInput();
			    		    inpMan.x = intXInput;
                            inpMan.y = intYInput;
                        
                            sName = "INPMan"+event.result.arrayCampos[i].secDat;
                            inpMan.name = sName;
                            inpMan.id = sName;
                        
//                            inpMan.fontSize="10"
                            inpMan.editable = "false";
                            inpMan.height=inpManHeight
                            inpMan.width=inpManWidth
                        
                            this.contenedor.addChild(inpMan);
                        
			    		}
			    	}	    	
			        	
			        intY = intY + 28;
			        intYInput = intYInput + 28;	
			    }
			    
			}else{
				
				Alert.show( event.result.desError, 
							"Advertencia", 
							mx.controls.Alert.OK,
							this,
							null,
							iconWarning,
							mx.controls.Alert.OK );
			}
			
		} // getData  
					
					
		// --------------------------------------------------------------------------------	
			
		private function executeWS(evento:String):void	{
	
			var nomUsuario:String = Application.application.usuario.username;
			var codEvento:String = Application.application.codEvento; 

			wsORQ.setearEndpoint(StringUtil.getValor("AppServerRootURL","VALOR")+StringUtil.getValor("endpointORQ","VALOR"));
			wsORQ.addWSSEGPortalFaultEventListener(getError);
			
			switch(evento)	{
				case "load":
					if (Application.application.codClienteDetalle != null)
						contenedor.title = contenedor.title  + " (Cod. Cliente: " + Application.application.codClienteDetalle.toString() + ")";
				
					showBusy();
					var codCliente:Number = parseInt(Application.application.codClienteDetalle);
					wsORQ.adddireccionesXCodClienteEventListener(getDataLoad);
					wsORQ.direccionesXCodCliente(codCliente, nomUsuario, codEvento);
					
					break;
					
				case "click":
					if (gridDirecciones.selectedItem != null)	{
						showBusy();
						//wsORQ.addgetDetalleDireccionEventListener(getDataClick);
						//wsORQ.getDetalleDireccion(gridDirecciones.selectedItem.codDireccion, gridDirecciones.selectedItem.codTipDireccion);
						var datosDireccionClienteINDTO:DatosDireccionClienteINDTO = new DatosDireccionClienteINDTO();
						datosDireccionClienteINDTO.codCliente = Application.application.codClienteDetalle;
						datosDireccionClienteINDTO.tipSujeto = parseInt("1");
						datosDireccionClienteINDTO.codTipDireccion = gridDirecciones.selectedItem.codTipDireccion;
						datosDireccionClienteINDTO.codDisplay = parseInt("2");
						datosDireccionClienteINDTO.conDescripcion = new Boolean(true);
						wsORQ.addobtenerDatosDireccionClienteEventListener(getDataDireccionClick);
						wsORQ.obtenerDatosDireccionCliente(datosDireccionClienteINDTO);
					} // if
			} // switch
			
		} // executeWS

		// --------------------------------------------------------------------------------			
	  	
	  	private function init():void {
			
			executeWS("load");
		} // init
	
		// --------------------------------------------------------------------------------
		
		private function cerrar():void {
			PopUpManager.removePopUp(this);
		} // cerrar
		
		// ----------------------------------------------------------------------------------------
		// Create by HGG 
		// Date 28-08-2009
		// Version 1.0
		// ----------------------------------------------------------------------------------------
		
		private function showBusy():void	{
	
		    popUpParent = Application.application.document;
		    popUpWindow = PopUpManager.createPopUp(popUpParent,searchingPopUpView,true);
			PopUpManager.centerPopUp(popUpWindow);
					
		} // showBusy
	
		]]>
	</mx:Script>
	
	<mx:Panel width="855" height="434.59998" layout="absolute" title="&gt;&gt; Direcciones del Cliente" fontSize="12" borderColor="#84B6DC" backgroundColor="#FFFFFF" horizontalCenter="0" alpha="1.0" borderAlpha="1.0" verticalCenter="-3" id="contenedor">
		<mx:Button x="733" y="351.55" label="Cerrar" width="92" height="31" fontSize="10" click="cerrar()">
			<mx:icon>@Embed(source='../../recursosInterfaz/imagenes/libIcons/16x16/close.png')</mx:icon>
		</mx:Button>
		
		<mx:AdvancedDataGrid resizableColumns="false" doubleClickEnabled="true" doubleClick="executeWS('click')"  dataProvider="{acLista}" id="gridDirecciones" width="300" fontSize="10" textAlign="left" height="282.4"  alpha="0.51" themeColor="#0D8AE1" backgroundColor="#CBE5F9" x="10" y="10">
			<mx:columns>
				<mx:AdvancedDataGridColumn headerText="Tipo" dataField="codTipDireccion" textAlign="right" paddingRight="5" width="80"/>
				<mx:AdvancedDataGridColumn headerText="DescripciÃ³n" dataField="desTipDireccion" paddingLeft="5" width="250"/>
				<mx:AdvancedDataGridColumn headerText="codDireccion" dataField="codDireccion" width="0"/>
			</mx:columns>
		</mx:AdvancedDataGrid>
							
		<!--mx:TextInput x="419.5" y="23.35" width="405" fontSize="10" editable="false" id="txtRegion" height="22"/-->
		<!--mx:TextInput x="419.5" y="79.35" width="405" fontSize="10" editable="false" id="txtCiudad"/-->
		<!--mx:Label text="Departamento" name="LBLManT0" id="LBLManT0" styleName="TituloCampo" x="328.5" y="25.35"/-->
		<!--mx:TextInput x="419.5" y="105.35" width="405" fontSize="10" editable="false" id="txtComuna" height="22"/>
		<mx:TextInput x="418.95" y="51.35" width="405" fontSize="10" editable="false" id="txtProvincia" height="22"/>
		<mx:TextInput x="420" y="140.35" width="405" fontSize="10" editable="false" id="txtCalle" height="18"/>
		<mx:TextInput x="421.5" y="220.35" width="150" fontSize="10" editable="false" id="txtNroExterno" height="22"/>
		<mx:TextInput x="421.45" y="246.35" width="150" fontSize="10" editable="false" id="txtNroInterno" height="22"/>
		<mx:TextInput x="421.45" y="276.35" width="150" fontSize="10" editable="false" id="txtCodPostal" height="22"/>
		<mx:TextInput x="421.5" y="168.35" width="374.95" fontSize="10" editable="true" id="txtComentarios" height="22" maxChars="30"/>
		<mx:TextInput x="421.5" y="194.35" width="374.95" fontSize="10" editable="true" id="txtComentarios1" height="22" maxChars="30"/-->
	</mx:Panel>
	
	<mx:ArrayCollection id="acLista" source="{ArrayUtil.toArray(dsGrid)}" />
		
</mx:Module>
