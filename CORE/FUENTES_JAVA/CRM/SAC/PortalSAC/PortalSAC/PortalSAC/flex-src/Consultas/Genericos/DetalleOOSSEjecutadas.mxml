<?xml version="1.0" encoding="utf-8"?>
<mx:Module xmlns:mx="http://www.adobe.com/2006/mxml" layout="absolute" width="536" height="441"  initialize="init();" >

<mx:Script>
<![CDATA[
	import generated.webservices.orquestador.GetDetalleClienteResultEvent;
	import mx.messaging.channels.StreamingAMFChannel;
	import mx.states.SetProperty;

	import mx.core.Application;
	import mx.controls.Alert;
	import mx.rpc.events.FaultEvent;
	import mx.collections.ArrayCollection;
	import mx.utils.ArrayUtil;
	import mx.managers.PopUpManager;
	import user.libreria.componentes.scrollbars.BarraDeProgreso2;
	import mx.managers.PopUpManager;
	import mx.core.IFlexDisplayObject;
	import flash.display.DisplayObject;
	
	import generated.webservices.orquestador.*;
	import user.libreria.clases.StringUtil;
	import user.libreria.clases.UtilDataGrid;
			
	import mx.events.ModuleEvent;
	import mx.events.CloseEvent;
    import mx.modules.ModuleManager;
   	import mx.modules.IModuleInfo;

	public var searchingPopUpView:Class = BarraDeProgreso2;
	public var popUpWindow:IFlexDisplayObject;
	public var popUpParent:DisplayObject;
	
	public var wsORQ:WSSEGPortal = new WSSEGPortal();
	[Bindable]
	public var dsGrid:Array = new Array();
	public var anchoColsGrid:Array = new Array();
	// Para setear desde afuera
	public static var nivel:String = "";
	public static var numOOSS:Number = 0;
	
	[Embed(source="/recursosInterfaz/imagenes/iconos/alert/warning.png")]
    public var iconWarning:Class; 		

	// --------------------------------------------------------------------------------
		
	private function getError(event:FaultEvent):void    {
		        
		PopUpManager.removePopUp(popUpWindow);
		
		Application.application.sesionFlagButon = false;
		
		if(flash.external.ExternalInterface.call('controlSession')) {
			
			/*
			var mensaje:String = new String();
			mensaje = event.fault.faultString + "\n" + event.fault.faultDetail;
	     	Alert.show(mensaje, "Error en la aplicaciÃ³n");
	     	*/
	     	
	     	var url:String = new String();
			url = StringUtil.getValor("urlApplicationLogout","VALOR");
			var urlLogout:URLRequest = new URLRequest(url);
			navigateToURL(urlLogout, "_top");
	     	
  		}
  		
	} // getError
	
	// --------------------------------------------------------------------------------
	
	// --------------------------------------------------------------------------------
								
	private function getData(event:ServSuplXOOSSResultEvent):void	{
	
		PopUpManager.removePopUp(popUpWindow);
		
		if(event.result.codError == '0'){
		
			if (event.result.arrayServSupl != null)	{
				dsGrid = event.result.arrayServSupl;
				anchoColsGrid = UtilDataGrid.anchosColumnas(gridSS);
			}else{	
				
				Alert.show( event.result.desError, 
							"Advertencia", 
							mx.controls.Alert.OK,
							this,
							closeHandler,
							iconWarning,
							mx.controls.Alert.OK );
			}
		
		}else{
			Alert.show( event.result.desError, 
							"Advertencia", 
							mx.controls.Alert.OK,
							this,
							closeHandler,
							iconWarning,
							mx.controls.Alert.OK );
		}
			
	} // getDataAbonadoPrepago  

	// --------------------------------------------------------------------------------
	
						
	// --------------------------------------------------------------------------------
	
	private function executeWS():void	{

	    popUpParent = Application.application.document;
	    popUpWindow = PopUpManager.createPopUp(popUpParent,searchingPopUpView,true);
		PopUpManager.centerPopUp(popUpWindow);
		wsORQ.setearEndpoint(StringUtil.getValor("AppServerRootURL","VALOR")+StringUtil.getValor("endpointORQ","VALOR"));
		wsORQ.addWSSEGPortalFaultEventListener(getError);

		// Datos generales del plan tarifario
		wsORQ.addservSuplXOOSSEventListener(getData);
		wsORQ.servSuplXOOSS(numOOSS);
		
	} // executeWS

	// --------------------------------------------------------------------------------			
  	
  	private function init():void {
 		executeWS();
	} // init

	// --------------------------------------------------------------------------------
	
	private function cerrar():void {
		PopUpManager.removePopUp(this);
	} // cerrar
	
	// --------------------------------------------------------------------------------
	private function closeHandler(e:CloseEvent):void	{
		cerrar();	
	} // closeHandler
	// --------------------------------------------------------------------------------	
	]]>
</mx:Script>	
	
<mx:Panel width="513" height="414" layout="absolute" title="&gt;&gt; Detalle OOSS Act/Des Ejecutadas" fontSize="12" borderColor="#84B6DC" backgroundColor="#FFFFFF" horizontalCenter="-2" alpha="1.0" borderAlpha="1.0" verticalCenter="-6">
	<mx:Button x="391" y="333" label="Cerrar" width="92" height="31" fontSize="10" click="cerrar()">
		<mx:icon>@Embed(source='../../recursosInterfaz/imagenes/libIcons/16x16/close.png')</mx:icon>
	</mx:Button>
		<mx:AdvancedDataGrid doubleClickEnabled="true"  resizableColumns="true" dataProvider="{ac}" id="gridSS" width="473" fontSize="10" textAlign="left" height="305.35"  alpha="0.51" themeColor="#0D8AE1" backgroundColor="#CBE5F9" selectionMode="multipleRows" x="10" y="19.65">
			<mx:columns>
				<mx:AdvancedDataGridColumn headerText="Codigo" dataField="codServSupl" paddingLeft="5" textAlign="center" width="70"/>			
				<mx:AdvancedDataGridColumn headerText="Descripcion" dataField="desServSupl" paddingLeft="5"  textAlign="center" width="150"/>
				<mx:AdvancedDataGridColumn headerText="Accion" dataField="accion" paddingLeft="5" width="150"  textAlign="center"/>
			</mx:columns>
		</mx:AdvancedDataGrid>
</mx:Panel>
<mx:ArrayCollection id="ac" source="{ArrayUtil.toArray(dsGrid)}" />
</mx:Module>
