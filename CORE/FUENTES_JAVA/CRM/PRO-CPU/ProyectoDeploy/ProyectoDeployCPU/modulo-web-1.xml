<project name="modulo" default="All" basedir=".">

	<!--Autor: Jimmy Alexander LÃ³pez Pereira-->
	<!--Fecha: 05-06-08-->
	<!--Version: 1.0-->

	<!-- Archivo de properties de un componente dado -->
	<property name="param.proyecto.properties" value="${value.proyecto.properties}" />

	<!-- Archivo de propiedades a setear -->
	<property file="general.properties" />
	<property file="system.properties" />
	<property file="componente.properties" />
	<property file="${param.proyecto.properties}" />

	<!--Libreria de utilidades -->

	<import file="${gvalue.plantilla.build.utility}" />

	<!-- Define la tarea ant contribucion,  el jar debe estar en la libreria de ant y de eclipse -->
	<taskdef resource="net/sf/antcontrib/antlib.xml">
		<classpath>
			<pathelement location="/usr/share/java/lib/ant-contrib-version.jar" />
		</classpath>
	</taskdef>



	<!-- Directorio raiz del proyecto o workspace hasta antes de Meta Data de eclipse -->
	<property name="param.value.proyecto.dir" value="${value.proyecto.dir}" />

	<!-- Nombre del modulo a generar -->
	<property name="param.value.modulo" value="${value.modulo}" />

	<!-- Directorio de generacion de clases compiladas -->
	<property name="param.value.build" value="${value.build}" />

	<!-- Directorio de la libreria del proyecto a generar -->
	<property name="param.value.build.lib" value="${value.build.lib}" />

	<!-- Indice de la iteracion de la compilacion -->
	<property name="param.iteracion.compilacion" value="${value.iteracion.compilacion}" />


	<!-- Directorio raiz del proyecto o workspace hasta antes de Meta Data de eclipse -->
	<property name="proyecto.dir" value="${param.value.proyecto.dir}" />


	<!-- Nombre del modulo a generar -->
	<property name="nombre.modulo" value="${param.value.modulo}" />

	<!-- Directorio de fuentes Java -->
	<property name="source" value="${proyecto.dir}/${nombre.modulo}" />

	<!-- Directorio de fuentes de paginas -->
	<property name="source.paginas" value="${source}/${gvalue.web.WebContent}" />

	<!-- Valor de la propiedad del modulo EAR a generar dinamico  'proyecto.ear'-->
	<propertycopy name="nombre.modulo.ear" from="${nombre.modulo}${gvalue.ear}" />

	<!-- Directorio de fuentes EAR dinamico -->
	<property name="source.ear" value="${proyecto.dir}/${nombre.modulo.ear}" />

	<!-- Directorio de generacion de clases compiladas -->
	<property name="build" value="${param.value.build}" />

	<!-- Directorio de generacion de clases compiladas para un modulo -->
	<property name="build.modulo" value="${build}/${nombre.modulo}" />

	<!-- Directorio de generacion de paginas para un modulo -->
	<property name="build.modulo.paginas" value="${build.modulo}/${gvalue.web.WebContent}" />

	<!-- Directorio EAR del proyecto  -->
	<property name="build.modulo.dir.ear" value="${build}/${gvalue.valor.ear}" />

	<!-- Directorio de generacion de ear dinamico -->
	<property name="build.modulo.ear" value="${build}/${nombre.modulo.ear}" />

	<!-- Directorio de librerias generadas (.jar) en cada compilacion de un modulo -->
	<property name="lib" value="${param.value.build.lib}" />

	<!-- Directorio de libreria J2EE -->
	<property name="lib.j2EE" value="${gvalue.lib.j2ee}" />

	<!-- valor de la propiedad dinamica de libreria local 'proyecto.dependencias.lib.local'  -->
	<propertycopy name="dependencias.lib.local" from="${nombre.modulo}${gvalue.lib.local}" />

	<!-- valor de la propiedad dinamica de libreria de App 'proyecto.dependencias.lib.app'  -->
	<propertycopy name="dependencias.lib.app" from="${nombre.modulo}${gvalue.lib.app}" />

	<!-- Directorio raiz donde comienzan a colocarse las clases de cada modulo -->
	<property name="classes.dir" value="${build.modulo}/${gvalue.deploy.classes}" />

	<!-- Nombre del jar de modulo server generado -->
	<property name="modulo.war.file.server" value="${lib}/${param.value.modulo}${gvalue.web.war}" />

	<!-- Librerias especificas de App Server -->
	<property name="app.server.lib" value="${gvalue.lib.servidor}" />

	<!-- Librerias especificas de App de build -->
	<property name="app.lib" value="${gvalue.app.lib}" />

	<!-- Define la tarea genjar -->
	<taskdef resource="genjar.properties" />

	<path id="classpath">
		<fileset dir="${app.server.lib}">
			<include name="**/*.jar" />
			<include name="**/*.zip" />
		</fileset>
	</path>
	<path id="classpath.general">
		<fileset dir="${lib.j2EE}">
			<include name="**/*.jar" />
			<include name="**/*.zip" />
		</fileset>
	</path>

	<path id="classpath.lib.generada">
		<fileset dir="${lib}">
			<include name="**/*.jar" />
			<include name="**/*.zip" />
		</fileset>
	</path>

	<path id="classpath.lib.app">
		<fileset dir="${app.lib}">
			<include name="**/*.jar" />
			<include name="**/*.zip" />
		</fileset>
	</path>

	<target name="clean" depends="Limpiar, GenerarModulo">
	</target>

	<target name="All" >
		<if>
			<equals arg1="${param.iteracion.compilacion}" arg2="0" />
			<then>
				<echo message="Iteracion cero se crean todas la estructuras de directorios" />
				<antcall target="clean">
				</antcall>
			</then>
			<else>
				<echo message="Iteracion distinta de cero no se crean todas la estructuras de directorios" />
				<antcall target="GenerarModulo">
				</antcall>
			</else>
		</if>
	</target>

	<!-- Muestra las variables de las properties -->
	<target name="Inicializar">
		<echo>Inicializando variables....</echo>
		<echo>
		Iteracion de compilacion[${param.iteracion.compilacion}]
		</echo>
		<echo>Directorio de Proyecto[${proyecto.dir}]</echo>
		<echo>Directorio de Proyecto EAR[${build.modulo.dir.ear}]</echo>
		<echo>Nombre de Modulo[${nombre.modulo}]</echo>
		<echo>Nombre de Modulo EAR[${nombre.modulo.ear}]</echo>
		<echo>Directorio de Fuentes[${source}]</echo>
		<echo>Directorio de Fuentes de paginas[${source.paginas}]</echo>
		<echo>Directorio de Fuentes de EAR[${source.ear}]</echo>
		<echo>
			Directorio de Construccion de modulo[${build.modulo}]
		</echo>

		<echo>
			Directorio de Construccion de paginas modulo[${build.modulo.paginas}]
		</echo>	
	
		<echo>
			Directorio de Construccion de modulo EAR[${build.modulo.ear}]
		</echo>
		<echo>
			Directorio de librerias generadas al compilar un modulo[${lib}]
		</echo>
		<echo>
			Nombre del war de modulo server a generar[${modulo.war.file.server}]
		</echo>

		<!-- Archivo de properties de un componente dado -->
		<echo>Properties J2EE[${param.proyecto.properties}]</echo>
		<echo>
			Directorio de libreria de aplicacion [${gvalue.app.lib}]
		</echo>
		<echo>
			Librerias de proyecto a generar [${dependencias.lib.local}]
		</echo>
		<echo>
			Librerias de aplicacion a generar [${dependencias.lib.app}]
		</echo>
		<echo>Librerias del App Server[${gvalue.lib.servidor}]</echo>
		<echo>Librerias J2EE[${gvalue.lib.j2ee}]</echo>
	</target>

	<!-- Borra el directorio build del modulo -->
	<target name="Limpiar">
		<echo>Borrando directorio ${build.modulo}</echo>
		<delete dir="${build.modulo}" />
	</target>

	<!-- Crea la estructura de directorios del modulo -->
	<target name="CrearDirectorios">
		<echo>Creando directorios...</echo>
		<mkdir dir="${build}" />
		<mkdir dir="${lib}" />
		<mkdir dir="${build.modulo}" />
		<mkdir dir="${build.modulo.paginas}" />
		<mkdir dir="${build.modulo.ear}" />
		<mkdir dir="${build.modulo.dir.ear}" />
		<mkdir dir="${classes.dir}" />
	</target>

	<!-- Compilacion de fuentes -->
	<target name="Compilar">
		<echo>Compilando fuentes...</echo>
		<property name="sourceNuevoWar" value="${source}/${gvalue.deploy.war.src}" />
		<echo>Directorio de Fuentes WAR [${sourceNuevoWar}]</echo>

		<javac destdir="${classes.dir}" deprecation="${gvalue.java.compiler.options.deprecation}" debug="${gvalue.java.compiler.options.debug}">
			<src path="${sourceNuevoWar}" />
			<classpath refid="classpath" />
			<classpath refid="classpath.general" />
			<classpath refid="classpath.lib.generada" />
			<classpath refid="classpath.lib.app" />
		</javac>
	</target>

	<!-- Copia recursos del War -->
	<target name="CopiarRecursosWar">
		<echo>Copiando archivo de recursos del War...</echo>
		<antcall target="CopiarRecursos">
			<param name="value.param.recursos" value="${gvalue.deploy.recurso.war.server}" />
			<param name="value.param.from" value="${sourceNuevoWar}" />
			<param name="value.param.to" value="${classes.dir}" />
		</antcall>
	</target>

	<!-- Copiar paginas al War -->
	<target name="CopiarPaginas">
		<echo>Copiando paginas al War...</echo>
		<antcall target="CopiarRecursos">
			<param name="value.param.recursos" value="${gvalue.deploy.recurso.war.paginas.server}" />
			<param name="value.param.from" value="${source.paginas}" />
			<param name="value.param.to" value="${build.modulo.paginas}" />
		</antcall>
	</target>


	<!-- Generacion del jar -->
	<target name="GenerarWar">
		<echo>Generando archivo War [${modulo.war.file.server}]...</echo>

		<war destfile="${modulo.war.file.server}" manifest="${source.paginas}/${gvalue.meta.inf}/${gvalue.manifest.mf}" webxml="${source.paginas}/${gvalue.web.WEB-INF}/${gvalue.web.web.xml}">
			<classes dir="${classes.dir}"/>
			<fileset dir="${build.modulo.paginas}">
			</fileset>
		</war>
	</target>

	<!-- Copia Librerias del proyecto al directorio del EAR -->
	<target name="CopiarlibreriasdeProyectoaEAR">
		<echo>Copiando Librerias del proyecto al EAR...</echo>
		<antcall target="CopiarRecursos">
			<param name="value.param.recursos" value="${dependencias.lib.local}" />
			<param name="value.param.from" value="${lib}" />
			<param name="value.param.to" value="${build.modulo.ear}" />
		</antcall>
	</target>

	<!-- Copia Librerias del proyecto al directorio del EAR -->
	<target name="CopiarlibreriasdeAplicacionaEAR">
		<echo>Copiando Librerias del aplicacion al EAR...</echo>
		<antcall target="CopiarRecursos">
			<param name="value.param.recursos" value="${dependencias.lib.app}" />
			<param name="value.param.from" value="${gvalue.app.lib}" />
			<param name="value.param.to" value="${build.modulo.ear}" />
		</antcall>
	</target>

	<!-- Copia Librerias J2EE al directorio del EAR -->
	<target name="CopiarlibreriasdeJ2EEaEAR">
		<echo>Copiando Librerias J2EE al EAR...</echo>
		<antcall target="CopiarRecursos">
			<param name="value.param.recursos" value="${gvalue.J2EE.lib}" />
			<param name="value.param.from" value="${gvalue.lib.j2ee}" />
			<param name="value.param.to" value="${build.modulo.ear}" />
		</antcall>
	</target>


	<!-- Generacion del EAR -->
	<target name="GenerarEAR">
		<echo>Generando archivo EAR [${build.modulo.ear}${gvalue.ear}]...</echo>
		<ear destfile="${build.modulo.dir.ear}/${nombre.modulo.ear}${gvalue.ear}" appxml="${source.ear}/${gvalue.EarContent}/${gvalue.meta.inf}/${gvalue.application.xml}">
			<fileset dir="${build.modulo.ear}" includes="${gvalue.includes.ear}" />
		</ear>
		<copy todir="${gvalue.build.ear}" file="${build.modulo.dir.ear}/${nombre.modulo.ear}${gvalue.ear}">
		</copy>
	</target>

	<!-- Generacion del modulo -->
	<target name="GenerarModulo" depends="Inicializar, CrearDirectorios, Compilar, CopiarRecursosWar, CopiarPaginas, GenerarWar,CopiarlibreriasdeProyectoaEAR, CopiarlibreriasdeAplicacionaEAR,CopiarlibreriasdeJ2EEaEAR,GenerarEAR">
	</target>

</project>