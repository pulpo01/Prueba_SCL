//
//
//  Generated by StarUML(tm) Java Add-In
//
//  @ Project : P-TMM-08004
//  @ File Name : CuotaDAO.java
//  @ Date : 09/09/2008
//  @ Author : hsegura
//
//

package com.tmmas.scl.framework.customerdomainfacturacion.CustomerBillABE.dao;

import java.sql.CallableStatement;
import java.sql.Connection;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.sql.Types;

import org.apache.commons.configuration.CompositeConfiguration;
import org.apache.log4j.Logger;

import com.tmmas.cl.framework.base.ConnectionDAO;
import com.tmmas.cl.framework20.util.UtilProperty;
import com.tmmas.scl.framework.CustomerDomain.exception.RateUsageRecordsException;
import com.tmmas.scl.framework.Sistema.dao.UsuarioDAO;
import com.tmmas.scl.framework.Sistema.helper.FacturaConnectionPool;
import com.tmmas.scl.framework.customerdomainfacturacion.CustomerBillABE.dao.Interface.CuotaDAOIT;

public class CuotaDAO extends ConnectionDAO implements CuotaDAOIT {
	private static FacturaConnectionPool myConnectionPool = FacturaConnectionPool
			.getInstance();

	private static Logger logger = Logger.getLogger(CuotaDAO.class);

	private CompositeConfiguration config;
	private long codigoError;
	private String msError;
	private long snEvento;
	public CuotaDAO() {
		super();
		config = UtilProperty
				.getConfiguration("ServicioFacturacionWS.properties",
						"com/tmmas/scl/framework/properties/archivorecursos.properties");
	}

	public boolean validarCantidadCuotas(long cantCuotas)
			throws RateUsageRecordsException {
		logger.debug("validarCantidadCuotas():start");
		Connection conn = null;
		ResultSet rs = null;
		PreparedStatement ps = null;
boolean resutl=false;
		CallableStatement cstmt = null;
		/**
		 * 
		 * FUNCTION FA_OBTENERCANTIDADCUOTAS_FN (
		 * 
		 * EN_NUMCUOTAS IN NUMBER,
		 * 
		 * SN_COD_RETORNO OUT NOCOPY NUMBER,
		 * 
		 * SV_MENS_RETORNO OUT NOCOPY VARCHAR2,
		 * 
		 * SN_NUM_EVENTO OUT NOCOPY NUMBER)
		 */
		String call = "{?=call FA_SERVICIOS_PG.FA_OBTENERCANTIDADCUOTAS_FN( ?,?,?,? ) }";
		logger.debug("Antes de obtener conexion");
		try {
			conn = getConnectionFromWLSInitialContext(myConnectionPool
					.getJndiForDataSource());
		} catch (Exception e1) {
			logger.debug("Exception de conexion", e1);
			throw new RateUsageRecordsException("-2129", 0,
					"No se pudo obtener una conexión : " + e1.getMessage());
		}

		try {
			logger.debug("Antes de ejecutar : " + call);

			cstmt = conn.prepareCall(call, ResultSet.TYPE_SCROLL_INSENSITIVE,
					ResultSet.CONCUR_READ_ONLY);
			logger.debug("Parámetros : ");
			logger.debug("EN_NUMCUOTAS [" + cantCuotas + "]");
			cstmt.registerOutParameter(1, Types.NUMERIC);
			cstmt.setLong(2, cantCuotas);
			cstmt.registerOutParameter(3, Types.NUMERIC);
			cstmt.registerOutParameter(4, Types.VARCHAR);
			cstmt.registerOutParameter(5, Types.NUMERIC);

			cstmt.execute();
			 codigoError = cstmt.getLong(3);
			 msError = cstmt.getString(4);
			 snEvento = cstmt.getLong(5);

			logger.debug("Despues de execute() ");
			logger.debug("Valor de  SN_ERROR [" + codigoError + "]");
			logger.debug("Valor de  SV_MENSAJE[" + msError + "]");
			logger.debug("Valor de  SN_EVENTO[" + snEvento + "]");

			if (codigoError == 0) {
				if (cstmt.getLong(1) == 1) {
					resutl= true;
				}else {
					resutl=false;
				}
					
			} else
				throw new RateUsageRecordsException(
						String.valueOf(codigoError), snEvento, "SQLException : "
								+ msError);
		} catch (SQLException e) {
			logger.debug("SQLException ", e);
			throw new RateUsageRecordsException(String
					.valueOf(e.getErrorCode()), snEvento, "SQLException : "
					+ e.getMessage());

		} finally {
			try {
				if (ps != null) {
					ps.close();
				}

				if (rs != null) {
					rs.close();
				}

				if (conn != null) {
					conn.close();
				}
			} catch (Exception e) {
				logger.debug("Exception ", e);
				throw new RateUsageRecordsException("-2129", 0, "Exception : "
						+ e.getMessage());
			}
		}
		logger.debug("validarCantidadCuotas():end");
		return resutl;

	}

}
