//
//
//  Generated by StarUML(tm) Java Add-In
//
//  @ Project : P-TMM-08004
//  @ File Name : ConfiguracionFacturacionDAO.java
//  @ Date : 09/09/2008
//  @ Author : hsegura
//
//

package com.tmmas.scl.framework.Sistema.dao;

import java.sql.CallableStatement;
import java.sql.Connection;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.sql.Types;

import oracle.jdbc.OracleTypes;

import org.apache.commons.configuration.CompositeConfiguration;
import org.apache.log4j.Logger;

import com.tmmas.cl.framework20.util.UtilProperty;
import com.tmmas.scl.framework.CustomerDomain.exception.RateUsageRecordsException;
import com.tmmas.scl.framework.Sistema.helper.FacturaConnectionPool;

public class ConfiguracionFacturacionDAO extends ConfiguracionSistemaDAO {
	private static FacturaConnectionPool myConnectionPool = FacturaConnectionPool
			.getInstance();

	private static Logger logger = Logger
			.getLogger(ConfiguracionSistemaDAO.class);

	private CompositeConfiguration config;
	private long codigoError;
	private String msError;
	private long snEvento;
	
	public ConfiguracionFacturacionDAO() {
		super();
		config = UtilProperty
				.getConfiguration("ServicioFacturacionWS.properties",
						"com/tmmas/scl/framework/properties/archivorecursos.properties");
	}

	public void obtenerParametrosFacturacion() {

	}

	public boolean validarPeriodoContable(String fechaVencimiento)
			throws RateUsageRecordsException {

		logger.debug("validarPeriodoContable():start");
		Connection conn = null;
		ResultSet rs = null;
		PreparedStatement ps = null;

		CallableStatement cstmt = null;
		/**
		 * PROCEDURE GE_REC_PARAM_FECHA_PR (
		 * 
		 * ev_cod_modulo IN ged_parametros.COD_MODULO%type,
		 * 
		 * en_cod_producto IN ged_parametros.COD_PRODUCTO%type,
		 * 
		 * SC_Fechas OUT NOCOPY refCursor,
		 * 
		 * SN_COD_RETORNO OUT NOCOPY NUMBER,
		 * 
		 * SV_MENS_RETORNO OUT NOCOPY VARCHAR2,
		 * 
		 * SN_NUM_EVENTO OUT NOCOPY NUMBER)
		 */
		String call = "{call GE_SISTEMA_PG.GE_REC_PARAM_FECHA_PR(?,?,?,?,?,?) }";

		logger.debug("Antes de obtener conexion");
		try {

			conn = getConnectionFromWLSInitialContext(myConnectionPool
					.getJndiForDataSource());

		} catch (Exception e1) {
			logger.debug("Exception de conexion", e1);
			throw new RateUsageRecordsException("-2129", 0,
					"No se pudo obtener una conexión : " + e1.getMessage());
		}

		try {
			logger.debug("Antes de ejecutar : " + call);

			cstmt = conn.prepareCall(call, ResultSet.TYPE_SCROLL_INSENSITIVE,
					ResultSet.CONCUR_READ_ONLY);
			logger.debug("Parámetros : ");
			logger.debug("COD_MODULO [" + config.getString("codmodulo") + "]");
			logger.debug("COD_PRODUCTO [" + config.getString("codproducto")
					+ "]");
			cstmt.setString(1, config.getString("codmodulo").trim());// usar
			// "GE"
			cstmt.setInt(2, Integer.parseInt(config.getString("codproducto")
					.trim())); // usar 1
			cstmt.registerOutParameter(3, OracleTypes.CURSOR);
			cstmt.registerOutParameter(4, Types.NUMERIC);
			cstmt.registerOutParameter(5, Types.VARCHAR);
			cstmt.registerOutParameter(6, Types.NUMERIC);
			cstmt.execute();

			 codigoError = cstmt.getLong(3);
			 msError = cstmt.getString(4);
			 snEvento = cstmt.getLong(5);

			logger.debug("Despues de execute() ");
			logger.debug("Valor de  SN_ERROR [" + codigoError + "]");
			logger.debug("Valor de  SV_MENSAJE[" + msError + "]");
			logger.debug("Valor de  SN_EVENTO[" + snEvento + "]");

			if (codigoError == 0) {

				rs = (ResultSet) cstmt.getObject(3);

				logger.debug("Antes de entrar a cursor  ");

				/*
				 * while (rs.next()) { System.out.print("NOM_PARAMETRO" +
				 * rs.getString("NOM_PARAMETRO"));
				 * System.out.print("VAL_PARAMETRO" +
				 * rs.getString("VAL_PARAMETRO"));
				 * System.out.print("DES_PARAMETRO" +
				 * rs.getString("DES_PARAMETRO")); }
				 */
			} else
				throw new RateUsageRecordsException(
						String.valueOf(codigoError),  snEvento, "SQLException : "
								+ msError);
		} catch (SQLException e) {
			logger.debug("SQLException ", e);
			throw new RateUsageRecordsException(String
					.valueOf(e.getErrorCode()),  snEvento, "SQLException : "
					+ e.getMessage());

		} finally {
			try {
				if (ps != null) {
					ps.close();
				}

				if (rs != null) {
					rs.close();
				}

				if (conn != null) {
					conn.close();
				}
			} catch (Exception e) {
				logger.debug("Exception ", e);
				throw new RateUsageRecordsException("-2129", 0, "Exception : "
						+ e.getMessage());
			}
		}
		logger.debug("validarPeriodoContable():end");
		return false;

	}
}
