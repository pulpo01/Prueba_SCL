#include <stdio.h>
#include <string.h>
#include <stdlib.h>
#include <sqlda.h>

#define INI_JOB         0
#define END_JOB         1
#define ERR_JOB         2
#define INI_PROFILE     3
#define END_PROFILE     4
#define ERR_PROFILE     5
#define blanco         32

exec sql include sqlca;

void trim(char *szpalabra, int iini, int ilargo,char *szvuelta)
{
    int ii,icr;
    szpalabra += iini - 1;
    for (ii=iini;ii<=(iini + ilargo -1);ii++)
    {
        if (*szpalabra != blanco)
           {
           *szvuelta = *szpalabra;
           szvuelta++;
           }
        szpalabra++;
    }
   *szvuelta = 0;
}


void fnMsgError(char *szMsg, int iErrNum, int bRollCom)
{
char msg[200];
/*size_t buf_len, msg_len;
buf_len = sizeof (msg);

        if (iErrNum != SqlNull) {
                printf("Aqui 1\n");
                if ((iErrNum != SqlOk) and (iErrNum != SqlNotFound)) {
                        printf("ERROR SQL : %d EN %s \n",iErrNum,szMsg);
                        sqlglm(msg, &buf_len, &msg_len);
                        printf("%.*s\n\n", msg_len, msg);
                        if (bRollCom)
                                exec sql rollback work;
                        exit(1);
                }
        }
*/
}

int main (int argc, char **argv)
{
 EXEC SQL BEGIN DECLARE SECTION;
 char uid[20]; exec sql var uid is string(20);
 char pwd[20]; exec sql var pwd is string(20);
 char cod_proc[11]; exec sql var cod_proc is string(11);
 char cod_spro[11]; exec sql var cod_spro is string(11);
 char cod_scri[10]; exec sql var cod_scri is string(10);
 char flag_ejec[10]; exec sql var flag_ejec is string(10);
 long int num_jobs;
 EXEC SQL END DECLARE SECTION;

 strcpy(uid,argv[1]);
 trim(uid,1,strlen(uid),uid);
 strcpy(pwd,argv[2]);
 trim(pwd,1,strlen(pwd),pwd);
 strcpy(cod_proc,argv[3]);
 trim(cod_proc,1,strlen(cod_proc),cod_proc);
 strcpy(cod_spro,argv[4]);
 trim(cod_spro,1,strlen(cod_spro),cod_spro);
 strcpy(cod_scri,argv[5]);
 trim(cod_scri,1,strlen(cod_scri),cod_scri);
 flag_ejec[0]='\0';

/*
        strcpy(uid,"tarifica");
        strcpy(pwd,"tarifica");
*/

        EXEC SQL CONNECT :uid IDENTIFIED BY :pwd;

	fnMsgError("Connect", sqlca.sqlcode, 0);

	EXEC SQL SELECT flg_ejecucion
	INTO :flag_ejec
	FROM sch_script
	WHERE   trim(cod_proc)   = :cod_proc AND
		trim(cod_subpro) = :cod_spro AND
		trim(cod_script) = :cod_scri;

	fnMsgError("Flg_Ejecucion", sqlca.sqlcode, 0);

	if (strcmp(flag_ejec, "S") == 0) 
        exit(1);
	else
	{
		printf(" No Ejecuta tarea <%s>\n",cod_scri);
		exit(0);
	}
}
